#!/usr/bin/env node
// Generated by purs bundle 0.14.5
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];
  var alt = function (dict) {
      return dict.alt;
  };
  exports["alt"] = alt;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var semigroupoidFn = {
      compose: function (f) {
          return function (g) {
              return function (x) {
                  return f(g(x));
              };
          };
      }
  };
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = {
      identity: function (x) {
          return x;
      },
      Semigroupoid0: function () {
          return Control_Semigroupoid.semigroupoidFn;
      }
  };
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];                    
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["on"] = on;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorArray = {
      map: $foreign.arrayMap
  };
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var applyArray = {
      apply: $foreign.arrayApply,
      Functor0: function () {
          return Data_Functor.functorArray;
      }
  };
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                  
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  var applicativeArray = {
      pure: function (x) {
          return [ x ];
      },
      Apply0: function () {
          return Control_Apply.applyArray;
      }
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
  exports["applicativeArray"] = applicativeArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];
  var empty = function (dict) {
      return dict.empty;
  };
  exports["empty"] = empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Unit = $PS["Data.Unit"];                
  var guard = function (dictAlternative) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty(dictAlternative.Plus1());
          };
          throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [ v.constructor.name ]);
      };
  };
  exports["guard"] = guard;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Function = $PS["Data.Function"];          
  var discard = function (dict) {
      return dict.discard;
  };
  var bindArray = {
      bind: $foreign.arrayBind,
      Apply0: function () {
          return Control_Apply.applyArray;
      }
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var discardUnit = {
      discard: function (dictBind) {
          return bind(dictBind);
      }
  };
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var liftM1 = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(f(a$prime));
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["liftM1"] = liftM1;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];                
  var throwError = function (dict) {
      return dict.throwError;
  };
  exports["throwError"] = throwError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];                
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = {
      map: function (f) {
          return function (m) {
              if (m instanceof Left) {
                  return new Left(m.value0);
              };
              if (m instanceof Right) {
                  return new Right(f(m.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [ m.constructor.name ]);
          };
      }
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["reflectSymbol"] = reflectSymbol;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var semigroupUnit = {
      append: function (v) {
          return function (v1) {
              return Data_Unit.unit;
          };
      }
  };
  var semigroupString = {
      append: $foreign.concatString
  };
  var semigroupRecordNil = {
      appendRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return {};
              };
          };
      }
  };
  var semigroupArray = {
      append: $foreign.concatArray
  };
  var appendRecord = function (dict) {
      return dict.appendRecord;
  };
  var semigroupRecord = function (dictRowToList) {
      return function (dictSemigroupRecord) {
          return {
              append: appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)
          };
      };
  };
  var append = function (dict) {
      return dict.append;
  };
  var semigroupRecordCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictSemigroupRecord) {
              return function (dictSemigroup) {
                  return {
                      appendRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var tail = appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var insert = Record_Unsafe.unsafeSet(key);
                                  var get = Record_Unsafe.unsafeGet(key);
                                  return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupArray"] = semigroupArray;
  exports["semigroupRecord"] = semigroupRecord;
  exports["semigroupRecordNil"] = semigroupRecordNil;
  exports["semigroupRecordCons"] = semigroupRecordCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];            
  var ExceptT = function (x) {
      return x;
  };
  var withExceptT = function (dictFunctor) {
      return function (f) {
          return function (v) {
              var mapLeft = function (v1) {
                  return function (v2) {
                      if (v2 instanceof Data_Either.Right) {
                          return new Data_Either.Right(v2.value0);
                      };
                      if (v2 instanceof Data_Either.Left) {
                          return new Data_Either.Left(v1(v2.value0));
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 43, column 3 - line 43, column 32): " + [ v1.constructor.name, v2.constructor.name ]);
                  };
              };
              return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
          };
      };
  };
  var runExceptT = function (v) {
      return v;
  };
  var monadTransExceptT = {
      lift: function (dictMonad) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
              });
          };
      }
  };
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return {
          map: function (f) {
              return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
          }
      };
  };
  var monadExceptT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeExceptT(dictMonad);
          },
          Bind1: function () {
              return bindExceptT(dictMonad);
          }
      };
  };
  var bindExceptT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (k) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                      var $91 = Control_Applicative.pure(dictMonad.Applicative0());
                      return function ($92) {
                          return $91(Data_Either.Left.create($92));
                      };
                  })())(function (a) {
                      var v1 = k(a);
                      return v1;
                  }));
              };
          },
          Apply0: function () {
              return applyExceptT(dictMonad);
          }
      };
  };
  var applyExceptT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadExceptT(dictMonad)),
          Functor0: function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeExceptT = function (dictMonad) {
      return {
          pure: (function () {
              var $93 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($94) {
                  return ExceptT($93(Data_Either.Right.create($94)));
              };
          })(),
          Apply0: function () {
              return applyExceptT(dictMonad);
          }
      };
  };
  var monadThrowExceptT = function (dictMonad) {
      return {
          throwError: (function () {
              var $103 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($104) {
                  return ExceptT($103(Data_Either.Left.create($104)));
              };
          })(),
          Monad0: function () {
              return monadExceptT(dictMonad);
          }
      };
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return {
              alt: function (v) {
                  return function (v1) {
                      return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
                          if (rm instanceof Data_Either.Right) {
                              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                          };
                          if (rm instanceof Data_Either.Left) {
                              return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
                                  if (rn instanceof Data_Either.Right) {
                                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                                  };
                                  if (rn instanceof Data_Either.Left) {
                                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                                  };
                                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [ rn.constructor.name ]);
                              });
                          };
                          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [ rm.constructor.name ]);
                      });
                  };
              },
              Functor0: function () {
                  return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
              }
          };
      };
  };
  exports["runExceptT"] = runExceptT;
  exports["withExceptT"] = withExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadTransExceptT"] = monadTransExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];              
  var Identity = function (x) {
      return x;
  };
  var functorIdentity = {
      map: function (f) {
          return function (m) {
              return f(m);
          };
      }
  };
  var applyIdentity = {
      apply: function (v) {
          return function (v1) {
              return v(v1);
          };
      },
      Functor0: function () {
          return functorIdentity;
      }
  };
  var bindIdentity = {
      bind: function (v) {
          return function (f) {
              return f(v);
          };
      },
      Apply0: function () {
          return applyIdentity;
      }
  };
  var applicativeIdentity = {
      pure: Identity,
      Apply0: function () {
          return applyIdentity;
      }
  };
  var monadIdentity = {
      Applicative0: function () {
          return applicativeIdentity;
      },
      Bind1: function () {
          return bindIdentity;
      }
  };
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Safe.Coerce"] = $PS["Safe.Coerce"] || {};
  var exports = $PS["Safe.Coerce"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var coerce = function (dictCoercible) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["coerce"] = coerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Safe_Coerce = $PS["Safe.Coerce"];                
  var wrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  var unwrap = function (dictNewtype) {
      return Safe_Coerce.coerce();
  };
  var un = function (dictNewtype) {
      return function (v) {
          return unwrap();
      };
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return Safe_Coerce.coerce();
          };
      };
  };
  var alaF = function (dictCoercible) {
      return function (dictCoercible1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return Safe_Coerce.coerce();
                  };
              };
          };
      };
  };
  var ala = function (dictCoercible) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (v) {
                  return function (f) {
                      return Safe_Coerce.coerce()(f(wrap()));
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["un"] = un;
  exports["ala"] = ala;
  exports["alaF"] = alaF;
  exports["over"] = over;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap();
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
  exports["withExcept"] = withExcept;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];      
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var bifunctorStep = {
      bimap: function (v) {
          return function (v1) {
              return function (v2) {
                  if (v2 instanceof Loop) {
                      return new Loop(v(v2.value0));
                  };
                  if (v2 instanceof Done) {
                      return new Done(v1(v2.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
              };
          };
      }
  };
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["tailRecM"] = tailRecM;
  exports["bifunctorStep"] = bifunctorStep;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;   
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var eqString = {
      eq: $foreign.eqStringImpl
  };
  var eqInt = {
      eq: $foreign.eqIntImpl
  };
  var eqChar = {
      eq: $foreign.eqCharImpl
  };
  var eqBoolean = {
      eq: $foreign.eqBooleanImpl
  };
  var eq = function (dict) {
      return dict.eq;
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var not = function (dict) {
      return dict.not;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = {
      ff: false,
      tt: true,
      implies: function (a) {
          return function (b) {
              return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
          };
      },
      conj: $foreign.boolConj,
      disj: $foreign.boolDisj,
      not: $foreign.boolNot
  };
  exports["ff"] = ff;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var semigroupMaybe = function (dictSemigroup) {
      return {
          append: function (v) {
              return function (v1) {
                  if (v instanceof Nothing) {
                      return v1;
                  };
                  if (v1 instanceof Nothing) {
                      return v;
                  };
                  if (v instanceof Just && v1 instanceof Just) {
                      return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
                  };
                  throw new Error("Failed pattern match at Data.Maybe (line 185, column 1 - line 188, column 43): " + [ v.constructor.name, v1.constructor.name ]);
              };
          }
      };
  };
  var monoidMaybe = function (dictSemigroup) {
      return {
          mempty: Nothing.value,
          Semigroup0: function () {
              return semigroupMaybe(dictSemigroup);
          }
      };
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Just) {
                  return new Just(v(v1.value0));
              };
              return Nothing.value;
          };
      }
  };
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [ v.constructor.name ]);
      };
  };
  var eqMaybe = function (dictEq) {
      return {
          eq: function (x) {
              return function (y) {
                  if (x instanceof Nothing && y instanceof Nothing) {
                      return true;
                  };
                  if (x instanceof Just && y instanceof Just) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  return false;
              };
          }
      };
  };
  var applyMaybe = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return Data_Functor.map(functorMaybe)(v.value0)(v1);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var bindMaybe = {
      bind: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return v1(v.value0);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Apply0: function () {
          return applyMaybe;
      }
  };
  var applicativeMaybe = {
      pure: Just.create,
      Apply0: function () {
          return applyMaybe;
      }
  };
  var altMaybe = {
      alt: function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              return v;
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var plusMaybe = {
      empty: Nothing.value,
      Alt0: function () {
          return altMaybe;
      }
  };
  var alternativeMaybe = {
      Applicative0: function () {
          return applicativeMaybe;
      },
      Plus1: function () {
          return plusMaybe;
      }
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monoidMaybe"] = monoidMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Maybe.First"] = $PS["Data.Maybe.First"] || {};
  var exports = $PS["Data.Maybe.First"];
  var Data_Maybe = $PS["Data.Maybe"];
  var semigroupFirst = {
      append: function (v) {
          return function (v1) {
              if (v instanceof Data_Maybe.Just) {
                  return v;
              };
              return v1;
          };
      }
  };
  var monoidFirst = {
      mempty: Data_Maybe.Nothing.value,
      Semigroup0: function () {
          return semigroupFirst;
      }
  };
  exports["monoidFirst"] = monoidFirst;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var monoidUnit = {
      mempty: Data_Unit.unit,
      Semigroup0: function () {
          return Data_Semigroup.semigroupUnit;
      }
  };
  var monoidString = {
      mempty: "",
      Semigroup0: function () {
          return Data_Semigroup.semigroupString;
      }
  };
  var monoidRecordNil = {
      memptyRecord: function (v) {
          return {};
      },
      SemigroupRecord0: function () {
          return Data_Semigroup.semigroupRecordNil;
      }
  };
  var monoidArray = {
      mempty: [  ],
      Semigroup0: function () {
          return Data_Semigroup.semigroupArray;
      }
  };
  var memptyRecord = function (dict) {
      return dict.memptyRecord;
  };
  var monoidRecord = function (dictRowToList) {
      return function (dictMonoidRecord) {
          return {
              mempty: memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value),
              Semigroup0: function () {
                  return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
              }
          };
      };
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidRecordCons = function (dictIsSymbol) {
      return function (dictMonoid) {
          return function (dictCons) {
              return function (dictMonoidRecord) {
                  return {
                      memptyRecord: function (v) {
                          var tail = memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value);
                          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                          var insert = Record_Unsafe.unsafeSet(key);
                          return insert(mempty(dictMonoid))(tail);
                      },
                      SemigroupRecord0: function () {
                          return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                      }
                  };
              };
          };
      };
  };
  exports["mempty"] = mempty;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
  exports["monoidRecord"] = monoidRecord;
  exports["monoidRecordNil"] = monoidRecordNil;
  exports["monoidRecordCons"] = monoidRecordCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
              };
          }
      };
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return {
          mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
          Semigroup0: function () {
              return semigroupDisj(dictHeytingAlgebra);
          }
      };
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var foldr = function (dict) {
      return dict.foldr;
  };
  var oneOf = function (dictFoldable) {
      return function (dictPlus) {
          return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = {
      foldr: $foreign.foldrArray,
      foldl: $foreign.foldlArray,
      foldMap: function (dictMonoid) {
          return foldMapDefaultR(foldableArray)(dictMonoid);
      }
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var lookup = function (dictFoldable) {
      return function (dictEq) {
          return function (a) {
              var $323 = Data_Newtype.unwrap();
              var $324 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                  var $305 = Data_Eq.eq(dictEq)(a)(v.value0);
                  if ($305) {
                      return new Data_Maybe.Just(v.value1);
                  };
                  return Data_Maybe.Nothing.value;
              });
              return function ($325) {
                  return $323($324($325));
              };
          };
      };
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $326 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $327 = Data_Eq.eq(dictEq);
          return function ($328) {
              return $326($327($328));
          };
      };
  };
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["fold"] = fold;
  exports["oneOf"] = oneOf;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["lookup"] = lookup;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();                                                                
  var foldableList = {
      foldr: function (f) {
          return function (b) {
              var rev = (function () {
                  var go = function ($copy_acc) {
                      return function ($copy_v) {
                          var $tco_var_acc = $copy_acc;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(acc, v) {
                              if (v instanceof Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v instanceof Cons) {
                                  $tco_var_acc = new Cons(v.value0, acc);
                                  $copy_v = v.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [ acc.constructor.name, v.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_acc, $copy_v);
                          };
                          return $tco_result;
                      };
                  };
                  return go(Nil.value);
              })();
              var $205 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
              return function ($206) {
                  return $205(rev($206));
              };
          };
      },
      foldl: function (f) {
          var go = function ($copy_b) {
              return function ($copy_v) {
                  var $tco_var_b = $copy_b;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(b, v) {
                      if (v instanceof Nil) {
                          $tco_done1 = true;
                          return b;
                      };
                      if (v instanceof Cons) {
                          $tco_var_b = f(b)(v.value0);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_b, $copy_v);
                  };
                  return $tco_result;
              };
          };
          return go;
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return Data_Foldable.foldl(foldableList)(function (acc) {
                  var $207 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                  return function ($208) {
                      return $207(f($208));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      }
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["foldableList"] = foldableList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var semigroupTuple = function (dictSemigroup) {
      return function (dictSemigroup1) {
          return {
              append: function (v) {
                  return function (v1) {
                      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
                  };
              }
          };
      };
  };
  var monoidTuple = function (dictMonoid) {
      return function (dictMonoid1) {
          return {
              mempty: new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)),
              Semigroup0: function () {
                  return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
              }
          };
      };
  };
  var fst = function (v) {
      return v.value0;
  };
  var curry = function (f) {
      return function (a) {
          return function (b) {
              return f(new Tuple(a, b));
          };
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["curry"] = curry;
  exports["uncurry"] = uncurry;
  exports["monoidTuple"] = monoidTuple;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var unfoldable1Array = {
      unfoldr1: $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd)
  };
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = {
      unfoldr: $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd),
      Unfoldable10: function () {
          return Data_Unfoldable1.unfoldable1Array;
      }
  };
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                  
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 263, column 1 - line 263, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 249, column 1 - line 249, column 43): " + [ v.constructor.name ]);
  };
  var span = function (v) {
      return function (v1) {
          if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
              var v2 = span(v)(v1.value1);
              return {
                  init: new Data_List_Types.Cons(v1.value0, v2.init),
                  rest: v2.rest
              };
          };
          return {
              init: Data_List_Types.Nil.value,
              rest: v1
          };
      };
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var unsnoc = function (lst) {
      var go = function ($copy_v) {
          return function ($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return new Data_Maybe.Just({
                          revInit: v1,
                          last: v.value0
                      });
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_v = v.value1;
                      $copy_v1 = new Data_List_Types.Cons(v.value0, v1);
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 274, column 3 - line 274, column 21): " + [ v.constructor.name, v1.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_v1);
              };
              return $tco_result;
          };
      };
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
          return {
              init: reverse(h.revInit),
              last: h.last
          };
      })(go(lst)(Data_List_Types.Nil.value));
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };    
  var last = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_List_Types.Cons) {
              $copy_v = v.value1;
              return;
          };
          $tco_done = true;
          return Data_Maybe.Nothing.value;
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var init = function (lst) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return v.init;
      })(unsnoc(lst));
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 234, column 1 - line 234, column 22): " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["null"] = $$null;
  exports["reverse"] = reverse;
  exports["span"] = span;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done1 = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done1 = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done1) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $45 = Data_CatQueue["null"](v.value1);
              if ($45) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = {
      append: append
  };
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["empty"] = empty;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var resume$prime = function (k) {
      return function (j) {
          return function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return j(v.value0);
              };
              if (v instanceof Bind) {
                  return k(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): " + [ v.constructor.name ]);
          };
      };
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = {
      Applicative0: function () {
          return freeApplicative;
      },
      Bind1: function () {
          return freeBind;
      }
  };
  var freeFunctor = {
      map: function (k) {
          return function (f) {
              return Control_Bind.bindFlipped(freeBind)((function () {
                  var $119 = Control_Applicative.pure(freeApplicative);
                  return function ($120) {
                      return $119(k($120));
                  };
              })())(f);
          };
      }
  };
  var freeBind = {
      bind: function (v) {
          return function (k) {
              return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
          };
      },
      Apply0: function () {
          return freeApply;
      }
  };
  var freeApply = {
      apply: Control_Monad.ap(freeMonad),
      Functor0: function () {
          return freeFunctor;
      }
  };
  var freeApplicative = {
      pure: function ($121) {
          return fromView(Return.create($121));
      },
      Apply0: function () {
          return freeApply;
      }
  };
  var freeMonadRec = {
      tailRecM: function (k) {
          return function (a) {
              return Control_Bind.bind(freeBind)(k(a))(function (v) {
                  if (v instanceof Control_Monad_Rec_Class.Loop) {
                      return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
                  };
                  if (v instanceof Control_Monad_Rec_Class.Done) {
                      return Control_Applicative.pure(freeApplicative)(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free (line 86, column 26 - line 88, column 21): " + [ v.constructor.name ]);
              });
          };
      },
      Monad0: function () {
          return freeMonad;
      }
  };
  var liftF = function (f) {
      return fromView(new Bind(f, (function () {
          var $122 = Control_Applicative.pure(freeApplicative);
          return function ($123) {
              return $122($123);
          };
      })()));
  };
  exports["liftF"] = liftF;
  exports["resume'"] = resume$prime;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeMonadRec"] = freeMonadRec;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Reader"] = $PS["Control.Monad.Reader"] || {};
  var exports = $PS["Control.Monad.Reader"];
  var Data_Newtype = $PS["Data.Newtype"];                 
  var runReader = function (v) {
      var $2 = Data_Newtype.unwrap();
      return function ($3) {
          return $2(v($3));
      };
  };
  exports["runReader"] = runReader;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Reader.Class"] = $PS["Control.Monad.Reader.Class"] || {};
  var exports = $PS["Control.Monad.Reader.Class"];
  var ask = function (dict) {
      return dict.ask;
  };
  exports["ask"] = ask;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Reader.Trans"] = $PS["Control.Monad.Reader.Trans"] || {};
  var exports = $PS["Control.Monad.Reader.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var ReaderT = function (x) {
      return x;
  };
  var runReaderT = function (v) {
      return v;
  };
  var monadTransReaderT = {
      lift: function (dictMonad) {
          return function ($64) {
              return ReaderT(Data_Function["const"]($64));
          };
      }
  };
  var mapReaderT = function (f) {
      return function (v) {
          return function ($65) {
              return f(v($65));
          };
      };
  };
  var functorReaderT = function (dictFunctor) {
      return {
          map: (function () {
              var $66 = Data_Functor.map(dictFunctor);
              return function ($67) {
                  return mapReaderT($66($67));
              };
          })()
      };
  };
  var applyReaderT = function (dictApply) {
      return {
          apply: function (v) {
              return function (v1) {
                  return function (r) {
                      return Control_Apply.apply(dictApply)(v(r))(v1(r));
                  };
              };
          },
          Functor0: function () {
              return functorReaderT(dictApply.Functor0());
          }
      };
  };
  var bindReaderT = function (dictBind) {
      return {
          bind: function (v) {
              return function (k) {
                  return function (r) {
                      return Control_Bind.bind(dictBind)(v(r))(function (a) {
                          var v1 = k(a);
                          return v1(r);
                      });
                  };
              };
          },
          Apply0: function () {
              return applyReaderT(dictBind.Apply0());
          }
      };
  };
  var applicativeReaderT = function (dictApplicative) {
      return {
          pure: (function () {
              var $71 = Control_Applicative.pure(dictApplicative);
              return function ($72) {
                  return ReaderT(Data_Function["const"]($71($72)));
              };
          })(),
          Apply0: function () {
              return applyReaderT(dictApplicative.Apply0());
          }
      };
  };
  var monadReaderT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeReaderT(dictMonad.Applicative0());
          },
          Bind1: function () {
              return bindReaderT(dictMonad.Bind1());
          }
      };
  };
  var monadAskReaderT = function (dictMonad) {
      return {
          ask: Control_Applicative.pure(dictMonad.Applicative0()),
          Monad0: function () {
              return monadReaderT(dictMonad);
          }
      };
  };
  exports["runReaderT"] = runReaderT;
  exports["mapReaderT"] = mapReaderT;
  exports["functorReaderT"] = functorReaderT;
  exports["applyReaderT"] = applyReaderT;
  exports["applicativeReaderT"] = applicativeReaderT;
  exports["bindReaderT"] = bindReaderT;
  exports["monadReaderT"] = monadReaderT;
  exports["monadTransReaderT"] = monadTransReaderT;
  exports["monadAskReaderT"] = monadAskReaderT;
})(PS);
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifyImpl = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (a) {
    return function (ref) {
      return function () {
        return ref.value = a; // eslint-disable-line no-return-assign
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"]; 
  var modify$prime = $foreign.modifyImpl;
  var modify = function (f) {
      return modify$prime(function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var functorST = {
      map: $foreign.map_
  };
  exports["modify"] = modify;
  exports["functorST"] = functorST;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["get"] = get;
  exports["put"] = put;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];                    
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };
  var monadTransStateT = {
      lift: function (dictMonad) {
          return function (m) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(m)(function (x) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
                  });
              };
          };
      }
  };
  var functorStateT = function (dictFunctor) {
      return {
          map: function (f) {
              return function (v) {
                  return function (s) {
                      return Data_Functor.map(dictFunctor)(function (v1) {
                          return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                      })(v(s));
                  };
              };
          }
      };
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeStateT(dictMonad);
          },
          Bind1: function () {
              return bindStateT(dictMonad);
          }
      };
  };
  var bindStateT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (f) {
                  return function (s) {
                      return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                          var v3 = f(v1.value0);
                          return v3(v1.value1);
                      });
                  };
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var applyStateT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadStateT(dictMonad)),
          Functor0: function () {
              return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeStateT = function (dictMonad) {
      return {
          pure: function (a) {
              return function (s) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var monadStateStateT = function (dictMonad) {
      return {
          state: function (f) {
              return StateT((function () {
                  var $113 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($114) {
                      return $113(f($114));
                  };
              })());
          },
          Monad0: function () {
              return monadStateT(dictMonad);
          }
      };
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadTransStateT"] = monadTransStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };

  var replicateFill = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unconsImpl = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortByImpl = (function () {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
      var mid;
      var i;
      var j;
      var k;
      var x;
      var y;
      var c;

      mid = from + ((to - from) >> 1);
      if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
      if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);

      i = from;
      j = mid;
      k = from;
      while (i < mid && j < to) {
        x = xs2[i];
        y = xs2[j];
        c = fromOrdering(compare(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        }
        else {
          xs1[k++] = x;
          ++i;
        }
      }
      while (i < mid) {
        xs1[k++] = xs2[i++];
      }
      while (j < to) {
        xs1[k++] = xs2[j++];
      }
    }

    return function (compare) {
      return function (fromOrdering) {
        return function (xs) {
          var out;

          if (xs.length < 2) return xs;

          out = xs.slice(0);
          mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);

          return out;
        };
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return [];
  };

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.unsafeFreeze = function (xs) {
    return function () {
      return xs;
    };
  };
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["push"] = push;
  exports["new"] = $foreign["new"];
  exports["unsafeFreeze"] = $foreign.unsafeFreeze;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Array.ST.Iterator"] = $PS["Data.Array.ST.Iterator"] || {};
  var exports = $PS["Data.Array.ST.Iterator"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Iterator = (function () {
      function Iterator(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Iterator.create = function (value0) {
          return function (value1) {
              return new Iterator(value0, value1);
          };
      };
      return Iterator;
  })();
  var peek = function (v) {
      return function __do() {
          var i = Control_Monad_ST_Internal.read(v.value1)();
          return v.value0(i);
      };
  };
  var next = function (v) {
      return function __do() {
          var i = Control_Monad_ST_Internal.read(v.value1)();
          Control_Monad_ST_Internal.modify(function (v1) {
              return v1 + 1 | 0;
          })(v.value1)();
          return v.value0(i);
      };
  };
  var pushWhile = function (p) {
      return function (iter) {
          return function (array) {
              return function __do() {
                  var $$break = Control_Monad_ST_Internal["new"](false)();
                  while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
                      (function __do() {
                          var mx = peek(iter)();
                          if (mx instanceof Data_Maybe.Just && p(mx.value0)) {
                              Data_Array_ST.push(mx.value0)(array)();
                              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
                          };
                          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
                      })();
                  };
                  return {};
              };
          };
      };
  };                                                    
  var iterator = function (f) {
      return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
  };
  var iterate = function (iter) {
      return function (f) {
          return function __do() {
              var $$break = Control_Monad_ST_Internal["new"](false)();
              while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
                  (function __do() {
                      var mx = next(iter)();
                      if (mx instanceof Data_Maybe.Just) {
                          return f(mx.value0)();
                      };
                      if (mx instanceof Data_Maybe.Nothing) {
                          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
                      };
                      throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [ mx.constructor.name ]);
                  })();
              };
              return {};
          };
      };
  };
  exports["iterator"] = iterator;
  exports["iterate"] = iterate;
  exports["pushWhile"] = pushWhile;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var ordString = {
      compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqString;
      }
  };
  var ordInt = {
      compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqInt;
      }
  };
  var ordChar = {
      compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqChar;
      }
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return x;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  exports["compare"] = compare;
  exports["greaterThan"] = greaterThan;
  exports["min"] = min;
  exports["max"] = max;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = $PS["Data.Array.ST.Iterator"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var sortBy = function (comp) {
      return $foreign.sortByImpl(comp)(function (v) {
          if (v instanceof Data_Ordering.GT) {
              return 1;
          };
          if (v instanceof Data_Ordering.EQ) {
              return 0;
          };
          if (v instanceof Data_Ordering.LT) {
              return -1 | 0;
          };
          throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [ v.constructor.name ]);
      });
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };                                                                                     
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var unsnoc = function (xs) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return function (v1) {
              return {
                  init: v,
                  last: v1
              };
          };
      })(init(xs)))(last(xs));
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var groupBy = function (op) {
      return function (xs) {
          return (function __do() {
              var result = Data_Array_ST["new"]();
              var iter = Data_Array_ST_Iterator.iterator(function (v) {
                  return index(xs)(v);
              })();
              Data_Array_ST_Iterator.iterate(iter)(function (x) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do() {
                      var sub = Data_Array_ST["new"]();
                      Data_Array_ST.push(x)(sub)();
                      Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub)();
                      var grp = Data_Array_ST.unsafeFreeze(sub)();
                      return Data_Array_ST.push(grp)(result)();
                  });
              })();
              return Data_Array_ST.unsafeFreeze(result)();
          })();
      };
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
  var fold = function (dictMonoid) {
      return Data_Foldable.fold(Data_Foldable.foldableArray)(dictMonoid);
  };
  var drop = function (n) {
      return function (xs) {
          var $89 = n < 1;
          if ($89) {
              return xs;
          };
          return $foreign.slice(n)($foreign.length(xs))(xs);
      };
  };
  var cons = function (x) {
      return function (xs) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ x ])(xs);
      };
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $109 = Data_Maybe.maybe([  ])(singleton);
          return function ($110) {
              return $109(f($110));
          };
      })());
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["null"] = $$null;
  exports["cons"] = cons;
  exports["head"] = head;
  exports["last"] = last;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["index"] = index;
  exports["catMaybes"] = catMaybes;
  exports["mapWithIndex"] = mapWithIndex;
  exports["foldr"] = foldr;
  exports["fold"] = fold;
  exports["sort"] = sort;
  exports["drop"] = drop;
  exports["groupBy"] = groupBy;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
  exports["reverse"] = $foreign.reverse;
  exports["filter"] = $foreign.filter;
  exports["slice"] = $foreign.slice;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Array.NonEmpty.Internal"] = $PS["Data.Array.NonEmpty.Internal"] || {};
  var exports = $PS["Data.Array.NonEmpty.Internal"];             
  var NonEmptyArray = function (x) {
      return x;
  };
  exports["NonEmptyArray"] = NonEmptyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];               
  var unsafeFromArray = Data_Array_NonEmpty_Internal.NonEmptyArray;
  var toArray = function (v) {
      return v;
  };
  var fromArray = function (xs) {
      if (Data_Array.length(xs) > 0) {
          return new Data_Maybe.Just(unsafeFromArray(xs));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Array.NonEmpty (line 159, column 1 - line 159, column 58): " + [ xs.constructor.name ]);
  };
  var adaptMaybe = function (f) {
      var $75 = Data_Maybe.fromJust();
      return function ($76) {
          return $75(f(toArray($76)));
      };
  };                                     
  var uncons = adaptMaybe(Data_Array.uncons);
  var adaptAny = function (f) {
      return function ($78) {
          return f(toArray($78));
      };
  };                                     
  var length = adaptAny(Data_Array.length);
  exports["fromArray"] = fromArray;
  exports["uncons"] = uncons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];               
  var bimap = function (dict) {
      return dict.bimap;
  };
  exports["bimap"] = bimap;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];
  var top = function (dict) {
      return dict.top;
  };
  var boundedInt = {
      top: $foreign.topInt,
      bottom: $foreign.bottomInt,
      Ord0: function () {
          return Data_Ord.ordInt;
      }
  };
  var boundedChar = {
      top: $foreign.topChar,
      bottom: $foreign.bottomChar,
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var semiringInt = {
      add: $foreign.intAdd,
      zero: 0,
      mul: $foreign.intMul,
      one: 1
  };
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var ringInt = {
      sub: $foreign.intSub,
      Semiring0: function () {
          return Data_Semiring.semiringInt;
      }
  };
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var commutativeRingInt = {
      Ring0: function () {
          return Data_Ring.ringInt;
      }
  };
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $55 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($55) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = {
      succ: defaultSucc(charToEnum)($foreign.toCharCode),
      pred: defaultPred(charToEnum)($foreign.toCharCode),
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var boundedEnumChar = {
      cardinality: $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0,
      toEnum: charToEnum,
      fromEnum: $foreign.toCharCode,
      Bounded0: function () {
          return Data_Bounded.boundedChar;
      },
      Enum1: function () {
          return enumChar;
      }
  };
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var mod = function (dict) {
      return dict.mod;
  };
  var euclideanRingInt = {
      degree: $foreign.intDegree,
      div: $foreign.intDiv,
      mod: $foreign.intMod,
      CommutativeRing0: function () {
          return Data_CommutativeRing.commutativeRingInt;
      }
  };
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Exists"] = $PS["Data.Exists"] || {};
  var exports = $PS["Data.Exists"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS);
(function(exports) {
  "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Lazy"] = $PS["Data.Lazy"] || {};
  var exports = $PS["Data.Lazy"];
  var $foreign = $PS["Data.Lazy"];
  var functorLazy = {
      map: function (f) {
          return function (l) {
              return $foreign.defer(function (v) {
                  return f($foreign.force(l));
              });
          };
      }
  };
  var applyLazy = {
      apply: function (f) {
          return function (x) {
              return $foreign.defer(function (v) {
                  return $foreign.force(f)($foreign.force(x));
              });
          };
      },
      Functor0: function () {
          return functorLazy;
      }
  };
  var bindLazy = {
      bind: function (l) {
          return function (f) {
              return $foreign.defer(function (v) {
                  return $foreign.force(f($foreign.force(l)));
              });
          };
      },
      Apply0: function () {
          return applyLazy;
      }
  };
  exports["bindLazy"] = bindLazy;
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Function.Memoize"] = $PS["Data.Function.Memoize"] || {};
  var exports = $PS["Data.Function.Memoize"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Tuple = $PS["Data.Tuple"];              
  var NatTrie = (function () {
      function NatTrie(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      NatTrie.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new NatTrie(value0, value1, value2);
              };
          };
      };
      return NatTrie;
  })();
  var tabulateNat = {
      tabulate: (function () {
          var tabulateImpl = function (f) {
              var walk = function (v) {
                  return function (v1) {
                      if (v instanceof Data_List_Types.Nil) {
                          return v1.value0;
                      };
                      if (v instanceof Data_List_Types.Cons && !v.value0) {
                          return Control_Bind.bind(Data_Lazy.bindLazy)(v1.value1)(walk(v.value1));
                      };
                      if (v instanceof Data_List_Types.Cons && v.value0) {
                          return Control_Bind.bind(Data_Lazy.bindLazy)(v1.value2)(walk(v.value1));
                      };
                      throw new Error("Failed pattern match at Data.Function.Memoize (line 137, column 11 - line 137, column 64): " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              var build = function (n) {
                  return new NatTrie(Data_Lazy.defer(function (v) {
                      return f(n);
                  }), Data_Lazy.defer(function (v) {
                      return build(n * 2 | 0);
                  }), Data_Lazy.defer(function (v) {
                      return build((n * 2 | 0) + 1 | 0);
                  }));
              };
              var trie = build(0);
              var bits = (function () {
                  var bits$prime = function ($copy_acc) {
                      return function ($copy_v) {
                          var $tco_var_acc = $copy_acc;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(acc, v) {
                              if (v === 0) {
                                  $tco_done = true;
                                  return acc;
                              };
                              $tco_var_acc = new Data_List_Types.Cons((v & 1) !== 0, acc);
                              $copy_v = v >>> 1;
                              return;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_acc, $copy_v);
                          };
                          return $tco_result;
                      };
                  };
                  return bits$prime(Data_List_Types.Nil.value);
              })();
              var go = function (n) {
                  return walk(bits(n))(trie);
              };
              return go;
          };
          return tabulateImpl;
      })()
  };
  var tabulate = function (dict) {
      return dict.tabulate;
  };
  var tabulateTuple = function (dictTabulate) {
      return function (dictTabulate1) {
          return {
              tabulate: function (f) {
                  var f$prime = tabulate(dictTabulate)(function (a) {
                      return tabulate(dictTabulate1)(function (b) {
                          return f(new Data_Tuple.Tuple(a, b));
                      });
                  });
                  return function (v) {
                      return Control_Bind.bind(Data_Lazy.bindLazy)(f$prime(v.value0))(function (g) {
                          return g(v.value1);
                      });
                  };
              }
          };
      };
  };
  var memoize = function (dictTabulate) {
      return function (f) {
          var f1 = tabulate(dictTabulate)(f);
          return function ($106) {
              return Data_Lazy.force(f1($106));
          };
      };
  };
  var memoize2 = function (dictTabulate) {
      return function (dictTabulate1) {
          return function (f) {
              var f1 = memoize(tabulateTuple(dictTabulate)(dictTabulate1))(Data_Tuple.uncurry(f));
              return Data_Tuple.curry(f1);
          };
      };
  };
  exports["memoize2"] = memoize2;
  exports["tabulateNat"] = tabulateNat;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";               

  exports.isFinite = isFinite;
})(PS["Data.Number"] = PS["Data.Number"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Number"] = $PS["Data.Number"] || {};
  var exports = $PS["Data.Number"];
  var $foreign = $PS["Data.Number"];
  exports["isFinite"] = $foreign["isFinite"];
})(PS);
(function(exports) {
  "use strict";

  exports.round = Math.round;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["round"] = $foreign.round;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Number = $PS["Data.Number"];
  var $$Math = $PS["Math"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (!Data_Number["isFinite"](x)) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var round = function ($23) {
      return unsafeClamp($$Math.round($23));
  };
  exports["round"] = round;
  exports["fromString"] = fromString;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];                  
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var foldableNonEmpty = function (dictFoldable) {
      return {
          foldMap: function (dictMonoid) {
              return function (f) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
                  };
              };
          },
          foldl: function (f) {
              return function (b) {
                  return function (v) {
                      return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
                  };
              };
          },
          foldr: function (f) {
              return function (b) {
                  return function (v) {
                      return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
                  };
              };
          }
      };
  };
  var foldable1NonEmpty = function (dictFoldable) {
      return {
          foldMap1: function (dictSemigroup) {
              return function (f) {
                  return function (v) {
                      return Data_Foldable.foldl(dictFoldable)(function (s) {
                          return function (a1) {
                              return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                          };
                      })(f(v.value0))(v.value1);
                  };
              };
          },
          foldr1: function (f) {
              return function (v) {
                  return Data_Maybe.maybe(v.value0)(f(v.value0))(Data_Foldable.foldr(dictFoldable)(function (a1) {
                      var $166 = Data_Maybe.maybe(a1)(f(a1));
                      return function ($167) {
                          return Data_Maybe.Just.create($166($167));
                      };
                  })(Data_Maybe.Nothing.value)(v.value1));
              };
          },
          foldl1: function (f) {
              return function (v) {
                  return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
              };
          },
          Foldable0: function () {
              return foldableNonEmpty(dictFoldable);
          }
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["foldable1NonEmpty"] = foldable1NonEmpty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Ord.Min"] = $PS["Data.Ord.Min"] || {};
  var exports = $PS["Data.Ord.Min"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Min = function (x) {
      return x;
  };
  var semigroupMin = function (dictOrd) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_Ord.min(dictOrd)(v)(v1);
              };
          }
      };
  };
  exports["Min"] = Min;
  exports["semigroupMin"] = semigroupMin;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Semigroup.Foldable"] = $PS["Data.Semigroup.Foldable"] || {};
  var exports = $PS["Data.Semigroup.Foldable"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord_Min = $PS["Data.Ord.Min"];
  var foldMap1 = function (dict) {
      return dict.foldMap1;
  };
  var minimum = function (dictOrd) {
      return function (dictFoldable1) {
          return Data_Newtype.ala()()()(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
      };
  };
  exports["minimum"] = minimum;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];                   
  var showString = {
      show: $foreign.showStringImpl
  };
  var showInt = {
      show: $foreign.showIntImpl
  };
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return {
          show: $foreign.showArrayImpl(show(dictShow))
      };
  };
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];                                                                  
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  };
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["length"] = length;
  exports["indexOf"] = indexOf;
})(PS);
(function(exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["split"] = $foreign.split;
})(PS);
(function(exports) {
  "use strict";

  exports.regexImpl = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.split = function (r) {
    return function (s) {
      return s.split(r);
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.Regex"] = $PS["Data.String.Regex"] || {};
  var exports = $PS["Data.String.Regex"];
  var $foreign = $PS["Data.String.Regex"];
  var Data_Either = $PS["Data.Either"];                                                        
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.dotAll) {
              return "s";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })()))));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign.regexImpl(Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  exports["regex"] = regex;
  exports["split"] = $foreign.split;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.String.Regex.Flags"] = $PS["Data.String.Regex.Flags"] || {};
  var exports = $PS["Data.String.Regex.Flags"];                      
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      dotAll: false,
      sticky: false,
      unicode: false
  });
  exports["noFlags"] = noFlags;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = (function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  })();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];            
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = {
      traverse: function (dictApplicative) {
          return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
      },
      sequence: function (dictApplicative) {
          return sequenceDefault(traversableArray)(dictApplicative);
      },
      Functor0: function () {
          return Data_Functor.functorArray;
      },
      Foldable1: function () {
          return Data_Foldable.foldableArray;
      }
  };
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  var semigroupEffect = function (dictSemigroup) {
      return {
          append: Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup))
      };
  };
  var monoidEffect = function (dictMonoid) {
      return {
          mempty: $foreign.pureE(Data_Monoid.mempty(dictMonoid)),
          Semigroup0: function () {
              return semigroupEffect(dictMonoid.Semigroup0());
          }
      };
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["monoidEffect"] = monoidEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect = $PS["Effect"];                
  var monadEffectEffect = {
      liftEffect: Control_Category.identity(Control_Category.categoryFn),
      Monad0: function () {
          return Effect.monadEffect;
      }
  };
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  var Data_Show = $PS["Data.Show"];
  var logShow = function (dictShow) {
      return function (a) {
          return $foreign.log(Data_Show.show(dictShow)(a));
      };
  };
  exports["logShow"] = logShow;
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {};
  var exports = $PS["Effect.Class.Console"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var logShow = function (dictMonadEffect) {
      return function (dictShow) {
          var $27 = Effect_Class.liftEffect(dictMonadEffect);
          var $28 = Effect_Console.logShow(dictShow);
          return function ($29) {
              return $27($28($29));
          };
      };
  };
  exports["logShow"] = logShow;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["ExitCodes"] = $PS["ExitCodes"] || {};
  var exports = $PS["ExitCodes"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var Success = (function () {
      function Success() {

      };
      Success.value = new Success();
      return Success;
  })();
  var $$Error = (function () {
      function $$Error() {

      };
      $$Error.value = new $$Error();
      return $$Error;
  })();
  var MisuseOfShellBuiltins = (function () {
      function MisuseOfShellBuiltins() {

      };
      MisuseOfShellBuiltins.value = new MisuseOfShellBuiltins();
      return MisuseOfShellBuiltins;
  })();
  var CLIUsageError = (function () {
      function CLIUsageError() {

      };
      CLIUsageError.value = new CLIUsageError();
      return CLIUsageError;
  })();
  var DataFormatError = (function () {
      function DataFormatError() {

      };
      DataFormatError.value = new DataFormatError();
      return DataFormatError;
  })();
  var CannotOpenInput = (function () {
      function CannotOpenInput() {

      };
      CannotOpenInput.value = new CannotOpenInput();
      return CannotOpenInput;
  })();
  var AddresseeUnknown = (function () {
      function AddresseeUnknown() {

      };
      AddresseeUnknown.value = new AddresseeUnknown();
      return AddresseeUnknown;
  })();
  var HostNameUnknown = (function () {
      function HostNameUnknown() {

      };
      HostNameUnknown.value = new HostNameUnknown();
      return HostNameUnknown;
  })();
  var ServiceUnavailable = (function () {
      function ServiceUnavailable() {

      };
      ServiceUnavailable.value = new ServiceUnavailable();
      return ServiceUnavailable;
  })();
  var InternalSoftwareError = (function () {
      function InternalSoftwareError() {

      };
      InternalSoftwareError.value = new InternalSoftwareError();
      return InternalSoftwareError;
  })();
  var SystemError = (function () {
      function SystemError() {

      };
      SystemError.value = new SystemError();
      return SystemError;
  })();
  var CriticalOSFileMissing = (function () {
      function CriticalOSFileMissing() {

      };
      CriticalOSFileMissing.value = new CriticalOSFileMissing();
      return CriticalOSFileMissing;
  })();
  var CannotCreateOutputFile = (function () {
      function CannotCreateOutputFile() {

      };
      CannotCreateOutputFile.value = new CannotCreateOutputFile();
      return CannotCreateOutputFile;
  })();
  var IOError = (function () {
      function IOError() {

      };
      IOError.value = new IOError();
      return IOError;
  })();
  var TemporaryFailure = (function () {
      function TemporaryFailure() {

      };
      TemporaryFailure.value = new TemporaryFailure();
      return TemporaryFailure;
  })();
  var RemoteError = (function () {
      function RemoteError() {

      };
      RemoteError.value = new RemoteError();
      return RemoteError;
  })();
  var PermissionDenied = (function () {
      function PermissionDenied() {

      };
      PermissionDenied.value = new PermissionDenied();
      return PermissionDenied;
  })();
  var ConfigurationError = (function () {
      function ConfigurationError() {

      };
      ConfigurationError.value = new ConfigurationError();
      return ConfigurationError;
  })();
  var CannotExecute = (function () {
      function CannotExecute() {

      };
      CannotExecute.value = new CannotExecute();
      return CannotExecute;
  })();
  var CommandNotFound = (function () {
      function CommandNotFound() {

      };
      CommandNotFound.value = new CommandNotFound();
      return CommandNotFound;
  })();
  var InvalidExitArgument = (function () {
      function InvalidExitArgument() {

      };
      InvalidExitArgument.value = new InvalidExitArgument();
      return InvalidExitArgument;
  })();
  var SIGHUP = (function () {
      function SIGHUP() {

      };
      SIGHUP.value = new SIGHUP();
      return SIGHUP;
  })();
  var SIGINT = (function () {
      function SIGINT() {

      };
      SIGINT.value = new SIGINT();
      return SIGINT;
  })();
  var SIGQUIT = (function () {
      function SIGQUIT() {

      };
      SIGQUIT.value = new SIGQUIT();
      return SIGQUIT;
  })();
  var SIGILL = (function () {
      function SIGILL() {

      };
      SIGILL.value = new SIGILL();
      return SIGILL;
  })();
  var SIGABRT = (function () {
      function SIGABRT() {

      };
      SIGABRT.value = new SIGABRT();
      return SIGABRT;
  })();
  var SIGFPE = (function () {
      function SIGFPE() {

      };
      SIGFPE.value = new SIGFPE();
      return SIGFPE;
  })();
  var SIGKILL = (function () {
      function SIGKILL() {

      };
      SIGKILL.value = new SIGKILL();
      return SIGKILL;
  })();
  var SIGSEGV = (function () {
      function SIGSEGV() {

      };
      SIGSEGV.value = new SIGSEGV();
      return SIGSEGV;
  })();
  var SIGPIPE = (function () {
      function SIGPIPE() {

      };
      SIGPIPE.value = new SIGPIPE();
      return SIGPIPE;
  })();
  var SIGALRM = (function () {
      function SIGALRM() {

      };
      SIGALRM.value = new SIGALRM();
      return SIGALRM;
  })();
  var SIGTERM = (function () {
      function SIGTERM() {

      };
      SIGTERM.value = new SIGTERM();
      return SIGTERM;
  })();
  var eqExitCode = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Success && y instanceof Success) {
                  return true;
              };
              if (x instanceof $$Error && y instanceof $$Error) {
                  return true;
              };
              if (x instanceof MisuseOfShellBuiltins && y instanceof MisuseOfShellBuiltins) {
                  return true;
              };
              if (x instanceof CLIUsageError && y instanceof CLIUsageError) {
                  return true;
              };
              if (x instanceof DataFormatError && y instanceof DataFormatError) {
                  return true;
              };
              if (x instanceof CannotOpenInput && y instanceof CannotOpenInput) {
                  return true;
              };
              if (x instanceof AddresseeUnknown && y instanceof AddresseeUnknown) {
                  return true;
              };
              if (x instanceof HostNameUnknown && y instanceof HostNameUnknown) {
                  return true;
              };
              if (x instanceof ServiceUnavailable && y instanceof ServiceUnavailable) {
                  return true;
              };
              if (x instanceof InternalSoftwareError && y instanceof InternalSoftwareError) {
                  return true;
              };
              if (x instanceof SystemError && y instanceof SystemError) {
                  return true;
              };
              if (x instanceof CriticalOSFileMissing && y instanceof CriticalOSFileMissing) {
                  return true;
              };
              if (x instanceof CannotCreateOutputFile && y instanceof CannotCreateOutputFile) {
                  return true;
              };
              if (x instanceof IOError && y instanceof IOError) {
                  return true;
              };
              if (x instanceof TemporaryFailure && y instanceof TemporaryFailure) {
                  return true;
              };
              if (x instanceof RemoteError && y instanceof RemoteError) {
                  return true;
              };
              if (x instanceof PermissionDenied && y instanceof PermissionDenied) {
                  return true;
              };
              if (x instanceof ConfigurationError && y instanceof ConfigurationError) {
                  return true;
              };
              if (x instanceof CannotExecute && y instanceof CannotExecute) {
                  return true;
              };
              if (x instanceof CommandNotFound && y instanceof CommandNotFound) {
                  return true;
              };
              if (x instanceof InvalidExitArgument && y instanceof InvalidExitArgument) {
                  return true;
              };
              if (x instanceof SIGHUP && y instanceof SIGHUP) {
                  return true;
              };
              if (x instanceof SIGINT && y instanceof SIGINT) {
                  return true;
              };
              if (x instanceof SIGQUIT && y instanceof SIGQUIT) {
                  return true;
              };
              if (x instanceof SIGILL && y instanceof SIGILL) {
                  return true;
              };
              if (x instanceof SIGABRT && y instanceof SIGABRT) {
                  return true;
              };
              if (x instanceof SIGFPE && y instanceof SIGFPE) {
                  return true;
              };
              if (x instanceof SIGKILL && y instanceof SIGKILL) {
                  return true;
              };
              if (x instanceof SIGSEGV && y instanceof SIGSEGV) {
                  return true;
              };
              if (x instanceof SIGPIPE && y instanceof SIGPIPE) {
                  return true;
              };
              if (x instanceof SIGALRM && y instanceof SIGALRM) {
                  return true;
              };
              if (x instanceof SIGTERM && y instanceof SIGTERM) {
                  return true;
              };
              return false;
          };
      }
  };
  var ordExitCode = {
      compare: function (x) {
          return function (y) {
              if (x instanceof Success && y instanceof Success) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Success) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Success) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof $$Error && y instanceof $$Error) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof $$Error) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof $$Error) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof MisuseOfShellBuiltins && y instanceof MisuseOfShellBuiltins) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof MisuseOfShellBuiltins) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof MisuseOfShellBuiltins) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof CLIUsageError && y instanceof CLIUsageError) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof CLIUsageError) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof CLIUsageError) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof DataFormatError && y instanceof DataFormatError) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof DataFormatError) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof DataFormatError) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof CannotOpenInput && y instanceof CannotOpenInput) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof CannotOpenInput) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof CannotOpenInput) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof AddresseeUnknown && y instanceof AddresseeUnknown) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof AddresseeUnknown) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof AddresseeUnknown) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof HostNameUnknown && y instanceof HostNameUnknown) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof HostNameUnknown) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof HostNameUnknown) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof ServiceUnavailable && y instanceof ServiceUnavailable) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof ServiceUnavailable) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof ServiceUnavailable) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof InternalSoftwareError && y instanceof InternalSoftwareError) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof InternalSoftwareError) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof InternalSoftwareError) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SystemError && y instanceof SystemError) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SystemError) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SystemError) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof CriticalOSFileMissing && y instanceof CriticalOSFileMissing) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof CriticalOSFileMissing) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof CriticalOSFileMissing) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof CannotCreateOutputFile && y instanceof CannotCreateOutputFile) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof CannotCreateOutputFile) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof CannotCreateOutputFile) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof IOError && y instanceof IOError) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof IOError) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof IOError) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof TemporaryFailure && y instanceof TemporaryFailure) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof TemporaryFailure) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof TemporaryFailure) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof RemoteError && y instanceof RemoteError) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof RemoteError) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof RemoteError) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof PermissionDenied && y instanceof PermissionDenied) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof PermissionDenied) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof PermissionDenied) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof ConfigurationError && y instanceof ConfigurationError) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof ConfigurationError) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof ConfigurationError) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof CannotExecute && y instanceof CannotExecute) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof CannotExecute) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof CannotExecute) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof CommandNotFound && y instanceof CommandNotFound) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof CommandNotFound) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof CommandNotFound) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof InvalidExitArgument && y instanceof InvalidExitArgument) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof InvalidExitArgument) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof InvalidExitArgument) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGHUP && y instanceof SIGHUP) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGHUP) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGHUP) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGINT && y instanceof SIGINT) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGINT) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGINT) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGQUIT && y instanceof SIGQUIT) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGQUIT) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGQUIT) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGILL && y instanceof SIGILL) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGILL) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGILL) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGABRT && y instanceof SIGABRT) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGABRT) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGABRT) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGFPE && y instanceof SIGFPE) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGFPE) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGFPE) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGKILL && y instanceof SIGKILL) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGKILL) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGKILL) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGSEGV && y instanceof SIGSEGV) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGSEGV) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGSEGV) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGPIPE && y instanceof SIGPIPE) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGPIPE) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGPIPE) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGALRM && y instanceof SIGALRM) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof SIGALRM) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof SIGALRM) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof SIGTERM && y instanceof SIGTERM) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at ExitCodes (line 47, column 1 - line 47, column 44): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqExitCode;
      }
  };
  var enumExitCode = {
      succ: function (v) {
          if (v instanceof Success) {
              return new Data_Maybe.Just($$Error.value);
          };
          if (v instanceof $$Error) {
              return new Data_Maybe.Just(MisuseOfShellBuiltins.value);
          };
          if (v instanceof MisuseOfShellBuiltins) {
              return new Data_Maybe.Just(CLIUsageError.value);
          };
          if (v instanceof CLIUsageError) {
              return new Data_Maybe.Just(DataFormatError.value);
          };
          if (v instanceof DataFormatError) {
              return new Data_Maybe.Just(CannotOpenInput.value);
          };
          if (v instanceof CannotOpenInput) {
              return new Data_Maybe.Just(AddresseeUnknown.value);
          };
          if (v instanceof AddresseeUnknown) {
              return new Data_Maybe.Just(HostNameUnknown.value);
          };
          if (v instanceof HostNameUnknown) {
              return new Data_Maybe.Just(ServiceUnavailable.value);
          };
          if (v instanceof ServiceUnavailable) {
              return new Data_Maybe.Just(InternalSoftwareError.value);
          };
          if (v instanceof InternalSoftwareError) {
              return new Data_Maybe.Just(SystemError.value);
          };
          if (v instanceof SystemError) {
              return new Data_Maybe.Just(CriticalOSFileMissing.value);
          };
          if (v instanceof CriticalOSFileMissing) {
              return new Data_Maybe.Just(CannotCreateOutputFile.value);
          };
          if (v instanceof CannotCreateOutputFile) {
              return new Data_Maybe.Just(IOError.value);
          };
          if (v instanceof IOError) {
              return new Data_Maybe.Just(TemporaryFailure.value);
          };
          if (v instanceof TemporaryFailure) {
              return new Data_Maybe.Just(RemoteError.value);
          };
          if (v instanceof RemoteError) {
              return new Data_Maybe.Just(PermissionDenied.value);
          };
          if (v instanceof PermissionDenied) {
              return new Data_Maybe.Just(ConfigurationError.value);
          };
          if (v instanceof ConfigurationError) {
              return new Data_Maybe.Just(CannotExecute.value);
          };
          if (v instanceof CannotExecute) {
              return new Data_Maybe.Just(CommandNotFound.value);
          };
          if (v instanceof CommandNotFound) {
              return new Data_Maybe.Just(InvalidExitArgument.value);
          };
          if (v instanceof InvalidExitArgument) {
              return new Data_Maybe.Just(SIGHUP.value);
          };
          if (v instanceof SIGHUP) {
              return new Data_Maybe.Just(SIGINT.value);
          };
          if (v instanceof SIGINT) {
              return new Data_Maybe.Just(SIGQUIT.value);
          };
          if (v instanceof SIGQUIT) {
              return new Data_Maybe.Just(SIGILL.value);
          };
          if (v instanceof SIGILL) {
              return new Data_Maybe.Just(SIGABRT.value);
          };
          if (v instanceof SIGABRT) {
              return new Data_Maybe.Just(SIGFPE.value);
          };
          if (v instanceof SIGFPE) {
              return new Data_Maybe.Just(SIGKILL.value);
          };
          if (v instanceof SIGKILL) {
              return new Data_Maybe.Just(SIGSEGV.value);
          };
          if (v instanceof SIGSEGV) {
              return new Data_Maybe.Just(SIGPIPE.value);
          };
          if (v instanceof SIGPIPE) {
              return new Data_Maybe.Just(SIGALRM.value);
          };
          if (v instanceof SIGALRM) {
              return new Data_Maybe.Just(SIGTERM.value);
          };
          if (v instanceof SIGTERM) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at ExitCodes (line 87, column 1 - line 151, column 30): " + [ v.constructor.name ]);
      },
      pred: function (v) {
          if (v instanceof Success) {
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof $$Error) {
              return new Data_Maybe.Just(Success.value);
          };
          if (v instanceof MisuseOfShellBuiltins) {
              return new Data_Maybe.Just($$Error.value);
          };
          if (v instanceof CLIUsageError) {
              return new Data_Maybe.Just(MisuseOfShellBuiltins.value);
          };
          if (v instanceof DataFormatError) {
              return new Data_Maybe.Just(CLIUsageError.value);
          };
          if (v instanceof CannotOpenInput) {
              return new Data_Maybe.Just(DataFormatError.value);
          };
          if (v instanceof AddresseeUnknown) {
              return new Data_Maybe.Just(CannotOpenInput.value);
          };
          if (v instanceof HostNameUnknown) {
              return new Data_Maybe.Just(AddresseeUnknown.value);
          };
          if (v instanceof ServiceUnavailable) {
              return new Data_Maybe.Just(HostNameUnknown.value);
          };
          if (v instanceof InternalSoftwareError) {
              return new Data_Maybe.Just(ServiceUnavailable.value);
          };
          if (v instanceof SystemError) {
              return new Data_Maybe.Just(InternalSoftwareError.value);
          };
          if (v instanceof CriticalOSFileMissing) {
              return new Data_Maybe.Just(SystemError.value);
          };
          if (v instanceof CannotCreateOutputFile) {
              return new Data_Maybe.Just(CriticalOSFileMissing.value);
          };
          if (v instanceof IOError) {
              return new Data_Maybe.Just(CannotCreateOutputFile.value);
          };
          if (v instanceof TemporaryFailure) {
              return new Data_Maybe.Just(IOError.value);
          };
          if (v instanceof RemoteError) {
              return new Data_Maybe.Just(TemporaryFailure.value);
          };
          if (v instanceof PermissionDenied) {
              return new Data_Maybe.Just(RemoteError.value);
          };
          if (v instanceof ConfigurationError) {
              return new Data_Maybe.Just(PermissionDenied.value);
          };
          if (v instanceof CannotExecute) {
              return new Data_Maybe.Just(ConfigurationError.value);
          };
          if (v instanceof CommandNotFound) {
              return new Data_Maybe.Just(CannotExecute.value);
          };
          if (v instanceof InvalidExitArgument) {
              return new Data_Maybe.Just(CommandNotFound.value);
          };
          if (v instanceof SIGHUP) {
              return new Data_Maybe.Just(InvalidExitArgument.value);
          };
          if (v instanceof SIGINT) {
              return new Data_Maybe.Just(SIGHUP.value);
          };
          if (v instanceof SIGQUIT) {
              return new Data_Maybe.Just(SIGINT.value);
          };
          if (v instanceof SIGILL) {
              return new Data_Maybe.Just(SIGQUIT.value);
          };
          if (v instanceof SIGABRT) {
              return new Data_Maybe.Just(SIGILL.value);
          };
          if (v instanceof SIGFPE) {
              return new Data_Maybe.Just(SIGABRT.value);
          };
          if (v instanceof SIGKILL) {
              return new Data_Maybe.Just(SIGFPE.value);
          };
          if (v instanceof SIGSEGV) {
              return new Data_Maybe.Just(SIGKILL.value);
          };
          if (v instanceof SIGPIPE) {
              return new Data_Maybe.Just(SIGSEGV.value);
          };
          if (v instanceof SIGALRM) {
              return new Data_Maybe.Just(SIGPIPE.value);
          };
          if (v instanceof SIGTERM) {
              return new Data_Maybe.Just(SIGALRM.value);
          };
          throw new Error("Failed pattern match at ExitCodes (line 87, column 1 - line 151, column 30): " + [ v.constructor.name ]);
      },
      Ord0: function () {
          return ordExitCode;
      }
  };
  var boundedExitCode = {
      bottom: Success.value,
      top: SIGTERM.value,
      Ord0: function () {
          return ordExitCode;
      }
  };
  var boundedEnumExitCode = {
      cardinality: 32,
      toEnum: function (v) {
          if (v === 0) {
              return new Data_Maybe.Just(Success.value);
          };
          if (v === 1) {
              return new Data_Maybe.Just($$Error.value);
          };
          if (v === 2) {
              return new Data_Maybe.Just(MisuseOfShellBuiltins.value);
          };
          if (v === 64) {
              return new Data_Maybe.Just(CLIUsageError.value);
          };
          if (v === 65) {
              return new Data_Maybe.Just(DataFormatError.value);
          };
          if (v === 66) {
              return new Data_Maybe.Just(CannotOpenInput.value);
          };
          if (v === 67) {
              return new Data_Maybe.Just(AddresseeUnknown.value);
          };
          if (v === 68) {
              return new Data_Maybe.Just(HostNameUnknown.value);
          };
          if (v === 69) {
              return new Data_Maybe.Just(ServiceUnavailable.value);
          };
          if (v === 70) {
              return new Data_Maybe.Just(InternalSoftwareError.value);
          };
          if (v === 71) {
              return new Data_Maybe.Just(SystemError.value);
          };
          if (v === 72) {
              return new Data_Maybe.Just(CriticalOSFileMissing.value);
          };
          if (v === 73) {
              return new Data_Maybe.Just(CannotCreateOutputFile.value);
          };
          if (v === 74) {
              return new Data_Maybe.Just(IOError.value);
          };
          if (v === 75) {
              return new Data_Maybe.Just(TemporaryFailure.value);
          };
          if (v === 76) {
              return new Data_Maybe.Just(RemoteError.value);
          };
          if (v === 77) {
              return new Data_Maybe.Just(PermissionDenied.value);
          };
          if (v === 78) {
              return new Data_Maybe.Just(ConfigurationError.value);
          };
          if (v === 126) {
              return new Data_Maybe.Just(CannotExecute.value);
          };
          if (v === 127) {
              return new Data_Maybe.Just(CommandNotFound.value);
          };
          if (v === 128) {
              return new Data_Maybe.Just(InvalidExitArgument.value);
          };
          if (v === 129) {
              return new Data_Maybe.Just(SIGHUP.value);
          };
          if (v === 130) {
              return new Data_Maybe.Just(SIGINT.value);
          };
          if (v === 131) {
              return new Data_Maybe.Just(SIGQUIT.value);
          };
          if (v === 132) {
              return new Data_Maybe.Just(SIGILL.value);
          };
          if (v === 134) {
              return new Data_Maybe.Just(SIGABRT.value);
          };
          if (v === 136) {
              return new Data_Maybe.Just(SIGFPE.value);
          };
          if (v === 137) {
              return new Data_Maybe.Just(SIGKILL.value);
          };
          if (v === 139) {
              return new Data_Maybe.Just(SIGSEGV.value);
          };
          if (v === 141) {
              return new Data_Maybe.Just(SIGPIPE.value);
          };
          if (v === 142) {
              return new Data_Maybe.Just(SIGALRM.value);
          };
          if (v === 143) {
              return new Data_Maybe.Just(SIGTERM.value);
          };
          return Data_Maybe.Nothing.value;
      },
      fromEnum: function (v) {
          if (v instanceof Success) {
              return 0;
          };
          if (v instanceof $$Error) {
              return 1;
          };
          if (v instanceof MisuseOfShellBuiltins) {
              return 2;
          };
          if (v instanceof CLIUsageError) {
              return 64;
          };
          if (v instanceof DataFormatError) {
              return 65;
          };
          if (v instanceof CannotOpenInput) {
              return 66;
          };
          if (v instanceof AddresseeUnknown) {
              return 67;
          };
          if (v instanceof HostNameUnknown) {
              return 68;
          };
          if (v instanceof ServiceUnavailable) {
              return 69;
          };
          if (v instanceof InternalSoftwareError) {
              return 70;
          };
          if (v instanceof SystemError) {
              return 71;
          };
          if (v instanceof CriticalOSFileMissing) {
              return 72;
          };
          if (v instanceof CannotCreateOutputFile) {
              return 73;
          };
          if (v instanceof IOError) {
              return 74;
          };
          if (v instanceof TemporaryFailure) {
              return 75;
          };
          if (v instanceof RemoteError) {
              return 76;
          };
          if (v instanceof PermissionDenied) {
              return 77;
          };
          if (v instanceof ConfigurationError) {
              return 78;
          };
          if (v instanceof CannotExecute) {
              return 126;
          };
          if (v instanceof CommandNotFound) {
              return 127;
          };
          if (v instanceof InvalidExitArgument) {
              return 128;
          };
          if (v instanceof SIGHUP) {
              return 128 + 1 | 0;
          };
          if (v instanceof SIGINT) {
              return 128 + 2 | 0;
          };
          if (v instanceof SIGQUIT) {
              return 128 + 3 | 0;
          };
          if (v instanceof SIGILL) {
              return 128 + 4 | 0;
          };
          if (v instanceof SIGABRT) {
              return 128 + 6 | 0;
          };
          if (v instanceof SIGFPE) {
              return 128 + 8 | 0;
          };
          if (v instanceof SIGKILL) {
              return 128 + 9 | 0;
          };
          if (v instanceof SIGSEGV) {
              return 128 + 11 | 0;
          };
          if (v instanceof SIGPIPE) {
              return 128 + 13 | 0;
          };
          if (v instanceof SIGALRM) {
              return 128 + 14 | 0;
          };
          if (v instanceof SIGTERM) {
              return 128 + 15 | 0;
          };
          throw new Error("Failed pattern match at ExitCodes (line 153, column 1 - line 219, column 30): " + [ v.constructor.name ]);
      },
      Bounded0: function () {
          return boundedExitCode;
      },
      Enum1: function () {
          return enumExitCode;
      }
  };
  exports["Success"] = Success;
  exports["Error"] = $$Error;
  exports["boundedEnumExitCode"] = boundedEnumExitCode;
})(PS);
(function(exports) {
  exports.dismantle = function (secret) {
    return function (shares) {
      return function (threshold) {
        return function () {
          var a = require("shamirs-secret-sharing").split(secret, {
            shares: shares,
            threshold: threshold,
          });
          return a;
        };
      };
    };
  };

  exports.assemble = function (shares) {
    return function () {
      return require("shamirs-secret-sharing").combine(shares);
    };
  };
})(PS["Main.Shamir"] = PS["Main.Shamir"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Main.Shamir"] = $PS["Main.Shamir"] || {};
  var exports = $PS["Main.Shamir"];
  var $foreign = $PS["Main.Shamir"];
  exports["dismantle"] = $foreign.dismantle;
  exports["assemble"] = $foreign.assemble;
})(PS);
(function(exports) {
  /* global Buffer */
  "use strict";

  exports.fromStringImpl = function (str) {
    return function (encoding) {
      return Buffer.from(str, encoding);
    };
  };

  exports.toStringImpl = function (enc) {
    return function (buff) {
      return buff.toString(enc);
    };
  };
})(PS["Node.Buffer.Immutable"] = PS["Node.Buffer.Immutable"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Node.Encoding"] = $PS["Node.Encoding"] || {};
  var exports = $PS["Node.Encoding"];    
  var ASCII = (function () {
      function ASCII() {

      };
      ASCII.value = new ASCII();
      return ASCII;
  })();
  var UTF8 = (function () {
      function UTF8() {

      };
      UTF8.value = new UTF8();
      return UTF8;
  })();
  var UTF16LE = (function () {
      function UTF16LE() {

      };
      UTF16LE.value = new UTF16LE();
      return UTF16LE;
  })();
  var UCS2 = (function () {
      function UCS2() {

      };
      UCS2.value = new UCS2();
      return UCS2;
  })();
  var Base64 = (function () {
      function Base64() {

      };
      Base64.value = new Base64();
      return Base64;
  })();
  var Latin1 = (function () {
      function Latin1() {

      };
      Latin1.value = new Latin1();
      return Latin1;
  })();
  var Binary = (function () {
      function Binary() {

      };
      Binary.value = new Binary();
      return Binary;
  })();
  var Hex = (function () {
      function Hex() {

      };
      Hex.value = new Hex();
      return Hex;
  })();
  var showEncoding = {
      show: function (v) {
          if (v instanceof ASCII) {
              return "ASCII";
          };
          if (v instanceof UTF8) {
              return "UTF8";
          };
          if (v instanceof UTF16LE) {
              return "UTF16LE";
          };
          if (v instanceof UCS2) {
              return "UCS2";
          };
          if (v instanceof Base64) {
              return "Base64";
          };
          if (v instanceof Latin1) {
              return "Latin1";
          };
          if (v instanceof Binary) {
              return "Binary";
          };
          if (v instanceof Hex) {
              return "Hex";
          };
          throw new Error("Failed pattern match at Node.Encoding (line 19, column 1 - line 27, column 23): " + [ v.constructor.name ]);
      }
  };
  var encodingToNode = function (v) {
      if (v instanceof ASCII) {
          return "ascii";
      };
      if (v instanceof UTF8) {
          return "utf8";
      };
      if (v instanceof UTF16LE) {
          return "utf16le";
      };
      if (v instanceof UCS2) {
          return "ucs2";
      };
      if (v instanceof Base64) {
          return "base64";
      };
      if (v instanceof Latin1) {
          return "latin1";
      };
      if (v instanceof Binary) {
          return "binary";
      };
      if (v instanceof Hex) {
          return "hex";
      };
      throw new Error("Failed pattern match at Node.Encoding (line 31, column 1 - line 31, column 37): " + [ v.constructor.name ]);
  };
  exports["UTF8"] = UTF8;
  exports["Hex"] = Hex;
  exports["encodingToNode"] = encodingToNode;
  exports["showEncoding"] = showEncoding;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Node.Buffer.Immutable"] = $PS["Node.Buffer.Immutable"] || {};
  var exports = $PS["Node.Buffer.Immutable"];
  var $foreign = $PS["Node.Buffer.Immutable"];
  var Node_Encoding = $PS["Node.Encoding"];                
  var toString = function ($3) {
      return $foreign.toStringImpl(Node_Encoding.encodingToNode($3));
  };                                                                                           
  var fromString = function (str) {
      var $7 = $foreign.fromStringImpl(str);
      return function ($8) {
          return $7(Node_Encoding.encodingToNode($8));
      };
  };
  exports["fromString"] = fromString;
  exports["toString"] = toString;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Types"] = $PS["Options.Applicative.Types"] || {};
  var exports = $PS["Options.Applicative.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];                                                  
  var ParserFailure = function (x) {
      return x;
  };
  var Internal = (function () {
      function Internal() {

      };
      Internal.value = new Internal();
      return Internal;
  })();
  var Hidden = (function () {
      function Hidden() {

      };
      Hidden.value = new Hidden();
      return Hidden;
  })();
  var Visible = (function () {
      function Visible() {

      };
      Visible.value = new Visible();
      return Visible;
  })();
  var Leaf = (function () {
      function Leaf(value0) {
          this.value0 = value0;
      };
      Leaf.create = function (value0) {
          return new Leaf(value0);
      };
      return Leaf;
  })();
  var MultNode = (function () {
      function MultNode(value0) {
          this.value0 = value0;
      };
      MultNode.create = function (value0) {
          return new MultNode(value0);
      };
      return MultNode;
  })();
  var AltNode = (function () {
      function AltNode(value0) {
          this.value0 = value0;
      };
      AltNode.create = function (value0) {
          return new AltNode(value0);
      };
      return AltNode;
  })();
  var OptProperties = function (x) {
      return x;
  };
  var OptShort = (function () {
      function OptShort(value0) {
          this.value0 = value0;
      };
      OptShort.create = function (value0) {
          return new OptShort(value0);
      };
      return OptShort;
  })();
  var OptLong = (function () {
      function OptLong(value0) {
          this.value0 = value0;
      };
      OptLong.create = function (value0) {
          return new OptLong(value0);
      };
      return OptLong;
  })();
  var OptHelpInfo = function (x) {
      return x;
  };
  var CmdStart = (function () {
      function CmdStart() {

      };
      CmdStart.value = new CmdStart();
      return CmdStart;
  })();
  var CmdCont = (function () {
      function CmdCont() {

      };
      CmdCont.value = new CmdCont();
      return CmdCont;
  })();
  var CompletionResult = function (x) {
      return x;
  };
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var Failure = (function () {
      function Failure(value0) {
          this.value0 = value0;
      };
      Failure.create = function (value0) {
          return new Failure(value0);
      };
      return Failure;
  })();
  var CompletionInvoked = (function () {
      function CompletionInvoked(value0) {
          this.value0 = value0;
      };
      CompletionInvoked.create = function (value0) {
          return new CompletionInvoked(value0);
      };
      return CompletionInvoked;
  })();
  var Completer = function (x) {
      return x;
  };
  var Backtrack = (function () {
      function Backtrack() {

      };
      Backtrack.value = new Backtrack();
      return Backtrack;
  })();
  var NoBacktrack = (function () {
      function NoBacktrack() {

      };
      NoBacktrack.value = new NoBacktrack();
      return NoBacktrack;
  })();
  var SubparserInline = (function () {
      function SubparserInline() {

      };
      SubparserInline.value = new SubparserInline();
      return SubparserInline;
  })();
  var ParserPrefs = function (x) {
      return x;
  };
  var Intersperse = (function () {
      function Intersperse() {

      };
      Intersperse.value = new Intersperse();
      return Intersperse;
  })();
  var NoIntersperse = (function () {
      function NoIntersperse() {

      };
      NoIntersperse.value = new NoIntersperse();
      return NoIntersperse;
  })();
  var AllPositionals = (function () {
      function AllPositionals() {

      };
      AllPositionals.value = new AllPositionals();
      return AllPositionals;
  })();
  var ForwardOptions = (function () {
      function ForwardOptions() {

      };
      ForwardOptions.value = new ForwardOptions();
      return ForwardOptions;
  })();
  var ParserInfo = function (x) {
      return x;
  };
  var NilP = (function () {
      function NilP(value0) {
          this.value0 = value0;
      };
      NilP.create = function (value0) {
          return new NilP(value0);
      };
      return NilP;
  })();
  var OptP = (function () {
      function OptP(value0) {
          this.value0 = value0;
      };
      OptP.create = function (value0) {
          return new OptP(value0);
      };
      return OptP;
  })();
  var MultP = (function () {
      function MultP(value0) {
          this.value0 = value0;
      };
      MultP.create = function (value0) {
          return new MultP(value0);
      };
      return MultP;
  })();
  var AltP = (function () {
      function AltP(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AltP.create = function (value0) {
          return function (value1) {
              return new AltP(value0, value1);
          };
      };
      return AltP;
  })();
  var BindP = (function () {
      function BindP(value0) {
          this.value0 = value0;
      };
      BindP.create = function (value0) {
          return new BindP(value0);
      };
      return BindP;
  })();
  var Option = function (x) {
      return x;
  };
  var OptReader = (function () {
      function OptReader(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OptReader.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OptReader(value0, value1, value2);
              };
          };
      };
      return OptReader;
  })();
  var FlagReader = (function () {
      function FlagReader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FlagReader.create = function (value0) {
          return function (value1) {
              return new FlagReader(value0, value1);
          };
      };
      return FlagReader;
  })();
  var ArgReader = (function () {
      function ArgReader(value0) {
          this.value0 = value0;
      };
      ArgReader.create = function (value0) {
          return new ArgReader(value0);
      };
      return ArgReader;
  })();
  var CmdReader = (function () {
      function CmdReader(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      CmdReader.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new CmdReader(value0, value1, value2);
              };
          };
      };
      return CmdReader;
  })();
  var CReader = function (x) {
      return x;
  };
  var ReadM = function (x) {
      return x;
  };
  var ErrorMsg = (function () {
      function ErrorMsg(value0) {
          this.value0 = value0;
      };
      ErrorMsg.create = function (value0) {
          return new ErrorMsg(value0);
      };
      return ErrorMsg;
  })();
  var InfoMsg = (function () {
      function InfoMsg(value0) {
          this.value0 = value0;
      };
      InfoMsg.create = function (value0) {
          return new InfoMsg(value0);
      };
      return InfoMsg;
  })();
  var ShowHelpText = (function () {
      function ShowHelpText() {

      };
      ShowHelpText.value = new ShowHelpText();
      return ShowHelpText;
  })();
  var MissingError = (function () {
      function MissingError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MissingError.create = function (value0) {
          return function (value1) {
              return new MissingError(value0, value1);
          };
      };
      return MissingError;
  })();
  var ExpectsArgError = (function () {
      function ExpectsArgError(value0) {
          this.value0 = value0;
      };
      ExpectsArgError.create = function (value0) {
          return new ExpectsArgError(value0);
      };
      return ExpectsArgError;
  })();
  var UnexpectedError = (function () {
      function UnexpectedError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UnexpectedError.create = function (value0) {
          return function (value1) {
              return new UnexpectedError(value0, value1);
          };
      };
      return UnexpectedError;
  })();
  var SomeParser = (function () {
      function SomeParser(value0) {
          this.value0 = value0;
      };
      SomeParser.create = function (value0) {
          return new SomeParser(value0);
      };
      return SomeParser;
  })();
  var MultPE = (function () {
      function MultPE(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MultPE.create = function (value0) {
          return function (value1) {
              return new MultPE(value0, value1);
          };
      };
      return MultPE;
  })();
  var Context = (function () {
      function Context(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Context.create = function (value0) {
          return function (value1) {
              return new Context(value0, value1);
          };
      };
      return Context;
  })();
  var ParserM = function (x) {
      return x;
  };
  var readerAsk = Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)));
  var readerAbort = (function () {
      var $247 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity));
      var $248 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($249) {
          return ReadM($247($248($249)));
      };
  })();
  var readerError = function ($250) {
      return readerAbort(ErrorMsg.create($250));
  };
  var readMFunctor = {
      map: function (f) {
          return function (v) {
              return Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(f)(v);
          };
      }
  };
  var readMApply = {
      apply: function (v) {
          return function (v1) {
              return ReadM(Control_Apply.apply(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity)))(v)(v1));
          };
      },
      Functor0: function () {
          return readMFunctor;
      }
  };
  var readMBind = {
      bind: function (v) {
          return function (f) {
              return ReadM(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity)))(v)((function () {
                  var $251 = Data_Newtype.un()(ReadM);
                  return function ($252) {
                      return $251(f($252));
                  };
              })()));
          };
      },
      Apply0: function () {
          return readMApply;
      }
  };
  var readMApplicative = {
      pure: (function () {
          var $253 = Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
          return function ($254) {
              return ReadM($253($254));
          };
      })(),
      Apply0: function () {
          return readMApply;
      }
  };
  var parserMMonadRec = Control_Monad_Free.freeMonadRec;
  var parserMBind = Control_Monad_Free.freeBind;  
  var parserMApplicative = Control_Monad_Free.freeApplicative;
  var parseErrorSemigroup = {
      append: function (v) {
          return function (m) {
              return m;
          };
      }
  };
  var optVisibilityEq = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Internal && y instanceof Internal) {
                  return true;
              };
              if (x instanceof Hidden && y instanceof Hidden) {
                  return true;
              };
              if (x instanceof Visible && y instanceof Visible) {
                  return true;
              };
              return false;
          };
      }
  };
  var optVisibilityOrd = {
      compare: function (x) {
          return function (y) {
              if (x instanceof Internal && y instanceof Internal) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Internal) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Internal) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Hidden && y instanceof Hidden) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Hidden) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Hidden) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Visible && y instanceof Visible) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at Options.Applicative.Types (line 160, column 1 - line 160, column 54): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return optVisibilityEq;
      }
  };
  var optShowDefault = (function () {
      var $255 = Data_Newtype.un()(OptProperties);
      var $256 = Data_Newtype.un()(Option);
      return function ($257) {
          return (function (v) {
              return v.propShowDefault;
          })($255((function (v) {
              return v.optProps;
          })($256($257))));
      };
  })();
  var optVisibility = (function () {
      var $258 = Data_Newtype.un()(OptProperties);
      var $259 = Data_Newtype.un()(Option);
      return function ($260) {
          return (function (v) {
              return v.propVisibility;
          })($258((function (v) {
              return v.optProps;
          })($259($260))));
      };
  })();
  var optNameEq = {
      eq: function (x) {
          return function (y) {
              if (x instanceof OptShort && y instanceof OptShort) {
                  return x.value0 === y.value0;
              };
              if (x instanceof OptLong && y instanceof OptLong) {
                  return x.value0 === y.value0;
              };
              return false;
          };
      }
  };
  var optNameOrd = {
      compare: function (x) {
          return function (y) {
              if (x instanceof OptShort && y instanceof OptShort) {
                  return Data_Ord.compare(Data_Ord.ordChar)(x.value0)(y.value0);
              };
              if (x instanceof OptShort) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof OptShort) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof OptLong && y instanceof OptLong) {
                  return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              };
              throw new Error("Failed pattern match at Options.Applicative.Types (line 148, column 1 - line 148, column 42): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return optNameEq;
      }
  };
  var optMetaVar = (function () {
      var $261 = Data_Newtype.un()(OptProperties);
      var $262 = Data_Newtype.un()(Option);
      return function ($263) {
          return (function (v) {
              return v.propMetaVar;
          })($261((function (v) {
              return v.optProps;
          })($262($263))));
      };
  })();
  var optHelp = (function () {
      var $264 = Data_Newtype.un()(OptProperties);
      var $265 = Data_Newtype.un()(Option);
      return function ($266) {
          return (function (v) {
              return v.propHelp;
          })($264((function (v) {
              return v.optProps;
          })($265($266))));
      };
  })();
  var optDescMod = (function () {
      var $267 = Data_Newtype.un()(OptProperties);
      var $268 = Data_Newtype.un()(Option);
      return function ($269) {
          return (function (v) {
              return v.propDescMod;
          })($267((function (v) {
              return v.optProps;
          })($268($269))));
      };
  })();
  var oneM = function ($270) {
      return ParserM(Control_Monad_Free.liftF($270));
  };
  var fromM = function (v) {
      return new BindP(v);
  };
  var completerSemigroup = {
      append: function (v) {
          return function (v1) {
              return Completer(function (s) {
                  return Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(Data_Semigroup.append(Data_Semigroup.semigroupArray))(v(s)))(v1(s));
              });
          };
      }
  };
  var completerMonoid = {
      mempty: Completer(function (v) {
          return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
      }),
      Semigroup0: function () {
          return completerSemigroup;
      }
  };
  var cReaderFunctor = {
      map: function (f) {
          return Data_Newtype.over()()(CReader)(function (r) {
              return {
                  crReader: Data_Functor.map(readMFunctor)(f)(r.crReader),
                  crCompleter: r.crCompleter
              };
          });
      }
  };
  var parserInfoFunctor = {
      map: function (f) {
          return Data_Newtype.over()()(ParserInfo)(function (i) {
              return {
                  infoParser: Data_Functor.map(parserFunctor)(f)(i.infoParser),
                  infoFailureCode: i.infoFailureCode,
                  infoFooter: i.infoFooter,
                  infoFullDesc: i.infoFullDesc,
                  infoHeader: i.infoHeader,
                  infoPolicy: i.infoPolicy,
                  infoProgDesc: i.infoProgDesc
              };
          });
      }
  };
  var parserFunctor = {
      map: function (f) {
          return function (v) {
              if (v instanceof NilP) {
                  return new NilP(f(v.value0));
              };
              if (v instanceof OptP) {
                  return new OptP(Data_Functor.map(optionFunctor)(f)(v.value0));
              };
              if (v instanceof MultP) {
                  return Data_Exists.runExists(function (v1) {
                      return MultP.create(Data_Exists.mkExists(new MultPE(Data_Functor.map(parserFunctor)(function (v2) {
                          return function ($271) {
                              return f(v2($271));
                          };
                      })(v1.value0), v1.value1)));
                  })(v.value0);
              };
              if (v instanceof AltP) {
                  return new AltP(Data_Functor.map(parserFunctor)(f)(v.value0), Data_Functor.map(parserFunctor)(f)(v.value1));
              };
              if (v instanceof BindP) {
                  return BindP.create(Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v.value0));
              };
              throw new Error("Failed pattern match at Options.Applicative.Types (line 317, column 1 - line 322, column 36): " + [ f.constructor.name, v.constructor.name ]);
          };
      }
  };
  var optionFunctor = {
      map: function (f) {
          return Data_Newtype.over()()(Option)(function (o) {
              return {
                  optMain: Data_Functor.map(optReaderFunctor)(f)(o.optMain),
                  optProps: o.optProps
              };
          });
      }
  };
  var optReaderFunctor = {
      map: function (f) {
          return function (v) {
              if (v instanceof OptReader) {
                  return new OptReader(v.value0, Data_Functor.map(cReaderFunctor)(f)(v.value1), v.value2);
              };
              if (v instanceof FlagReader) {
                  return new FlagReader(v.value0, f(v.value1));
              };
              if (v instanceof ArgReader) {
                  return new ArgReader(Data_Functor.map(cReaderFunctor)(f)(v.value0));
              };
              if (v instanceof CmdReader) {
                  return new CmdReader(v.value0, v.value1, (function () {
                      var $272 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor.map(parserInfoFunctor)(f));
                      return function ($273) {
                          return $272(v.value2($273));
                      };
                  })());
              };
              throw new Error("Failed pattern match at Options.Applicative.Types (line 264, column 1 - line 268, column 68): " + [ f.constructor.name, v.constructor.name ]);
          };
      }
  };
  var parserAlt = {
      alt: AltP.create,
      Functor0: function () {
          return parserFunctor;
      }
  };
  var parserApply = {
      apply: function (a) {
          return function (b) {
              return new MultP(Data_Exists.mkExists(new MultPE(a, b)));
          };
      },
      Functor0: function () {
          return parserFunctor;
      }
  };
  var parserApplicative = {
      pure: NilP.create,
      Apply0: function () {
          return parserApply;
      }
  };
  var manyM = function (p) {
      var go = function (acc) {
          return Control_Bind.bind(parserMBind)(oneM(Control_Alt.alt(parserAlt)(Data_Functor.map(parserFunctor)(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(parserApplicative)(new Control_Monad_Rec_Class.Done(Data_Unit.unit)))))(function (aa) {
              return Control_Applicative.pure(parserMApplicative)(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v) {
                  return new Data_List_Types.Cons(v, acc);
              })(function (v) {
                  return Data_List.reverse(acc);
              })(aa));
          });
      };
      return Control_Monad_Rec_Class.tailRecM(parserMMonadRec)(go)(Data_List_Types.Nil.value);
  };
  var many = function ($274) {
      return fromM(manyM($274));
  };
  var argPolicyEq = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Intersperse && y instanceof Intersperse) {
                  return true;
              };
              if (x instanceof NoIntersperse && y instanceof NoIntersperse) {
                  return true;
              };
              if (x instanceof AllPositionals && y instanceof AllPositionals) {
                  return true;
              };
              if (x instanceof ForwardOptions && y instanceof ForwardOptions) {
                  return true;
              };
              return false;
          };
      }
  };
  exports["ErrorMsg"] = ErrorMsg;
  exports["InfoMsg"] = InfoMsg;
  exports["ShowHelpText"] = ShowHelpText;
  exports["MissingError"] = MissingError;
  exports["ExpectsArgError"] = ExpectsArgError;
  exports["UnexpectedError"] = UnexpectedError;
  exports["ParserInfo"] = ParserInfo;
  exports["ParserPrefs"] = ParserPrefs;
  exports["Option"] = Option;
  exports["OptShort"] = OptShort;
  exports["OptLong"] = OptLong;
  exports["OptReader"] = OptReader;
  exports["FlagReader"] = FlagReader;
  exports["ArgReader"] = ArgReader;
  exports["CmdReader"] = CmdReader;
  exports["OptProperties"] = OptProperties;
  exports["Internal"] = Internal;
  exports["Hidden"] = Hidden;
  exports["Visible"] = Visible;
  exports["Backtrack"] = Backtrack;
  exports["NoBacktrack"] = NoBacktrack;
  exports["SubparserInline"] = SubparserInline;
  exports["ReadM"] = ReadM;
  exports["readerAsk"] = readerAsk;
  exports["readerAbort"] = readerAbort;
  exports["readerError"] = readerError;
  exports["CReader"] = CReader;
  exports["NilP"] = NilP;
  exports["OptP"] = OptP;
  exports["MultP"] = MultP;
  exports["AltP"] = AltP;
  exports["BindP"] = BindP;
  exports["Completer"] = Completer;
  exports["CompletionResult"] = CompletionResult;
  exports["ParserFailure"] = ParserFailure;
  exports["Success"] = Success;
  exports["Failure"] = Failure;
  exports["CompletionInvoked"] = CompletionInvoked;
  exports["Intersperse"] = Intersperse;
  exports["NoIntersperse"] = NoIntersperse;
  exports["AllPositionals"] = AllPositionals;
  exports["ForwardOptions"] = ForwardOptions;
  exports["OptHelpInfo"] = OptHelpInfo;
  exports["Leaf"] = Leaf;
  exports["MultNode"] = MultNode;
  exports["AltNode"] = AltNode;
  exports["SomeParser"] = SomeParser;
  exports["Context"] = Context;
  exports["CmdStart"] = CmdStart;
  exports["CmdCont"] = CmdCont;
  exports["optVisibility"] = optVisibility;
  exports["optMetaVar"] = optMetaVar;
  exports["optHelp"] = optHelp;
  exports["optShowDefault"] = optShowDefault;
  exports["optDescMod"] = optDescMod;
  exports["many"] = many;
  exports["parseErrorSemigroup"] = parseErrorSemigroup;
  exports["optNameEq"] = optNameEq;
  exports["optNameOrd"] = optNameOrd;
  exports["optVisibilityEq"] = optVisibilityEq;
  exports["optVisibilityOrd"] = optVisibilityOrd;
  exports["readMApplicative"] = readMApplicative;
  exports["readMBind"] = readMBind;
  exports["parserFunctor"] = parserFunctor;
  exports["parserApply"] = parserApply;
  exports["parserApplicative"] = parserApplicative;
  exports["parserAlt"] = parserAlt;
  exports["completerMonoid"] = completerMonoid;
  exports["argPolicyEq"] = argPolicyEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Internal"] = $PS["Options.Applicative.Internal"] || {};
  var exports = $PS["Options.Applicative.Internal"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader = $PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];                
  var TNil = (function () {
      function TNil() {

      };
      TNil.value = new TNil();
      return TNil;
  })();
  var TCons = (function () {
      function TCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TCons.create = function (value0) {
          return function (value1) {
              return new TCons(value0, value1);
          };
      };
      return TCons;
  })();
  var P = function (x) {
      return x;
  };
  var ListT = function (x) {
      return x;
  };
  var NondetT = function (x) {
      return x;
  };
  var ComplParser = (function () {
      function ComplParser(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ComplParser.create = function (value0) {
          return function (value1) {
              return new ComplParser(value0, value1);
          };
      };
      return ComplParser;
  })();
  var ComplOption = (function () {
      function ComplOption(value0) {
          this.value0 = value0;
      };
      ComplOption.create = function (value0) {
          return new ComplOption(value0);
      };
      return ComplOption;
  })();
  var ComplResult = (function () {
      function ComplResult(value0) {
          this.value0 = value0;
      };
      ComplResult.create = function (value0) {
          return new ComplResult(value0);
      };
      return ComplResult;
  })();
  var Completion = function (x) {
      return x;
  };
  var withReadM = function (f) {
      var f$prime = function (v) {
          if (v instanceof Options_Applicative_Types.ErrorMsg) {
              return new Options_Applicative_Types.ErrorMsg(f(v.value0));
          };
          return v;
      };
      var $142 = Control_Monad_Reader_Trans.mapReaderT(Control_Monad_Except.withExcept(f$prime));
      var $143 = Data_Newtype.un()(Options_Applicative_Types.ReadM);
      return function ($144) {
          return Options_Applicative_Types.ReadM($142($143($144)));
      };
  };
  var stepListT = function (v) {
      return v;
  };
  var runP = function (v) {
      return Control_Monad_Reader.runReader(Data_Function.flip(Control_Monad_State_Trans.runStateT)([  ])(Control_Monad_Except_Trans.runExceptT(v)));
  };
  var runNondetT = function (v) {
      return v;
  };
  var runListT = function (dictMonad) {
      return function (xs) {
          return Control_Bind.bind(dictMonad.Bind1())(stepListT(xs))(function (s) {
              if (s instanceof TNil) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
              };
              if (s instanceof TCons) {
                  return Control_Monad.liftM1(dictMonad)(Data_List_Types.Cons.create(s.value0))(runListT(dictMonad)(s.value1));
              };
              throw new Error("Failed pattern match at Options.Applicative.Internal (line 200, column 3 - line 202, column 53): " + [ s.constructor.name ]);
          });
      };
  };
  var runCompletion = function (v) {
      return function (prefs) {
          var v1 = Control_Monad_Reader_Trans.runReaderT(Control_Monad_Except_Trans.runExceptT(v))(prefs);
          if (v1 instanceof ComplResult) {
              return Data_Maybe.Nothing.value;
          };
          if (v1 instanceof ComplParser) {
              return Data_Maybe.Just.create(new Data_Either.Left(new Data_Tuple.Tuple(v1.value0, v1.value1)));
          };
          if (v1 instanceof ComplOption) {
              return Data_Maybe.Just.create(new Data_Either.Right(v1.value0));
          };
          throw new Error("Failed pattern match at Options.Applicative.Internal (line 170, column 38 - line 173, column 42): " + [ v1.constructor.name ]);
      };
  };
  var pFunctor = {
      map: function (f) {
          return function (v) {
              return P(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))))(f)(v));
          };
      }
  };
  var pApply = {
      apply: function (v) {
          return function (v1) {
              return P(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(v)(v1));
          };
      },
      Functor0: function () {
          return pFunctor;
      }
  };
  var pBind = {
      bind: function (v) {
          return function (k) {
              return P(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(v)(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      },
      Apply0: function () {
          return pApply;
      }
  };
  var pApplicative = {
      pure: function (a) {
          return P(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(a));
      },
      Apply0: function () {
          return pApply;
      }
  };
  var pMonad = {
      Applicative0: function () {
          return pApplicative;
      },
      Bind1: function () {
          return pBind;
      }
  };
  var pAlt = {
      alt: function (v) {
          return function (v1) {
              return P(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Options_Applicative_Types.parseErrorSemigroup)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(v)(v1));
          };
      },
      Functor0: function () {
          return pFunctor;
      }
  };
  var missingArgP = function (dict) {
      return dict.missingArgP;
  };
  var getPrefs = function (dict) {
      return dict.getPrefs;
  };
  var exitP = function (dict) {
      return dict.exitP;
  };
  var exitContext = function (dict) {
      return dict.exitContext;
  };
  var errorP = function (dict) {
      return dict.errorP;
  };
  var hoistEither = function (dictMonadP) {
      return Data_Either.either(errorP(dictMonadP))(Control_Applicative.pure((dictMonadP.Monad0()).Applicative0()));
  };
  var runReadM = function (dictMonadP) {
      return function (v) {
          return function (s) {
              return hoistEither(dictMonadP)(Control_Monad_Except.runExcept(Control_Monad_Reader_Trans.runReaderT(v)(s)));
          };
      };
  };
  var hoistMaybe = function (dictMonadP) {
      return function (err) {
          return Data_Maybe.maybe(errorP(dictMonadP)(err))(Control_Applicative.pure((dictMonadP.Monad0()).Applicative0()));
      };
  };
  var pMonadP = {
      enterContext: function (name) {
          return function (pinfo) {
              return P(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Data_Array.cons(new Options_Applicative_Types.Context(name, Data_Exists.mkExists(pinfo))))));
          };
      },
      exitContext: P(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Data_Array.drop(1)))),
      getPrefs: P(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity))))),
      missingArgP: function (e) {
          return function (v) {
              return errorP(pMonadP)(e);
          };
      },
      exitP: function (i) {
          return function (v) {
              return function (p) {
                  var $145 = Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(Options_Applicative_Types.MissingError.create(i)(Options_Applicative_Types.SomeParser.create(Data_Exists.mkExists(p)))))(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))));
                  return function ($146) {
                      return P($145($146));
                  };
              };
          };
      },
      errorP: (function () {
          var $147 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))));
          return function ($148) {
              return P($147($148));
          };
      })(),
      Monad0: function () {
          return pMonad;
      },
      Alt1: function () {
          return pAlt;
      }
  };
  var enterContext = function (dict) {
      return dict.enterContext;
  };
  var contextNames = function (ns) {
      var go = function (v) {
          return v.value0;
      };
      return Data_Array.reverse(Data_Functor.map(Data_Functor.functorArray)(go)(ns));
  };
  var complResultMonad = {
      Applicative0: function () {
          return complResultApplicative;
      },
      Bind1: function () {
          return complResultBind;
      }
  };
  var complResultFunctor = {
      map: Control_Monad.liftM1(complResultMonad)
  };
  var complResultBind = {
      bind: function (m) {
          return function (f) {
              if (m instanceof ComplResult) {
                  return f(m.value0);
              };
              if (m instanceof ComplParser) {
                  return new ComplParser(m.value0, m.value1);
              };
              if (m instanceof ComplOption) {
                  return new ComplOption(m.value0);
              };
              throw new Error("Failed pattern match at Options.Applicative.Internal (line 134, column 14 - line 137, column 35): " + [ m.constructor.name ]);
          };
      },
      Apply0: function () {
          return complResultApply;
      }
  };
  var complResultApply = {
      apply: Control_Monad.ap(complResultMonad),
      Functor0: function () {
          return complResultFunctor;
      }
  };
  var complResultApplicative = {
      pure: ComplResult.create,
      Apply0: function () {
          return complResultApply;
      }
  };
  var completionFunctor = {
      map: function (f) {
          return function (v) {
              return Completion(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(complResultFunctor)))(f)(v));
          };
      }
  };
  var completionAlt = {
      alt: function (v) {
          return function (v1) {
              return Completion(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Options_Applicative_Types.parseErrorSemigroup)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(v)(v1));
          };
      },
      Functor0: function () {
          return completionFunctor;
      }
  };
  var completionApply = {
      apply: function (v) {
          return function (v1) {
              return Completion(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(v)(v1));
          };
      },
      Functor0: function () {
          return completionFunctor;
      }
  };
  var completionApplicative = {
      pure: function (a) {
          return Completion(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(a));
      },
      Apply0: function () {
          return completionApply;
      }
  };
  var completionBind = {
      bind: function (v) {
          return function (k) {
              return Completion(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(v)(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      },
      Apply0: function () {
          return completionApply;
      }
  };
  var completionMonad = {
      Applicative0: function () {
          return completionApplicative;
      },
      Bind1: function () {
          return completionBind;
      }
  };
  var completionMonadP = {
      enterContext: function (v) {
          return function (v1) {
              return Control_Applicative.pure(completionApplicative)(Data_Unit.unit);
          };
      },
      exitContext: Control_Applicative.pure(completionApplicative)(Data_Unit.unit),
      getPrefs: Completion(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(complResultMonad)))),
      missingArgP: function (v) {
          var $149 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad));
          var $150 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(complResultMonad);
          return function ($151) {
              return Completion($149($150(ComplOption.create($151))));
          };
      },
      exitP: function (v) {
          return function (a) {
              return function (p) {
                  return function (v1) {
                      return Completion(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(complResultMonad)(new ComplParser(Options_Applicative_Types.SomeParser.create(Data_Exists.mkExists(p)), a))));
                  };
              };
          };
      },
      errorP: (function () {
          var $152 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)));
          return function ($153) {
              return Completion($152($153));
          };
      })(),
      Monad0: function () {
          return completionMonad;
      },
      Alt1: function () {
          return completionAlt;
      }
  };
  var bimapTStep = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof TNil) {
                  return TNil.value;
              };
              if (v2 instanceof TCons) {
                  return new TCons(v(v2.value0), v1(v2.value1));
              };
              throw new Error("Failed pattern match at Options.Applicative.Internal (line 186, column 1 - line 186, column 77): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var listTFunctor = function (dictMonad) {
      return {
          map: function (f) {
              return function (v) {
                  return ListT(Control_Monad.liftM1(dictMonad)(bimapTStep(f)(Data_Functor.map(listTFunctor(dictMonad))(f)))(stepListT(v)));
              };
          }
      };
  };
  var listTAlt = function (dictMonad) {
      return {
          alt: function (xs) {
              return function (ys) {
                  return ListT(Control_Bind.bind(dictMonad.Bind1())(stepListT(xs))(function (s) {
                      if (s instanceof TNil) {
                          return stepListT(ys);
                      };
                      if (s instanceof TCons) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(new TCons(s.value0, Control_Alt.alt(listTAlt(dictMonad))(s.value1)(ys)));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Internal (line 227, column 5 - line 229, column 49): " + [ s.constructor.name ]);
                  }));
              };
          },
          Functor0: function () {
              return listTFunctor(dictMonad);
          }
      };
  };
  var listTPlus = function (dictMonad) {
      return {
          empty: Control_Applicative.pure(dictMonad.Applicative0())(TNil.value),
          Alt0: function () {
              return listTAlt(dictMonad);
          }
      };
  };
  var hoistList = function (dictMonad) {
      return Data_Array.foldr(function (x) {
          return function (xt) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new TCons(x, xt));
          };
      })(Control_Plus.empty(listTPlus(dictMonad)));
  };
  var listTMonadTrans = {
      lift: function (dictMonad) {
          var $154 = Control_Monad.liftM1(dictMonad)(function (v) {
              return new TCons(v, Control_Plus.empty(listTPlus(dictMonad)));
          });
          return function ($155) {
              return ListT($154($155));
          };
      }
  };
  var cut = function (dictMonad) {
      return NondetT(Control_Monad_Trans_Class.lift(listTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(dictMonad))(true)));
  };
  var nondetTMonadTrans = {
      lift: function (dictMonad) {
          var $156 = Control_Monad_Trans_Class.lift(listTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonad));
          var $157 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad);
          return function ($158) {
              return NondetT($156($157($158)));
          };
      }
  };
  var listTMonad = function (dictMonad) {
      return {
          Applicative0: function () {
              return listTApplicative(dictMonad);
          },
          Bind1: function () {
              return listTBind(dictMonad);
          }
      };
  };
  var listTBind = function (dictMonad) {
      return {
          bind: function (xs) {
              return function (f) {
                  return ListT(Control_Bind.bind(dictMonad.Bind1())(stepListT(xs))(function (s) {
                      if (s instanceof TNil) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(TNil.value);
                      };
                      if (s instanceof TCons) {
                          return stepListT(Control_Alt.alt(listTAlt(dictMonad))(f(s.value0))(Control_Bind.bind(listTBind(dictMonad))(s.value1)(f)));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Internal (line 218, column 5 - line 220, column 53): " + [ s.constructor.name ]);
                  }));
              };
          },
          Apply0: function () {
              return listTApply(dictMonad);
          }
      };
  };
  var listTApply = function (dictMonad) {
      return {
          apply: Control_Monad.ap(listTMonad(dictMonad)),
          Functor0: function () {
              return listTFunctor(dictMonad);
          }
      };
  };
  var listTApplicative = function (dictMonad) {
      return {
          pure: (function () {
              var $159 = hoistList(dictMonad);
              var $160 = Control_Applicative.pure(Control_Applicative.applicativeArray);
              return function ($161) {
                  return $159($160($161));
              };
          })(),
          Apply0: function () {
              return listTApply(dictMonad);
          }
      };
  };
  var listTAlternative = function (dictMonad) {
      return {
          Applicative0: function () {
              return listTApplicative(dictMonad);
          },
          Plus1: function () {
              return listTPlus(dictMonad);
          }
      };
  };
  var nondetTAltOp = function (dictMonad) {
      return function (m1) {
          return function (m2) {
              return NondetT(Control_Alt.alt(listTAlt(Control_Monad_State_Trans.monadStateT(dictMonad)))(runNondetT(m1))(Control_Bind.bind(listTBind(Control_Monad_State_Trans.monadStateT(dictMonad)))(Control_Monad_Trans_Class.lift(listTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(dictMonad))))(function (s) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(listTBind(Control_Monad_State_Trans.monadStateT(dictMonad)))(Control_Alternative.guard(listTAlternative(Control_Monad_State_Trans.monadStateT(dictMonad)))(!s))(function () {
                      return runNondetT(m2);
                  });
              })));
          };
      };
  };
  var nondetTFunctor = function (dictMonad) {
      return {
          map: function (f) {
              var $162 = Data_Functor.map(listTFunctor(Control_Monad_State_Trans.monadStateT(dictMonad)))(f);
              return function ($163) {
                  return NondetT($162(runNondetT($163)));
              };
          }
      };
  };
  var nondetTAlt = function (dictMonad) {
      return {
          alt: function (v) {
              return function (v1) {
                  return Control_Alt.alt(listTAlt(Control_Monad_State_Trans.monadStateT(dictMonad)))(v)(v1);
              };
          },
          Functor0: function () {
              return nondetTFunctor(dictMonad);
          }
      };
  };
  var nondetTPlus = function (dictMonad) {
      return {
          empty: Control_Plus.empty(listTPlus(Control_Monad_State_Trans.monadStateT(dictMonad))),
          Alt0: function () {
              return nondetTAlt(dictMonad);
          }
      };
  };
  var nondetTApply = function (dictMonad) {
      return {
          apply: function (v) {
              return function (v1) {
                  return Control_Apply.apply(listTApply(Control_Monad_State_Trans.monadStateT(dictMonad)))(v)(v1);
              };
          },
          Functor0: function () {
              return nondetTFunctor(dictMonad);
          }
      };
  };
  var nondetTApplicative = function (dictMonad) {
      return {
          pure: (function () {
              var $164 = Control_Applicative.pure(listTApplicative(Control_Monad_State_Trans.monadStateT(dictMonad)));
              return function ($165) {
                  return NondetT($164($165));
              };
          })(),
          Apply0: function () {
              return nondetTApply(dictMonad);
          }
      };
  };
  var nondetTBind = function (dictMonad) {
      return {
          bind: function (v) {
              return function (f) {
                  return NondetT(Control_Bind.bind(listTBind(Control_Monad_State_Trans.monadStateT(dictMonad)))(v)(function ($166) {
                      return runNondetT(f($166));
                  }));
              };
          },
          Apply0: function () {
              return nondetTApply(dictMonad);
          }
      };
  };
  var takeListT = function (dictMonad) {
      return function (v) {
          if (v === 0) {
              return Data_Function["const"](Control_Plus.empty(listTPlus(dictMonad)));
          };
          var $167 = Control_Monad.liftM1(dictMonad)(bimapTStep(Control_Category.identity(Control_Category.categoryFn))(takeListT(dictMonad)(v - 1 | 0)));
          return function ($168) {
              return ListT($167(stepListT($168)));
          };
      };
  };
  var disamb = function (dictMonad) {
      return function (allow_amb) {
          return function (xs) {
              return Control_Bind.bind(dictMonad.Bind1())((function (v) {
                  return Control_Monad_State_Trans.evalStateT(((dictMonad.Bind1()).Apply0()).Functor0())(v)(false);
              })(runListT(Control_Monad_State_Trans.monadStateT(dictMonad))(takeListT(Control_Monad_State_Trans.monadStateT(dictMonad))((function () {
                  if (allow_amb) {
                      return 1;
                  };
                  return 2;
              })())(runNondetT(xs)))))(function (xs$prime) {
                  return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                      if (xs$prime instanceof Data_List_Types.Cons && xs$prime.value1 instanceof Data_List_Types.Nil) {
                          return new Data_Maybe.Just(xs$prime.value0);
                      };
                      return Data_Maybe.Nothing.value;
                  })());
              });
          };
      };
  };
  exports["enterContext"] = enterContext;
  exports["exitContext"] = exitContext;
  exports["getPrefs"] = getPrefs;
  exports["missingArgP"] = missingArgP;
  exports["errorP"] = errorP;
  exports["exitP"] = exitP;
  exports["hoistMaybe"] = hoistMaybe;
  exports["runReadM"] = runReadM;
  exports["withReadM"] = withReadM;
  exports["runP"] = runP;
  exports["runCompletion"] = runCompletion;
  exports["contextNames"] = contextNames;
  exports["cut"] = cut;
  exports["nondetTAltOp"] = nondetTAltOp;
  exports["disamb"] = disamb;
  exports["pMonadP"] = pMonadP;
  exports["completionMonadP"] = completionMonadP;
  exports["nondetTFunctor"] = nondetTFunctor;
  exports["nondetTApplicative"] = nondetTApplicative;
  exports["nondetTBind"] = nondetTBind;
  exports["nondetTAlt"] = nondetTAlt;
  exports["nondetTPlus"] = nondetTPlus;
  exports["nondetTMonadTrans"] = nondetTMonadTrans;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports._unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports._crashWith = function (msg) {
    throw new Error(msg);
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];         
  var crashWith = function (dictPartial) {
      return $foreign["_crashWith"];
  };
  exports["crashWith"] = crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];                
  var unsafePartial = $foreign["_unsafePartial"];
  var unsafeCrashWith = function (msg) {
      return unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Internal.Utils"] = $PS["Options.Applicative.Internal.Utils"] || {};
  var exports = $PS["Options.Applicative.Internal.Utils"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];                
  var whitespaceRegex = (function () {
      var v = Data_String_Regex.regex("\\s+")(Data_String_Regex_Flags.noFlags);
      if (v instanceof Data_Either.Left) {
          return Partial_Unsafe.unsafeCrashWith("whitespaceRegex: `\\s+` seems to be invlaid, err: " + v.value0);
      };
      if (v instanceof Data_Either.Right) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Options.Applicative.Internal.Utils (line 39, column 19 - line 41, column 15): " + [ v.constructor.name ]);
  })();
  var words = function (v) {
      if (v === "") {
          return [  ];
      };
      return Data_String_Regex.split(whitespaceRegex)(v);
  };
  var unWords = function (dictFoldable) {
      return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(" ");
  };
  var unLines = function (dictFoldable) {
      return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)("\x0a");
  };
  var startsWith = function (p) {
      return function (s) {
          return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String_CodePoints.indexOf(p)(s))(new Data_Maybe.Just(0));
      };
  };
  var lines = function (v) {
      if (v === "") {
          return [  ];
      };
      return Data_String_Common.split("\x0a")(v);
  };
  var apApplyFlipped = function (dictApply) {
      return Control_Apply.lift2(dictApply)(Data_Function.applyFlipped);
  };
  exports["unLines"] = unLines;
  exports["unWords"] = unWords;
  exports["lines"] = lines;
  exports["words"] = words;
  exports["startsWith"] = startsWith;
  exports["apApplyFlipped"] = apApplyFlipped;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Common"] = $PS["Options.Applicative.Common"] || {};
  var exports = $PS["Options.Applicative.Common"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Options_Applicative_Internal = $PS["Options.Applicative.Internal"];
  var Options_Applicative_Internal_Utils = $PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];                
  var OptWord = (function () {
      function OptWord(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OptWord.create = function (value0) {
          return function (value1) {
              return new OptWord(value0, value1);
          };
      };
      return OptWord;
  })();
  var unexpectedError = function (arg) {
      return function (p) {
          return Options_Applicative_Types.UnexpectedError.create(arg)(Options_Applicative_Types.SomeParser.create(Data_Exists.mkExists(p)));
      };
  };
  var simplify = function (v) {
      if (v instanceof Options_Applicative_Types.Leaf) {
          return new Options_Applicative_Types.Leaf(v.value0);
      };
      if (v instanceof Options_Applicative_Types.MultNode) {
          var remove_mult = function (v1) {
              if (v1 instanceof Options_Applicative_Types.MultNode) {
                  return v1.value0;
              };
              return [ v1 ];
          };
          var v1 = Control_Bind.bind(Control_Bind.bindArray)(v.value0)(function ($221) {
              return remove_mult(simplify($221));
          });
          if (v1.length === 1) {
              return v1[0];
          };
          return new Options_Applicative_Types.MultNode(v1);
      };
      if (v instanceof Options_Applicative_Types.AltNode) {
          var remove_alt = function (v1) {
              if (v1 instanceof Options_Applicative_Types.AltNode) {
                  return v1.value0;
              };
              if (v1 instanceof Options_Applicative_Types.MultNode && v1.value0.length === 0) {
                  return [  ];
              };
              return [ v1 ];
          };
          var v1 = Control_Bind.bind(Control_Bind.bindArray)(v.value0)(function ($222) {
              return remove_alt(simplify($222));
          });
          if (v1.length === 0) {
              return new Options_Applicative_Types.MultNode([  ]);
          };
          if (v1.length === 1) {
              return v1[0];
          };
          return new Options_Applicative_Types.AltNode(v1);
      };
      throw new Error("Failed pattern match at Options.Applicative.Common (line 279, column 1 - line 279, column 45): " + [ v.constructor.name ]);
  };
  var showOption = function (v) {
      if (v instanceof Options_Applicative_Types.OptLong) {
          return "--" + v.value0;
      };
      if (v instanceof Options_Applicative_Types.OptShort) {
          return Data_String_CodeUnits.fromCharArray([ "-", v.value0 ]);
      };
      throw new Error("Failed pattern match at Options.Applicative.Common (line 42, column 1 - line 42, column 32): " + [ v.constructor.name ]);
  };
  var parseWord = (function () {
      var go = function (v) {
          if (v instanceof Data_List_Types.Cons && (v.value0 === "-" && (v.value1 instanceof Data_List_Types.Cons && v.value1.value0 === "-"))) {
              return Data_Maybe.Just.create((function () {
                  var v1 = (function () {
                      var v2 = Data_List.span(function (v3) {
                          return v3 !== "=";
                      })(v.value1.value1);
                      if (v2.rest instanceof Data_List_Types.Nil) {
                          return new Data_Tuple.Tuple(v.value1.value1, Data_Maybe.Nothing.value);
                      };
                      if (v2.rest instanceof Data_List_Types.Cons) {
                          return new Data_Tuple.Tuple(v2.init, new Data_Maybe.Just(v2.rest.value1));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common (line 106, column 23 - line 108, column 70): " + [ v2.constructor.name ]);
                  })();
                  return new OptWord(new Options_Applicative_Types.OptLong(Data_String_CodeUnits.fromCharArray(Data_Array.fromFoldable(Data_List_Types.foldableList)(v1.value0))), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                      var $223 = Data_Array.fromFoldable(Data_List_Types.foldableList);
                      return function ($224) {
                          return Data_String_CodeUnits.fromCharArray($223($224));
                      };
                  })())(v1.value1));
              })());
          };
          if (v instanceof Data_List_Types.Cons && v.value0 === "-") {
              if (v.value1 instanceof Data_List_Types.Nil) {
                  return Data_Maybe.Nothing.value;
              };
              if (v.value1 instanceof Data_List_Types.Cons) {
                  return Data_Maybe.Just.create((function () {
                      var arg = Data_Functor.voidRight(Data_Maybe.functorMaybe)(v.value1.value1)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(!Data_List["null"](v.value1.value1)));
                      return new OptWord(new Options_Applicative_Types.OptShort(v.value1.value0), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                          var $225 = Data_Array.fromFoldable(Data_List_Types.foldableList);
                          return function ($226) {
                              return Data_String_CodeUnits.fromCharArray($225($226));
                          };
                      })())(arg));
                  })());
              };
              throw new Error("Failed pattern match at Options.Applicative.Common (line 110, column 25 - line 114, column 79): " + [ v.value1.constructor.name ]);
          };
          return Data_Maybe.Nothing.value;
      };
      var $227 = Data_List.fromFoldable(Data_Foldable.foldableArray);
      return function ($228) {
          return go($227(Data_String_CodeUnits.toCharArray($228)));
      };
  })();
  var optionNames = function (v) {
      if (v instanceof Options_Applicative_Types.OptReader) {
          return v.value0;
      };
      if (v instanceof Options_Applicative_Types.FlagReader) {
          return v.value0;
      };
      return [  ];
  };
  var liftOpt = Options_Applicative_Types.OptP.create;
  var isOptionPrefix = function (v) {
      return function (v1) {
          if (v instanceof Options_Applicative_Types.OptShort && v1 instanceof Options_Applicative_Types.OptShort) {
              return v.value0 === v1.value0;
          };
          if (v instanceof Options_Applicative_Types.OptLong && v1 instanceof Options_Applicative_Types.OptLong) {
              return Options_Applicative_Internal_Utils.startsWith(v.value0)(v1.value0);
          };
          return false;
      };
  };
  var optMatches = function (dictMonadP) {
      return function (disambiguate) {
          return function (opt) {
              return function (v) {
                  var is_short = function (v1) {
                      if (v1 instanceof Options_Applicative_Types.OptShort) {
                          return true;
                      };
                      if (v1 instanceof Options_Applicative_Types.OptLong) {
                          return false;
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common (line 89, column 5 - line 89, column 33): " + [ v1.constructor.name ]);
                  };
                  var has_name = function (a) {
                      if (disambiguate) {
                          return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isOptionPrefix(a));
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Foldable.elem(Data_Foldable.foldableArray)(Options_Applicative_Types.optNameEq)(a);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common (line 92, column 5 - line 94, column 27): " + [ a.constructor.name ]);
                  };
                  var errorFor = function (name) {
                      return function (msg) {
                          return "option " + (showOption(name) + (": " + msg));
                      };
                  };
                  if (opt instanceof Options_Applicative_Types.OptReader) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(has_name(v.value0)(opt.value0)))(function () {
                          return Data_Maybe.Just.create(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(dictMonadP.Monad0()))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(dictMonadP.Monad0())))(function (args) {
                              var missing_arg = Options_Applicative_Internal.missingArgP(dictMonadP)(opt.value2(showOption(v.value0)))((Data_Newtype.un()(Options_Applicative_Types.CReader)(opt.value1)).crCompleter);
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(dictMonadP.Monad0()))((function () {
                                  var v1 = Data_Maybe.maybe(args)(function (v2) {
                                      return new Data_List_Types.Cons(v2, args);
                                  })(v.value1);
                                  if (v1 instanceof Data_List_Types.Nil) {
                                      return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadP.Monad0())(missing_arg);
                                  };
                                  if (v1 instanceof Data_List_Types.Cons) {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(dictMonadP.Monad0()))(new Data_Tuple.Tuple(v1.value0, v1.value1));
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.Common (line 67, column 27 - line 69, column 56): " + [ v1.constructor.name ]);
                              })())(function (v1) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(dictMonadP.Monad0()))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(dictMonadP.Monad0()))(v1.value1))(function () {
                                      return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadP.Monad0())(Options_Applicative_Internal.runReadM(dictMonadP)(Options_Applicative_Internal.withReadM(errorFor(v.value0))((Data_Newtype.un()(Options_Applicative_Types.CReader)(opt.value1)).crReader))(v1.value0));
                                  });
                              });
                          }));
                      });
                  };
                  if (opt instanceof Options_Applicative_Types.FlagReader) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(has_name(v.value0)(opt.value0)))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(is_short(v.value0) || Data_Maybe.isNothing(v.value1)))(function () {
                              return Data_Maybe.Just.create(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(dictMonadP.Monad0()))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(dictMonadP.Monad0())))(function (args) {
                                  var val$prime = Data_Functor.map(Data_Maybe.functorMaybe)(function ($229) {
                                      return (function (s) {
                                          return Data_Array.cons("-")(s);
                                      })(Data_String_CodeUnits.toCharArray($229));
                                  })(v.value1);
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(dictMonadP.Monad0()))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(dictMonadP.Monad0()))(Data_Maybe.maybe(args)((function () {
                                      var $230 = Data_Function.flip(Data_List_Types.Cons.create)(args);
                                      return function ($231) {
                                          return $230(Data_String_CodeUnits.fromCharArray($231));
                                      };
                                  })())(val$prime)))(function () {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(dictMonadP.Monad0()))(opt.value1);
                                  });
                              }));
                          });
                      });
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
      };
  };
  var isArg = function (v) {
      if (v instanceof Options_Applicative_Types.ArgReader) {
          return true;
      };
      return false;
  };
  var evalParser = function (v) {
      if (v instanceof Options_Applicative_Types.NilP) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof Options_Applicative_Types.OptP) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Options_Applicative_Types.MultP) {
          return Data_Exists.runExists(function (v1) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(evalParser(v1.value0))(evalParser(v1.value1));
          })(v.value0);
      };
      if (v instanceof Options_Applicative_Types.AltP) {
          return Control_Alt.alt(Data_Maybe.altMaybe)(evalParser(v.value0))(evalParser(v.value1));
      };
      if (v instanceof Options_Applicative_Types.BindP) {
          return Control_Monad_Free["resume'"](function (p) {
              return function (k) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(evalParser(p))(function ($232) {
                      return evalParser(Options_Applicative_Types.BindP.create(k($232)));
                  });
              };
          })(Data_Maybe.Just.create)(v.value0);
      };
      throw new Error("Failed pattern match at Options.Applicative.Common (line 219, column 1 - line 219, column 44): " + [ v.constructor.name ]);
  };
  var searchParser = function (dictMonad) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Options_Applicative_Types.NilP) {
                  return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(dictMonad));
              };
              if (v1 instanceof Options_Applicative_Types.OptP) {
                  return v(v1.value0);
              };
              if (v1 instanceof Options_Applicative_Types.MultP) {
                  return Data_Exists.runExists(function (v2) {
                      var b = Data_Functor.mapFlipped(Options_Applicative_Internal.nondetTFunctor(dictMonad))(searchParser(dictMonad)(v)(v2.value1))(function (p2$prime) {
                          return Control_Apply.apply(Options_Applicative_Types.parserApply)(v2.value0)(p2$prime);
                      });
                      var a = Data_Functor.mapFlipped(Options_Applicative_Internal.nondetTFunctor(dictMonad))(searchParser(dictMonad)(v)(v2.value0))(function (p1$prime) {
                          return Control_Apply.apply(Options_Applicative_Types.parserApply)(p1$prime)(v2.value1);
                      });
                      return Options_Applicative_Internal.nondetTAltOp(dictMonad)(a)(b);
                  })(v1.value0);
              };
              if (v1 instanceof Options_Applicative_Types.AltP) {
                  return Data_Foldable.oneOf(Data_Foldable.foldableArray)(Options_Applicative_Internal.nondetTPlus(dictMonad))([ searchParser(dictMonad)(v)(v1.value0), searchParser(dictMonad)(v)(v1.value1) ]);
              };
              if (v1 instanceof Options_Applicative_Types.BindP) {
                  return Control_Monad_Free["resume'"](function (p) {
                      return function (k) {
                          return Data_Foldable.oneOf(Data_Foldable.foldableArray)(Options_Applicative_Internal.nondetTPlus(dictMonad))([ Data_Functor.mapFlipped(Options_Applicative_Internal.nondetTFunctor(dictMonad))(searchParser(dictMonad)(v)(p))(function (p$prime) {
                              return Options_Applicative_Types.BindP.create(Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftF(p$prime))(k));
                          }), (function () {
                              var v2 = evalParser(p);
                              if (v2 instanceof Data_Maybe.Nothing) {
                                  return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(dictMonad));
                              };
                              if (v2 instanceof Data_Maybe.Just) {
                                  return searchParser(dictMonad)(v)(Options_Applicative_Types.BindP.create(k(v2.value0)));
                              };
                              throw new Error("Failed pattern match at Options.Applicative.Common (line 134, column 7 - line 136, column 49): " + [ v2.constructor.name ]);
                          })() ]);
                      };
                  })(Data_Function["const"](Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(dictMonad))))(v1.value0);
              };
              throw new Error("Failed pattern match at Options.Applicative.Common (line 117, column 1 - line 119, column 49): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var searchOpt = function (dictMonadP) {
      return function (pprefs) {
          return function (w) {
              return searchParser(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(function (opt) {
                  var disambiguate = (Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(pprefs)).prefDisambiguate && Data_Ord.greaterThan(Options_Applicative_Types.optVisibilityOrd)(Options_Applicative_Types.optVisibility(opt))(Options_Applicative_Types.Internal.value);
                  var v = optMatches(dictMonadP)(disambiguate)((Data_Newtype.un()(Options_Applicative_Types.Option)(opt)).optMain)(w);
                  if (v instanceof Data_Maybe.Just) {
                      return Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(Data_Functor.map(Control_Monad_State_Trans.functorStateT((dictMonadP.Alt1()).Functor0()))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(v.value0));
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())));
                  };
                  throw new Error("Failed pattern match at Options.Applicative.Common (line 143, column 3 - line 145, column 21): " + [ v.constructor.name ]);
              });
          };
      };
  };
  var stepParser = function (dictMonadP) {
      return function (pprefs) {
          return function (v) {
              return function (arg) {
                  return function (p) {
                      if (v instanceof Options_Applicative_Types.AllPositionals) {
                          return searchArg(dictMonadP)(pprefs)(arg)(p);
                      };
                      if (v instanceof Options_Applicative_Types.ForwardOptions) {
                          var v1 = parseWord(arg);
                          if (v1 instanceof Data_Maybe.Just) {
                              return Control_Alt.alt(Options_Applicative_Internal.nondetTAlt(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())))(searchOpt(dictMonadP)(pprefs)(v1.value0)(p))(searchArg(dictMonadP)(pprefs)(arg)(p));
                          };
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return searchArg(dictMonadP)(pprefs)(arg)(p);
                          };
                          throw new Error("Failed pattern match at Options.Applicative.Common (line 173, column 42 - line 175, column 36): " + [ v1.constructor.name ]);
                      };
                      var v1 = parseWord(arg);
                      if (v1 instanceof Data_Maybe.Just) {
                          return searchOpt(dictMonadP)(pprefs)(v1.value0)(p);
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return searchArg(dictMonadP)(pprefs)(arg)(p);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common (line 176, column 29 - line 178, column 36): " + [ v1.constructor.name ]);
                  };
              };
          };
      };
  };
  var searchArg = function (dictMonadP) {
      return function (prefs) {
          return function (arg) {
              return searchParser(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(function (opt) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Options_Applicative_Internal.nondetTBind(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())))(Control_Applicative.when(Options_Applicative_Internal.nondetTApplicative(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())))(isArg((Data_Newtype.un()(Options_Applicative_Types.Option)(opt)).optMain))(Options_Applicative_Internal.cut(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))))(function () {
                      var v = (Data_Newtype.un()(Options_Applicative_Types.Option)(opt)).optMain;
                      if (v instanceof Options_Applicative_Types.CmdReader) {
                          var v1 = new Data_Tuple.Tuple(v.value2(arg), (Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(prefs)).prefBacktrack);
                          if (v1.value0 instanceof Data_Maybe.Just && v1.value1 instanceof Options_Applicative_Types.NoBacktrack) {
                              return Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(dictMonadP.Monad0()))(Control_Apply.applyFirst(Control_Monad_State_Trans.applyStateT(dictMonadP.Monad0()))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(dictMonadP.Monad0())))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(dictMonadP.Monad0()))(Data_List_Types.Nil.value)))(function (args) {
                                  return Data_Functor.map(Control_Monad_State_Trans.functorStateT((dictMonadP.Alt1()).Functor0()))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadP.Monad0())(Control_Apply.applyFirst(((dictMonadP.Monad0()).Bind1()).Apply0())(Control_Apply.applySecond(((dictMonadP.Monad0()).Bind1()).Apply0())(Options_Applicative_Internal.enterContext(dictMonadP)(arg)(v1.value0.value0))(runParserInfo(dictMonadP)(v1.value0.value0)(args)))(Options_Applicative_Internal.exitContext(dictMonadP))));
                              }));
                          };
                          if (v1.value0 instanceof Data_Maybe.Just && v1.value1 instanceof Options_Applicative_Types.Backtrack) {
                              return Data_Functor.map(Options_Applicative_Internal.nondetTFunctor(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(Control_Monad_State_Trans.StateT(function (args) {
                                  return Control_Apply.applyFirst(((dictMonadP.Monad0()).Bind1()).Apply0())(Control_Apply.applySecond(((dictMonadP.Monad0()).Bind1()).Apply0())(Options_Applicative_Internal.enterContext(dictMonadP)(arg)(v1.value0.value0))(runParser(dictMonadP)((Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(v1.value0.value0)).infoPolicy)(Options_Applicative_Types.CmdStart.value)((Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(v1.value0.value0)).infoParser)(args)))(Options_Applicative_Internal.exitContext(dictMonadP));
                              })));
                          };
                          if (v1.value0 instanceof Data_Maybe.Just && v1.value1 instanceof Options_Applicative_Types.SubparserInline) {
                              return Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(dictMonadP.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadP.Monad0())(Options_Applicative_Internal.enterContext(dictMonadP)(arg)(v1.value0.value0)))(function () {
                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(dictMonadP.Monad0()))((Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(v1.value0.value0)).infoParser);
                              }));
                          };
                          if (v1.value0 instanceof Data_Maybe.Nothing) {
                              return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())));
                          };
                          throw new Error("Failed pattern match at Options.Applicative.Common (line 153, column 7 - line 165, column 38): " + [ v1.constructor.name ]);
                      };
                      if (v instanceof Options_Applicative_Types.ArgReader) {
                          return Data_Functor.map(Options_Applicative_Internal.nondetTFunctor(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadP.Monad0())(Options_Applicative_Internal.runReadM(dictMonadP)((Data_Newtype.un()(Options_Applicative_Types.CReader)(v.value0)).crReader)(arg))));
                      };
                      return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0())));
                  });
              });
          };
      };
  };
  var runParserInfo = function (dictMonadP) {
      return function (i) {
          return runParserFully(dictMonadP)((Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(i)).infoPolicy)((Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(i)).infoParser);
      };
  };
  var runParserFully = function (dictMonadP) {
      return function (policy) {
          return function (p) {
              return function (args) {
                  return Control_Bind.bind((dictMonadP.Monad0()).Bind1())(runParser(dictMonadP)(policy)(Options_Applicative_Types.CmdStart.value)(p)(args))(function (v) {
                      if (v.value1 instanceof Data_List_Types.Nil) {
                          return Control_Applicative.pure((dictMonadP.Monad0()).Applicative0())(v.value0);
                      };
                      if (v.value1 instanceof Data_List_Types.Cons) {
                          return Options_Applicative_Internal.errorP(dictMonadP)(unexpectedError(v.value1.value0)(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(Data_Unit.unit)));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common (line 213, column 3 - line 215, column 66): " + [ v.value1.constructor.name ]);
                  });
              };
          };
      };
  };
  var runParser = function (dictMonadP) {
      return function (policy) {
          return function (isCmdStart) {
              return function (p) {
                  return function (args) {
                      var result = Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(evalParser(p)))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(args));
                      var newPolicy = function (a) {
                          if (policy instanceof Options_Applicative_Types.NoIntersperse) {
                              var $180 = Data_Maybe.isJust(parseWord(a));
                              if ($180) {
                                  return Options_Applicative_Types.NoIntersperse.value;
                              };
                              return Options_Applicative_Types.AllPositionals.value;
                          };
                          return policy;
                      };
                      var do_step = function (prefs) {
                          return function (arg) {
                              return function (argt) {
                                  return (function (v) {
                                      return Control_Monad_State_Trans.runStateT(v)(argt);
                                  })(Options_Applicative_Internal.disamb(Control_Monad_State_Trans.monadStateT(dictMonadP.Monad0()))(!(Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(prefs)).prefDisambiguate)(stepParser(dictMonadP)(prefs)(policy)(arg)(p)));
                              };
                          };
                      };
                      if (args instanceof Data_List_Types.Nil) {
                          return Options_Applicative_Internal.exitP(dictMonadP)(isCmdStart)(policy)(p)(result);
                      };
                      if (args instanceof Data_List_Types.Cons && (args.value0 === "--" && Data_Eq.notEq(Options_Applicative_Types.argPolicyEq)(policy)(Options_Applicative_Types.AllPositionals.value))) {
                          return runParser(dictMonadP)(Options_Applicative_Types.AllPositionals.value)(Options_Applicative_Types.CmdCont.value)(p)(args.value1);
                      };
                      if (args instanceof Data_List_Types.Cons) {
                          return Control_Bind.bind((dictMonadP.Monad0()).Bind1())(Options_Applicative_Internal.getPrefs(dictMonadP))(function (prefs) {
                              return Control_Bind.bind((dictMonadP.Monad0()).Bind1())(do_step(prefs)(args.value0)(args.value1))(function (v) {
                                  if (v.value0 instanceof Data_Maybe.Nothing) {
                                      return Options_Applicative_Internal.hoistMaybe(dictMonadP)(unexpectedError(args.value0)(p))(result);
                                  };
                                  if (v.value0 instanceof Data_Maybe.Just) {
                                      return runParser(dictMonadP)(newPolicy(args.value0))(Options_Applicative_Types.CmdCont.value)(v.value0.value0)(v.value1);
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.Common (line 191, column 5 - line 193, column 60): " + [ v.value0.constructor.name ]);
                              });
                          });
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common (line 185, column 38 - line 193, column 60): " + [ args.constructor.name ]);
                  };
              };
          };
      };
  };
  var treeMapParser = function (g) {
      var has_default = function (p) {
          return Data_Maybe.isJust(evalParser(p));
      };
      var hasArg = function (v) {
          if (v instanceof Options_Applicative_Types.NilP) {
              return false;
          };
          if (v instanceof Options_Applicative_Types.OptP) {
              return isArg((Data_Newtype.un()(Options_Applicative_Types.Option)(v.value0)).optMain);
          };
          if (v instanceof Options_Applicative_Types.MultP) {
              return Data_Exists.runExists(function (v1) {
                  return hasArg(v1.value0) || hasArg(v1.value1);
              })(v.value0);
          };
          if (v instanceof Options_Applicative_Types.AltP) {
              return hasArg(v.value0) || hasArg(v.value1);
          };
          if (v instanceof Options_Applicative_Types.BindP) {
              return Control_Monad_Free["resume'"](function (p) {
                  return function (v1) {
                      return hasArg(p);
                  };
              })(Data_Function["const"](false))(v.value0);
          };
          throw new Error("Failed pattern match at Options.Applicative.Common (line 271, column 5 - line 271, column 44): " + [ v.constructor.name ]);
      };
      var go = function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          if (v4 instanceof Options_Applicative_Types.NilP) {
                              return new Options_Applicative_Types.MultNode([  ]);
                          };
                          if (v4 instanceof Options_Applicative_Types.OptP) {
                              if (Data_Ord.greaterThan(Options_Applicative_Types.optVisibilityOrd)(Options_Applicative_Types.optVisibility(v4.value0))(Options_Applicative_Types.Internal.value)) {
                                  return new Options_Applicative_Types.Leaf(v3({
                                      hinfoMulti: v,
                                      hinfoDefault: v1,
                                      hinfoUnreachableArgs: v2
                                  })(v4.value0));
                              };
                              if (Data_Boolean.otherwise) {
                                  return new Options_Applicative_Types.MultNode([  ]);
                              };
                          };
                          if (v4 instanceof Options_Applicative_Types.MultP) {
                              return Data_Exists.runExists(function (v5) {
                                  var r$prime = v2 || hasArg(v5.value0);
                                  return new Options_Applicative_Types.MultNode([ go(v)(v1)(v2)(v3)(v5.value0), go(v)(v1)(r$prime)(v3)(v5.value1) ]);
                              })(v4.value0);
                          };
                          if (v4 instanceof Options_Applicative_Types.AltP) {
                              var d$prime = v1 || (has_default(v4.value0) || has_default(v4.value1));
                              return new Options_Applicative_Types.AltNode([ go(v)(d$prime)(v2)(v3)(v4.value0), go(v)(d$prime)(v2)(v3)(v4.value1) ]);
                          };
                          if (v4 instanceof Options_Applicative_Types.BindP) {
                              return Control_Monad_Free["resume'"](function (p) {
                                  return function (k) {
                                      var go$prime = go(true)(v1)(v2)(v3)(p);
                                      var v5 = evalParser(p);
                                      if (v5 instanceof Data_Maybe.Nothing) {
                                          return go$prime;
                                      };
                                      if (v5 instanceof Data_Maybe.Just) {
                                          return new Options_Applicative_Types.MultNode([ go$prime, go(true)(v1)(v2)(v3)(Options_Applicative_Types.BindP.create(k(v5.value0))) ]);
                                      };
                                      throw new Error("Failed pattern match at Options.Applicative.Common (line 266, column 12 - line 268, column 68): " + [ v5.constructor.name ]);
                                  };
                              })(Data_Function["const"](new Options_Applicative_Types.MultNode([  ])))(v4.value0);
                          };
                          throw new Error("Failed pattern match at Options.Applicative.Common (line 247, column 5 - line 250, column 21): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name, v4.constructor.name ]);
                      };
                  };
              };
          };
      };
      var $233 = go(false)(false)(false)(g);
      return function ($234) {
          return simplify($233($234));
      };
  };
  var mapParser = function (f) {
      var flatten = function (v) {
          if (v instanceof Options_Applicative_Types.Leaf) {
              return [ v.value0 ];
          };
          if (v instanceof Options_Applicative_Types.MultNode) {
              return Control_Bind.bind(Control_Bind.bindArray)(v.value0)(flatten);
          };
          if (v instanceof Options_Applicative_Types.AltNode) {
              return Control_Bind.bind(Control_Bind.bindArray)(v.value0)(flatten);
          };
          throw new Error("Failed pattern match at Options.Applicative.Common (line 234, column 5 - line 234, column 27): " + [ v.constructor.name ]);
      };
      var $235 = treeMapParser(f);
      return function ($236) {
          return flatten($235($236));
      };
  };
  exports["liftOpt"] = liftOpt;
  exports["showOption"] = showOption;
  exports["runParserInfo"] = runParserInfo;
  exports["mapParser"] = mapParser;
  exports["treeMapParser"] = treeMapParser;
  exports["optionNames"] = optionNames;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Text.PrettyPrint.Leijen"] = $PS["Text.PrettyPrint.Leijen"] || {};
  var exports = $PS["Text.PrettyPrint.Leijen"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];                
  var SFail = (function () {
      function SFail() {

      };
      SFail.value = new SFail();
      return SFail;
  })();
  var SEmpty = (function () {
      function SEmpty() {

      };
      SEmpty.value = new SEmpty();
      return SEmpty;
  })();
  var SChar = (function () {
      function SChar(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SChar.create = function (value0) {
          return function (value1) {
              return new SChar(value0, value1);
          };
      };
      return SChar;
  })();
  var SText = (function () {
      function SText(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      SText.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new SText(value0, value1, value2);
              };
          };
      };
      return SText;
  })();
  var SLine = (function () {
      function SLine(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SLine.create = function (value0) {
          return function (value1) {
              return new SLine(value0, value1);
          };
      };
      return SLine;
  })();
  var SFail$prime = (function () {
      function SFail$prime() {

      };
      SFail$prime.value = new SFail$prime();
      return SFail$prime;
  })();
  var SEmpty$prime = (function () {
      function SEmpty$prime() {

      };
      SEmpty$prime.value = new SEmpty$prime();
      return SEmpty$prime;
  })();
  var SChar$prime = (function () {
      function SChar$prime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SChar$prime.create = function (value0) {
          return function (value1) {
              return new SChar$prime(value0, value1);
          };
      };
      return SChar$prime;
  })();
  var SText$prime = (function () {
      function SText$prime(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      SText$prime.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new SText$prime(value0, value1, value2);
              };
          };
      };
      return SText$prime;
  })();
  var SLine$prime = (function () {
      function SLine$prime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SLine$prime.create = function (value0) {
          return function (value1) {
              return new SLine$prime(value0, value1);
          };
      };
      return SLine$prime;
  })();
  var Fail = (function () {
      function Fail() {

      };
      Fail.value = new Fail();
      return Fail;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var Char = (function () {
      function Char(value0) {
          this.value0 = value0;
      };
      Char.create = function (value0) {
          return new Char(value0);
      };
      return Char;
  })();
  var Text = (function () {
      function Text(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Text.create = function (value0) {
          return function (value1) {
              return new Text(value0, value1);
          };
      };
      return Text;
  })();
  var Line = (function () {
      function Line() {

      };
      Line.value = new Line();
      return Line;
  })();
  var FlatAlt = (function () {
      function FlatAlt(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FlatAlt.create = function (value0) {
          return function (value1) {
              return new FlatAlt(value0, value1);
          };
      };
      return FlatAlt;
  })();
  var Cat = (function () {
      function Cat(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cat.create = function (value0) {
          return function (value1) {
              return new Cat(value0, value1);
          };
      };
      return Cat;
  })();
  var Nest = (function () {
      function Nest(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Nest.create = function (value0) {
          return function (value1) {
              return new Nest(value0, value1);
          };
      };
      return Nest;
  })();
  var Union = (function () {
      function Union(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Union.create = function (value0) {
          return function (value1) {
              return new Union(value0, value1);
          };
      };
      return Union;
  })();
  var Column = (function () {
      function Column(value0) {
          this.value0 = value0;
      };
      Column.create = function (value0) {
          return new Column(value0);
      };
      return Column;
  })();
  var Columns = (function () {
      function Columns(value0) {
          this.value0 = value0;
      };
      Columns.create = function (value0) {
          return new Columns(value0);
      };
      return Columns;
  })();
  var Nesting = (function () {
      function Nesting(value0) {
          this.value0 = value0;
      };
      Nesting.create = function (value0) {
          return new Nesting(value0);
      };
      return Nesting;
  })();
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Cons(value0, value1, value2);
              };
          };
      };
      return Cons;
  })();
  var text = function (v) {
      if (v === "") {
          return Empty.value;
      };
      return new Text(Data_String_CodePoints.length(v), v);
  };                         
  var spaces = function (n) {
      if (n <= 0) {
          return "";
      };
      if (Data_Boolean.otherwise) {
          return Data_String_CodeUnits.fromCharArray(Data_Array.replicate(n)(" "));
      };
      throw new Error("Failed pattern match at Text.PrettyPrint.Leijen (line 908, column 1 - line 908, column 24): " + [ n.constructor.name ]);
  };
  var space = new Char(" ");
  var rparen = new Char(")");
  var rbracket = new Char("]");
  var nesting = function (f) {
      return new Nesting(f);
  };
  var nest = function (i) {
      return function (x) {
          return new Nest(i, x);
      };
  };
  var lparen = new Char("(");
  var line = new FlatAlt(Line.value, space);
  var lbracket = new Char("[");
  var indentation = function (n) {
      return spaces(n);
  };
  var forceSimpleDoc = function (v) {
      if (v instanceof SFail$prime) {
          return SFail.value;
      };
      if (v instanceof SEmpty$prime) {
          return SEmpty.value;
      };
      if (v instanceof SChar$prime) {
          return new SChar(v.value0, forceSimpleDoc(Data_Lazy.force(v.value1)));
      };
      if (v instanceof SText$prime) {
          return new SText(v.value0, v.value1, forceSimpleDoc(Data_Lazy.force(v.value2)));
      };
      if (v instanceof SLine$prime) {
          return new SLine(v.value0, forceSimpleDoc(Data_Lazy.force(v.value1)));
      };
      throw new Error("Failed pattern match at Text.PrettyPrint.Leijen (line 600, column 18 - line 605, column 51): " + [ v.constructor.name ]);
  };
  var renderFits = function (fits) {
      return function (rfrac) {
          return function (w) {
              return function (headNode) {
                  var r = Data_Ord.max(Data_Ord.ordInt)(0)(Data_Ord.min(Data_Ord.ordInt)(w)(Data_Int.round(Data_Int.toNumber(w) * rfrac)));
                  var nicest$prime = function (n) {
                      return function (k) {
                          return function (i) {
                              return function (ds) {
                                  return function (x) {
                                      return function (y) {
                                          var x$prime = best(n)(k)(new Cons(i, x, ds));
                                          var width$prime = Data_Ord.min(Data_Ord.ordInt)(w - k | 0)((r - k | 0) + n | 0);
                                          var $170 = fits(w)(Data_Ord.min(Data_Ord.ordInt)(n)(k))(width$prime)(x$prime);
                                          if ($170) {
                                              return x$prime;
                                          };
                                          var y$prime = best(n)(k)(new Cons(i, y, ds));
                                          return y$prime;
                                      };
                                  };
                              };
                          };
                      };
                  };
                  var best = function (n) {
                      return function (k) {
                          return function (v) {
                              if (v instanceof Nil) {
                                  return SEmpty$prime.value;
                              };
                              if (v instanceof Cons) {
                                  if (v.value1 instanceof Fail) {
                                      return SFail$prime.value;
                                  };
                                  if (v.value1 instanceof Empty) {
                                      return best(n)(k)(v.value2);
                                  };
                                  if (v.value1 instanceof Char) {
                                      var k$prime = k + 1 | 0;
                                      return new SChar$prime(v.value1.value0, Data_Lazy.defer(function (v1) {
                                          return best(n)(k$prime)(v.value2);
                                      }));
                                  };
                                  if (v.value1 instanceof Text) {
                                      var k$prime = k + v.value1.value0 | 0;
                                      return new SText$prime(v.value1.value0, v.value1.value1, Data_Lazy.defer(function (v1) {
                                          return best(n)(k$prime)(v.value2);
                                      }));
                                  };
                                  if (v.value1 instanceof Line) {
                                      return new SLine$prime(v.value0, Data_Lazy.defer(function (v1) {
                                          return best(v.value0)(v.value0)(v.value2);
                                      }));
                                  };
                                  if (v.value1 instanceof FlatAlt) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0, v.value2));
                                  };
                                  if (v.value1 instanceof Cat) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0, new Cons(v.value0, v.value1.value1, v.value2)));
                                  };
                                  if (v.value1 instanceof Nest) {
                                      var i$prime = v.value0 + v.value1.value0 | 0;
                                      return best(n)(k)(new Cons(i$prime, v.value1.value1, v.value2));
                                  };
                                  if (v.value1 instanceof Union) {
                                      return nicest$prime(n)(k)(v.value0)(v.value2)(v.value1.value0)(v.value1.value1);
                                  };
                                  if (v.value1 instanceof Column) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0(k), v.value2));
                                  };
                                  if (v.value1 instanceof Columns) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0(new Data_Maybe.Just(w)), v.value2));
                                  };
                                  if (v.value1 instanceof Nesting) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0(v.value0), v.value2));
                                  };
                                  throw new Error("Failed pattern match at Text.PrettyPrint.Leijen (line 788, column 11 - line 802, column 56): " + [ v.value1.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Text.PrettyPrint.Leijen (line 785, column 7 - line 785, column 50): " + [ n.constructor.name, k.constructor.name, v.constructor.name ]);
                          };
                      };
                  };
                  return forceSimpleDoc(best(0)(0)(new Cons(0, headNode, Nil.value)));
              };
          };
      };
  };
  var foldr1 = function (dictMonoid) {
      return function (f) {
          return function ($246) {
              return (function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(dictMonoid);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(v.value0.last)(v.value0.init);
                  };
                  throw new Error("Failed pattern match at Text.PrettyPrint.Leijen (line 122, column 29 - line 124, column 43): " + [ v.constructor.name ]);
              })(Data_Array.unsnoc($246));
          };
      };
  };
  var flatten = function (v) {
      if (v instanceof FlatAlt) {
          return v.value1;
      };
      if (v instanceof Cat) {
          return new Cat(flatten(v.value0), flatten(v.value1));
      };
      if (v instanceof Nest) {
          return new Nest(v.value0, flatten(v.value1));
      };
      if (v instanceof Line) {
          return Fail.value;
      };
      if (v instanceof Union) {
          return flatten(v.value0);
      };
      if (v instanceof Column) {
          return new Column(function ($247) {
              return flatten(v.value0($247));
          });
      };
      if (v instanceof Columns) {
          return new Columns(function ($248) {
              return flatten(v.value0($248));
          });
      };
      if (v instanceof Nesting) {
          return new Nesting(function ($249) {
              return flatten(v.value0($249));
          });
      };
      return v;
  };
  var group = function (x) {
      return new Union(flatten(x), x);
  };
  var softline = group(line);         
  var fits1 = function ($copy_v) {
      return function ($copy_v1) {
          return function ($copy_w) {
              return function ($copy_v2) {
                  var $tco_var_v = $copy_v;
                  var $tco_var_v1 = $copy_v1;
                  var $tco_var_w = $copy_w;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v, v1, w, v2) {
                      if (w < 0) {
                          $tco_done = true;
                          return false;
                      };
                      if (v2 instanceof SFail$prime) {
                          $tco_done = true;
                          return false;
                      };
                      if (v2 instanceof SEmpty$prime) {
                          $tco_done = true;
                          return true;
                      };
                      if (v2 instanceof SChar$prime) {
                          $tco_var_v = v;
                          $tco_var_v1 = v1;
                          $tco_var_w = w - 1 | 0;
                          $copy_v2 = Data_Lazy.force(v2.value1);
                          return;
                      };
                      if (v2 instanceof SText$prime) {
                          $tco_var_v = v;
                          $tco_var_v1 = v1;
                          $tco_var_w = w - v2.value0 | 0;
                          $copy_v2 = Data_Lazy.force(v2.value2);
                          return;
                      };
                      if (v2 instanceof SLine$prime) {
                          $tco_done = true;
                          return true;
                      };
                      throw new Error("Failed pattern match at Text.PrettyPrint.Leijen (line 819, column 1 - line 819, column 55): " + [ v.constructor.name, v1.constructor.name, w.constructor.name, v2.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $tco_var_w, $copy_v2);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var renderPretty = renderFits(fits1);
  var empty = Empty.value;
  var linebreak = new FlatAlt(Line.value, empty);
  var displayS = function (v) {
      if (v instanceof SFail) {
          return Partial_Unsafe.unsafeCrashWith("@SFail@ can not appear uncaught in a rendered @SimpleDoc@");
      };
      if (v instanceof SEmpty) {
          return "";
      };
      if (v instanceof SChar) {
          return Data_String_CodeUnits.fromCharArray([ v.value0 ]) + displayS(v.value1);
      };
      if (v instanceof SText) {
          return v.value1 + displayS(v.value2);
      };
      if (v instanceof SLine) {
          return "\x0a" + (indentation(v.value0) + displayS(v.value1));
      };
      throw new Error("Failed pattern match at Text.PrettyPrint.Leijen (line 893, column 1 - line 893, column 32): " + [ v.constructor.name ]);
  };
  var column = function (f) {
      return new Column(f);
  };                        
  var $$char = function (v) {
      if (v === "\x0a") {
          return line;
      };
      return new Char(v);
  };
  var beside = function (x) {
      return function (y) {
          return new Cat(x, y);
      };
  };
  var docSemigroup = {
      append: beside
  };
  var docMonoid = {
      mempty: empty,
      Semigroup0: function () {
          return docSemigroup;
      }
  };
  var string = (function () {
      var $252 = Data_Foldable.intercalate(Data_Foldable.foldableArray)(docMonoid)(line);
      var $253 = Data_Functor.map(Data_Functor.functorArray)(text);
      var $254 = Data_String_Common.split("\x0a");
      return function ($255) {
          return $252($253($254($255)));
      };
  })();
  var enclose = function (l) {
      return function (r) {
          return function (x) {
              return Data_Semigroup.append(docSemigroup)(l)(Data_Semigroup.append(docSemigroup)(x)(r));
          };
      };
  };                                   
  var brackets = enclose(lbracket)(rbracket);
  var parens = enclose(lparen)(rparen);
  var width = function (d) {
      return function (f) {
          return column(function (k1) {
              return Data_Semigroup.append(docSemigroup)(d)(column(function (k2) {
                  return f(k2 - k1 | 0);
              }));
          });
      };
  };
  var fillBreak = function (f) {
      return function (x) {
          return width(x)(function (w) {
              var $241 = w > f;
              if ($241) {
                  return nest(f)(linebreak);
              };
              return text(spaces(f - w | 0));
          });
      };
  };                             
  var appendWithSpace = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(space)(y));
      };
  };
  var hsep = foldr1(docMonoid)(appendWithSpace);
  var appendWithSoftline = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(softline)(y));
      };
  };                                                   
  var appendWithLinebreak = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(linebreak)(y));
      };
  };
  var vcat = foldr1(docMonoid)(appendWithLinebreak);
  var appendWithLine = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(line)(y));
      };
  };                                   
  var align = function (d) {
      return column(function (k) {
          return nesting(function (i) {
              return nest(k - i | 0)(d);
          });
      });
  };                                             
  var hang = function (i) {
      return function (d) {
          return align(nest(i)(d));
      };
  };
  var indent = function (i) {
      return function (d) {
          return hang(i)(Data_Semigroup.append(docSemigroup)(text(spaces(i)))(d));
      };
  };
  exports["hsep"] = hsep;
  exports["vcat"] = vcat;
  exports["appendWithSpace"] = appendWithSpace;
  exports["appendWithSoftline"] = appendWithSoftline;
  exports["appendWithLine"] = appendWithLine;
  exports["parens"] = parens;
  exports["brackets"] = brackets;
  exports["string"] = string;
  exports["fillBreak"] = fillBreak;
  exports["indent"] = indent;
  exports["align"] = align;
  exports["char"] = $$char;
  exports["text"] = text;
  exports["renderPretty"] = renderPretty;
  exports["displayS"] = displayS;
  exports["docSemigroup"] = docSemigroup;
  exports["docMonoid"] = docMonoid;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Help.Chunk"] = $PS["Options.Applicative.Help.Chunk"] || {};
  var exports = $PS["Options.Applicative.Help.Chunk"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Options_Applicative_Internal_Utils = $PS["Options.Applicative.Internal.Utils"];
  var Text_PrettyPrint_Leijen = $PS["Text.PrettyPrint.Leijen"];                
  var Chunk = function (x) {
      return x;
  };
  var chunked = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return v2;
              };
              if (v2 instanceof Data_Maybe.Nothing) {
                  return v1;
              };
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(v(v1.value0)(v2.value0));
              };
              throw new Error("Failed pattern match at Options.Applicative.Help.Chunk (line 59, column 1 - line 60, column 41): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var chunkSemigroup = function (dictSemigroup) {
      return {
          append: chunked(Data_Semigroup.append(dictSemigroup))
      };
  };
  var extractChunk = function (dictMonoid) {
      var $31 = Data_Maybe.fromMaybe(Data_Monoid.mempty(dictMonoid));
      var $32 = Data_Newtype.un()(Chunk);
      return function ($33) {
          return $31($32($33));
      };
  };
  var isEmpty = (function () {
      var $34 = Data_Newtype.un()(Chunk);
      return function ($35) {
          return Data_Maybe.isNothing($34($35));
      };
  })();
  var chunkMonoid = function (dictSemigroup) {
      return {
          mempty: Data_Maybe.Nothing.value,
          Semigroup0: function () {
              return chunkSemigroup(dictSemigroup);
          }
      };
  };
  var vcatChunks = Data_Foldable.foldr(Data_Foldable.foldableArray)(chunked(Text_PrettyPrint_Leijen.appendWithLine))(Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)));
  var vsepChunks = Data_Foldable.foldr(Data_Foldable.foldableArray)(chunked(function (x) {
      return function (y) {
          return Text_PrettyPrint_Leijen.appendWithLine(x)(Text_PrettyPrint_Leijen.appendWithLine(Data_Monoid.mempty(Text_PrettyPrint_Leijen.docMonoid))(y));
      };
  }))(Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)));
  var chunkFunctor = Data_Maybe.functorMaybe;
  var chunkBesideOrBelow = chunked(Text_PrettyPrint_Leijen.appendWithSoftline);
  var chunkBeside = chunked(Text_PrettyPrint_Leijen.appendWithSpace);
  var chunkApply = Data_Maybe.applyMaybe;
  var chunkApplicative = Data_Maybe.applicativeMaybe;
  var listToChunk = function (dictMonoid) {
      return function (v) {
          if (v.length === 0) {
              return Data_Monoid.mempty(chunkMonoid(dictMonoid.Semigroup0()));
          };
          return Control_Applicative.pure(chunkApplicative)(Data_Foldable.fold(Data_Foldable.foldableArray)(dictMonoid)(v));
      };
  };
  var stringChunk = function (v) {
      if (v === "") {
          return Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
      };
      return Control_Applicative.pure(chunkApplicative)(Text_PrettyPrint_Leijen.text(v));
  };
  var paragraph = (function () {
      var $36 = Data_Foldable.foldr(Data_Foldable.foldableArray)((function () {
          var $38 = chunked(Text_PrettyPrint_Leijen.appendWithSoftline);
          return function ($39) {
              return $38(stringChunk($39));
          };
      })())(Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)));
      return function ($37) {
          return $36(Options_Applicative_Internal_Utils.words($37));
      };
  })();
  var tabulate$prime = function (v) {
      return function (v1) {
          if (v1.length === 0) {
              return Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
          };
          return Control_Applicative.pure(chunkApplicative)(Text_PrettyPrint_Leijen.vcat(Data_Functor.mapFlipped(Data_Functor.functorArray)(v1)(function (v2) {
              return Text_PrettyPrint_Leijen.indent(2)(Text_PrettyPrint_Leijen.appendWithSpace(Text_PrettyPrint_Leijen.fillBreak(v)(v2.value0))(v2.value1));
          })));
      };
  };
  var tabulate = tabulate$prime(24);
  exports["Chunk"] = Chunk;
  exports["chunked"] = chunked;
  exports["listToChunk"] = listToChunk;
  exports["chunkBeside"] = chunkBeside;
  exports["chunkBesideOrBelow"] = chunkBesideOrBelow;
  exports["vcatChunks"] = vcatChunks;
  exports["vsepChunks"] = vsepChunks;
  exports["isEmpty"] = isEmpty;
  exports["stringChunk"] = stringChunk;
  exports["paragraph"] = paragraph;
  exports["extractChunk"] = extractChunk;
  exports["tabulate"] = tabulate;
  exports["chunkFunctor"] = chunkFunctor;
  exports["chunkApply"] = chunkApply;
  exports["chunkApplicative"] = chunkApplicative;
  exports["chunkSemigroup"] = chunkSemigroup;
  exports["chunkMonoid"] = chunkMonoid;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Builder.Internal"] = $PS["Options.Applicative.Builder.Internal"] || {};
  var exports = $PS["Options.Applicative.Builder.Internal"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Options_Applicative_Common = $PS["Options.Applicative.Common"];
  var Options_Applicative_Help_Chunk = $PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];
  var Text_PrettyPrint_Leijen = $PS["Text.PrettyPrint.Leijen"];                
  var OptionFields = function (x) {
      return x;
  };
  var FlagFields = function (x) {
      return x;
  };
  var DefaultProp = (function () {
      function DefaultProp(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DefaultProp.create = function (value0) {
          return function (value1) {
              return new DefaultProp(value0, value1);
          };
      };
      return DefaultProp;
  })();
  var Mod = (function () {
      function Mod(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Mod.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Mod(value0, value1, value2);
              };
          };
      };
      return Mod;
  })();
  var CommandFields = function (x) {
      return x;
  };
  var optionFieldsHasValue = {
      hasValueDummy: function (v) {
          return Data_Unit.unit;
      }
  };
  var optionFieldsHasMetavar = {
      hasMetavarDummy: function (v) {
          return Data_Unit.unit;
      }
  };
  var optionFieldsHasName = {
      name: function (n) {
          return Data_Newtype.over()()(OptionFields)(function (fields) {
              return {
                  optNames: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ n ])(fields.optNames),
                  optCompleter: fields.optCompleter,
                  optNoArgError: fields.optNoArgError
              };
          });
      }
  };
  var name = function (dict) {
      return dict.name;
  };
  var mkCommand = function (m) {
      var v = m.value0({
          cmdCommands: [  ],
          cmdGroup: Data_Maybe.Nothing.value
      });
      return new Data_Tuple.Tuple(v.cmdGroup, new Data_Tuple.Tuple(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(v.cmdCommands), new Data_Tuple.Tuple(function (v1) {
          return Data_Foldable.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(v1)(v.cmdCommands);
      }, Data_Unit.unit)));
  };
  var flagFieldsHasName = {
      name: function (n) {
          return Data_Newtype.over()()(FlagFields)(function (fields) {
              return {
                  flagNames: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ n ])(fields.flagNames),
                  flagActive: fields.flagActive
              };
          });
      }
  };
  var defaultPropSemigroup = {
      append: function (v) {
          return function (v1) {
              return new DefaultProp(Control_Alt.alt(Data_Maybe.altMaybe)(v.value0)(v1.value0), Control_Alt.alt(Data_Maybe.altMaybe)(v.value1)(v1.value1));
          };
      }
  };
  var modSemigroup = {
      append: function (v) {
          return function (v1) {
              return new Mod(function ($53) {
                  return v1.value0(v.value0($53));
              }, Data_Semigroup.append(defaultPropSemigroup)(v1.value1)(v.value1), function ($54) {
                  return v1.value2(v.value2($54));
              });
          };
      }
  };
  var defaultPropMonoid = {
      mempty: new DefaultProp(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value),
      Semigroup0: function () {
          return defaultPropSemigroup;
      }
  };
  var fieldMod = function (f) {
      return new Mod(f, Data_Monoid.mempty(defaultPropMonoid), Control_Category.identity(Control_Category.categoryFn));
  };
  var modMonoid = {
      mempty: new Mod(Control_Category.identity(Control_Category.categoryFn), Data_Monoid.mempty(defaultPropMonoid), Control_Category.identity(Control_Category.categoryFn)),
      Semigroup0: function () {
          return modSemigroup;
      }
  };
  var optionMod = Mod.create(Control_Category.identity(Control_Category.categoryFn))(Data_Monoid.mempty(defaultPropMonoid));
  var internal = optionMod(Data_Newtype.over()()(Options_Applicative_Types.OptProperties)(function (p) {
      return {
          propVisibility: Options_Applicative_Types.Internal.value,
          propDescMod: p.propDescMod,
          propHelp: p.propHelp,
          propMetaVar: p.propMetaVar,
          propShowDefault: p.propShowDefault
      };
  }));
  var commandFieldsHasMetavar = {
      hasMetavarDummy: function (v) {
          return Data_Unit.unit;
      }
  };
  var baseProps = {
      propMetaVar: "",
      propVisibility: Options_Applicative_Types.Visible.value,
      propHelp: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
      propShowDefault: Data_Maybe.Nothing.value,
      propDescMod: Data_Maybe.Nothing.value
  };
  var mkProps = function (v) {
      return function (g) {
          var props = Data_Newtype.over()()(Options_Applicative_Types.OptProperties)(function (r) {
              return {
                  propShowDefault: Control_Apply.apply(Data_Maybe.applyMaybe)(v.value1)(v.value0),
                  propDescMod: r.propDescMod,
                  propHelp: r.propHelp,
                  propMetaVar: r.propMetaVar,
                  propVisibility: r.propVisibility
              };
          })(g(baseProps));
          return props;
      };
  };
  var mkOption = function (d) {
      return function (g) {
          return function (rdr) {
              return {
                  optMain: rdr,
                  optProps: mkProps(d)(g)
              };
          };
      };
  };
  var mkParser = function (v) {
      return function (g) {
          return function (rdr) {
              var o = Options_Applicative_Common.liftOpt(mkOption(v)(g)(rdr));
              return Data_Maybe.maybe(o)(function (a) {
                  return Control_Alt.alt(Options_Applicative_Types.parserAlt)(o)(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(a));
              })(v.value0);
          };
      };
  };
  var argumentFieldsHasMetavar = {
      hasMetavarDummy: function (v) {
          return Data_Unit.unit;
      }
  };
  exports["Mod"] = Mod;
  exports["name"] = name;
  exports["OptionFields"] = OptionFields;
  exports["CommandFields"] = CommandFields;
  exports["DefaultProp"] = DefaultProp;
  exports["optionMod"] = optionMod;
  exports["fieldMod"] = fieldMod;
  exports["mkCommand"] = mkCommand;
  exports["mkParser"] = mkParser;
  exports["internal"] = internal;
  exports["optionFieldsHasName"] = optionFieldsHasName;
  exports["flagFieldsHasName"] = flagFieldsHasName;
  exports["optionFieldsHasValue"] = optionFieldsHasValue;
  exports["optionFieldsHasMetavar"] = optionFieldsHasMetavar;
  exports["argumentFieldsHasMetavar"] = argumentFieldsHasMetavar;
  exports["commandFieldsHasMetavar"] = commandFieldsHasMetavar;
  exports["modMonoid"] = modMonoid;
  exports["modSemigroup"] = modSemigroup;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Builder"] = $PS["Options.Applicative.Builder"] || {};
  var exports = $PS["Options.Applicative.Builder"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var ExitCodes = $PS["ExitCodes"];
  var Options_Applicative_Builder_Internal = $PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Help_Chunk = $PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];
  var Text_PrettyPrint_Leijen = $PS["Text.PrettyPrint.Leijen"];                
  var PrefsMod = function (x) {
      return x;
  };
  var InfoMod = function (x) {
      return x;
  };
  var value = function (dictHasValue) {
      return function (x) {
          return new Options_Applicative_Builder_Internal.Mod(Control_Category.identity(Control_Category.categoryFn), new Options_Applicative_Builder_Internal.DefaultProp(new Data_Maybe.Just(x), Data_Maybe.Nothing.value), Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var str = Options_Applicative_Types.readerAsk;
  var showDefaultWith = function (s) {
      return new Options_Applicative_Builder_Internal.Mod(Control_Category.identity(Control_Category.categoryFn), new Options_Applicative_Builder_Internal.DefaultProp(Data_Maybe.Nothing.value, new Data_Maybe.Just(s)), Control_Category.identity(Control_Category.categoryFn));
  };
  var showDefault = function (dictShow) {
      return showDefaultWith(Data_Show.show(dictShow));
  };
  var $$short = function (dictHasName) {
      var $81 = Options_Applicative_Builder_Internal.name(dictHasName);
      return function ($82) {
          return Options_Applicative_Builder_Internal.fieldMod($81(Options_Applicative_Types.OptShort.create($82)));
      };
  };
  var progDesc = function (s) {
      return InfoMod(Data_Newtype.over()()(Options_Applicative_Types.ParserInfo)(function (i) {
          return {
              infoProgDesc: Options_Applicative_Help_Chunk.paragraph(s),
              infoFailureCode: i.infoFailureCode,
              infoFooter: i.infoFooter,
              infoFullDesc: i.infoFullDesc,
              infoHeader: i.infoHeader,
              infoParser: i.infoParser,
              infoPolicy: i.infoPolicy
          };
      }));
  };  
  var noArgError = function (e) {
      return Options_Applicative_Builder_Internal.fieldMod(Data_Newtype.over()()(Options_Applicative_Builder_Internal.OptionFields)(function (p) {
          return {
              optNoArgError: Data_Function["const"](e),
              optCompleter: p.optCompleter,
              optNames: p.optNames
          };
      }));
  };
  var prefs = function (m) {
      var base = {
          prefMultiSuffix: "",
          prefDisambiguate: false,
          prefShowHelpOnError: false,
          prefShowHelpOnEmpty: false,
          prefBacktrack: Options_Applicative_Types.Backtrack.value,
          prefColumns: 80
      };
      return Data_Newtype.un()(PrefsMod)(m)(base);
  };
  var prefsModSemigroup = {
      append: function (m1) {
          return function (m2) {
              return PrefsMod((function () {
                  var $83 = Data_Newtype.un()(PrefsMod)(m2);
                  var $84 = Data_Newtype.un()(PrefsMod)(m1);
                  return function ($85) {
                      return $83($84($85));
                  };
              })());
          };
      }
  };
  var prefsModMonoid = {
      mempty: Control_Category.identity(Control_Category.categoryFn),
      Semigroup0: function () {
          return prefsModSemigroup;
      }
  };
  var metavar = function (dictHasMetavar) {
      return function ($$var) {
          return Options_Applicative_Builder_Internal.optionMod(Data_Newtype.over()()(Options_Applicative_Types.OptProperties)(function (p) {
              return {
                  propMetaVar: $$var,
                  propDescMod: p.propDescMod,
                  propHelp: p.propHelp,
                  propShowDefault: p.propShowDefault,
                  propVisibility: p.propVisibility
              };
          }));
      };
  };
  var option = function (r) {
      return function (m) {
          var v = Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("ARG"))(m);
          var v1 = v.value0({
              optNames: [  ],
              optCompleter: Data_Monoid.mempty(Options_Applicative_Types.completerMonoid),
              optNoArgError: Options_Applicative_Types.ExpectsArgError.create
          });
          var crdr = {
              crCompleter: v1.optCompleter,
              crReader: r
          };
          var rdr = new Options_Applicative_Types.OptReader(v1.optNames, crdr, v1.optNoArgError);
          return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(rdr);
      };
  };
  var strOption = option(str);
  var subparser = function (m) {
      var v = Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(metavar(Options_Applicative_Builder_Internal.commandFieldsHasMetavar)("COMMAND"))(m);
      var v1 = Options_Applicative_Builder_Internal.mkCommand(m);
      var rdr = new Options_Applicative_Types.CmdReader(v1.value0, v1.value1.value0, v1.value1.value1.value0);
      return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(rdr);
  };
  var $$long = function (dictHasName) {
      var $86 = Options_Applicative_Builder_Internal.name(dictHasName);
      return function ($87) {
          return Options_Applicative_Builder_Internal.fieldMod($86(Options_Applicative_Types.OptLong.create($87)));
      };
  };
  var infoModSemigroup = {
      append: function (m1) {
          return function (m2) {
              return InfoMod((function () {
                  var $88 = Data_Newtype.un()(InfoMod)(m2);
                  var $89 = Data_Newtype.un()(InfoMod)(m1);
                  return function ($90) {
                      return $88($89($90));
                  };
              })());
          };
      }
  };
  var info = function (parser) {
      return function (m) {
          var base = {
              infoParser: parser,
              infoFullDesc: true,
              infoProgDesc: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
              infoHeader: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
              infoFooter: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
              infoFailureCode: ExitCodes["Error"].value,
              infoPolicy: Options_Applicative_Types.Intersperse.value
          };
          return Data_Newtype.un()(InfoMod)(m)(base);
      };
  };
  var idm = function (dictMonoid) {
      return Data_Monoid.mempty(dictMonoid);
  };
  var hidden = Options_Applicative_Builder_Internal.optionMod(Data_Newtype.over()()(Options_Applicative_Types.OptProperties)(function (p) {
      return {
          propVisibility: Data_Ord.min(Options_Applicative_Types.optVisibilityOrd)(Options_Applicative_Types.Hidden.value)(p.propVisibility),
          propDescMod: p.propDescMod,
          propHelp: p.propHelp,
          propMetaVar: p.propMetaVar,
          propShowDefault: p.propShowDefault
      };
  }));
  var help = function (s) {
      return Options_Applicative_Builder_Internal.optionMod(Data_Newtype.over()()(Options_Applicative_Types.OptProperties)(function (p) {
          return {
              propHelp: Options_Applicative_Help_Chunk.paragraph(s),
              propDescMod: p.propDescMod,
              propMetaVar: p.propMetaVar,
              propShowDefault: p.propShowDefault,
              propVisibility: p.propVisibility
          };
      }));
  };
  var header = function (s) {
      return InfoMod(Data_Newtype.over()()(Options_Applicative_Types.ParserInfo)(function (i) {
          return {
              infoHeader: Options_Applicative_Help_Chunk.paragraph(s),
              infoFailureCode: i.infoFailureCode,
              infoFooter: i.infoFooter,
              infoFullDesc: i.infoFullDesc,
              infoParser: i.infoParser,
              infoPolicy: i.infoPolicy,
              infoProgDesc: i.infoProgDesc
          };
      }));
  };
  var fullDesc = InfoMod(Data_Newtype.over()()(Options_Applicative_Types.ParserInfo)(function (i) {
      return {
          infoFullDesc: true,
          infoFailureCode: i.infoFailureCode,
          infoFooter: i.infoFooter,
          infoHeader: i.infoHeader,
          infoParser: i.infoParser,
          infoPolicy: i.infoPolicy,
          infoProgDesc: i.infoProgDesc
      };
  }));
  var flag$prime = function (actv) {
      return function (v) {
          var rdr = (function () {
              var v1 = v.value0({
                  flagNames: [  ],
                  flagActive: actv
              });
              return new Options_Applicative_Types.FlagReader(v1.flagNames, v1.flagActive);
          })();
          return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(rdr);
      };
  };
  var eitherReader = function (f) {
      return Control_Bind.bind(Options_Applicative_Types.readMBind)(Options_Applicative_Types.readerAsk)((function () {
          var $91 = Data_Either.either(Options_Applicative_Types.readerError)(Control_Applicative.pure(Options_Applicative_Types.readMApplicative));
          return function ($92) {
              return $91(f($92));
          };
      })());
  };
  var $$int = eitherReader(function (s) {
      var v = Data_Int.fromString(s);
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Either.Left.create("Can't parse as Int: `" + (Data_Show.show(Data_Show.showString)(s) + "`"));
      };
      if (v instanceof Data_Maybe.Just) {
          return new Data_Either.Right(v.value0);
      };
      throw new Error("Failed pattern match at Options.Applicative.Builder (line 124, column 28 - line 126, column 20): " + [ v.constructor.name ]);
  });                                                                     
  var defaultPrefs = prefs(idm(prefsModMonoid));
  var command = function (cmd) {
      return function (pinfo) {
          return Options_Applicative_Builder_Internal.fieldMod(Data_Newtype.over()()(Options_Applicative_Builder_Internal.CommandFields)(function (p) {
              return {
                  cmdCommands: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ new Data_Tuple.Tuple(cmd, pinfo) ])(p.cmdCommands),
                  cmdGroup: p.cmdGroup
              };
          }));
      };
  }; 
  var argument = function (p) {
      return function (v) {
          var v1 = v.value0(Data_Monoid.mempty(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons({
              reflectSymbol: function () {
                  return "argCompleter";
              }
          })(Options_Applicative_Types.completerMonoid)()(Data_Monoid.monoidRecordNil))));
          var rdr = {
              crCompleter: v1.argCompleter,
              crReader: p
          };
          return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(new Options_Applicative_Types.ArgReader(rdr));
      };
  };
  var abortOption = function (err) {
      return function (m) {
          return option(Options_Applicative_Types.readerAbort(err))((function (v) {
              return Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(v)(m);
          })(Data_Foldable.fold(Data_Foldable.foldableArray)(Options_Applicative_Builder_Internal.modMonoid)([ noArgError(err), value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(Control_Category.identity(Control_Category.categoryFn)), metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("") ])));
      };
  };
  exports["subparser"] = subparser;
  exports["argument"] = argument;
  exports["flag'"] = flag$prime;
  exports["abortOption"] = abortOption;
  exports["strOption"] = strOption;
  exports["option"] = option;
  exports["short"] = $$short;
  exports["long"] = $$long;
  exports["help"] = help;
  exports["value"] = value;
  exports["showDefault"] = showDefault;
  exports["metavar"] = metavar;
  exports["hidden"] = hidden;
  exports["command"] = command;
  exports["str"] = str;
  exports["int"] = $$int;
  exports["fullDesc"] = fullDesc;
  exports["header"] = header;
  exports["progDesc"] = progDesc;
  exports["info"] = info;
  exports["defaultPrefs"] = defaultPrefs;
  exports["infoModSemigroup"] = infoModSemigroup;
})(PS);
(function(exports) {
  "use strict";

  exports.process = process;

  exports.exit = function (code) {
    return function () {
      process.exit(code);
    };
  };

  exports.copyArray = function (xs) {
    return function () {
      return xs.slice();
    };
  };
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Node.Process"] = $PS["Node.Process"] || {};
  var exports = $PS["Node.Process"];
  var $foreign = $PS["Node.Process"];             
  var stdout = $foreign.process.stdout;           
  var stderr = $foreign.process.stderr;
  var argv = $foreign.copyArray($foreign.process.argv);
  exports["argv"] = argv;
  exports["stdout"] = stdout;
  exports["stderr"] = stderr;
  exports["exit"] = $foreign.exit;
})(PS);
(function(exports) {
  /* global Buffer */
  "use strict";

  exports.writeStringImpl = function (w) {
    return function (enc) {
      return function (s) {
        return function (done) {
          return function () {
            return w.write(s, enc, done);
          };
        };
      };
    };
  };
})(PS["Node.Stream"] = PS["Node.Stream"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Node.Stream"] = $PS["Node.Stream"] || {};
  var exports = $PS["Node.Stream"];
  var $foreign = $PS["Node.Stream"];
  var Data_Show = $PS["Data.Show"];
  var Node_Encoding = $PS["Node.Encoding"];                
  var writeString = function (w) {
      return function (enc) {
          return $foreign.writeStringImpl(w)(Data_Show.show(Node_Encoding.showEncoding)(enc));
      };
  };
  exports["writeString"] = writeString;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.BashCompletion"] = $PS["Options.Applicative.BashCompletion"] || {};
  var exports = $PS["Options.Applicative.BashCompletion"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Options_Applicative_Builder = $PS["Options.Applicative.Builder"];
  var Options_Applicative_Builder_Internal = $PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Common = $PS["Options.Applicative.Common"];
  var Options_Applicative_Help_Chunk = $PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Internal = $PS["Options.Applicative.Internal"];
  var Options_Applicative_Internal_Utils = $PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];
  var Text_PrettyPrint_Leijen = $PS["Text.PrettyPrint.Leijen"];                
  var Standard = (function () {
      function Standard() {

      };
      Standard.value = new Standard();
      return Standard;
  })();
  var Enriched = (function () {
      function Enriched(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Enriched.create = function (value0) {
          return function (value1) {
              return new Enriched(value0, value1);
          };
      };
      return Enriched;
  })();
  var zshCompletionScript = function (prog) {
      return function (progn) {
          return Control_Applicative.pure(Effect.applicativeEffect)([ "#compdef " + progn, "", "local request", "local completions", "local word", "local index=$((CURRENT - 1))", "", "request=(--bash-completion-enriched --bash-completion-index $index)", "for arg in ${words[@]}; do", "  request=(${request[@]} --bash-completion-word $arg)", "done", "", "IFS=$'\\n' completions=($( " + (prog + " \"${request[@]}\" ))"), "", "for word in $completions; do", "  local -a parts", "", "  # Split the line at a tab if there is one.", "  IFS=$'\\t' parts=($( echo $word ))", "", "  if [[ -n $parts[2] ]]; then", "     if [[ $word[1] == \"-\" ]]; then", "       local desc=(\"$parts[1] ($parts[2])\")", "       compadd -d desc -- $parts[1]", "     else", "       local desc=($(print -f  \"%-019s -- %s\" $parts[1] $parts[2]))", "       compadd -l -d desc -- $parts[1]", "     fi", "  else", "    compadd -f -- $word", "  fi", "done" ]);
      };
  };
  var fishCompletionScript = function (prog) {
      return function (progn) {
          return Control_Applicative.pure(Effect.applicativeEffect)([ " function _" + progn, "    set -l cl (commandline --tokenize --current-process)", "    # Hack around fish issue #3934", "    set -l cn (commandline --tokenize --cut-at-cursor --current-process)", "    set -l cn (count $cn)", "    set -l tmpline --bash-completion-enriched --bash-completion-index $cn", "    for arg in $cl", "      set tmpline $tmpline --bash-completion-word $arg", "    end", "    for opt in (" + (prog + " $tmpline)"), "      if test -d $opt", "        echo -E \"$opt/\"", "      else", "        echo -E \"$opt\"", "      end", "    end", "end", "", "complete --no-files --command " + (progn + (" --arguments '(_" + (progn + ")'"))) ]);
      };
  };
  var bashCompletionScript = function (prog) {
      return function (progn) {
          return Control_Applicative.pure(Effect.applicativeEffect)([ "_" + (progn + "()"), "{", "    local CMDLINE", "    local IFS=$'\\n'", "    CMDLINE=(--bash-completion-index $COMP_CWORD)", "", "    for arg in ${COMP_WORDS[@]}; do", "        CMDLINE=(${CMDLINE[@]} --bash-completion-word $arg)", "    done", "", "    COMPREPLY=( $(" + (prog + " \"${CMDLINE[@]}\") )"), "}", "", "complete -o filenames -F _" + (progn + (" " + progn)) ]);
      };
  };
  var arraySplitAt = function (idx) {
      return function (arr) {
          if (idx === 0) {
              return {
                  init: [  ],
                  rest: arr
              };
          };
          return {
              init: Data_Array.slice(0)(idx)(arr),
              rest: Data_Array.slice(idx)(Data_Array.length(arr))(arr)
          };
      };
  };
  var bashCompletionQuery = function (pinfo) {
      return function (pprefs) {
          return function (richness) {
              return function (ws) {
                  return function (i) {
                      return function (v) {
                          var v1 = arraySplitAt(i)(ws);
                          var run_completer = function (c) {
                              return Data_Newtype.un()(Options_Applicative_Types.Completer)(c)(Data_Maybe.fromMaybe("")(Data_Array.head(v1.rest)));
                          };
                          var render_line = function (len) {
                              return function (doc) {
                                  var v2 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array_NonEmpty.uncons)(Data_Array_NonEmpty.fromArray(Options_Applicative_Internal_Utils.lines(Text_PrettyPrint_Leijen.displayS(Text_PrettyPrint_Leijen.renderPretty(1.0)(len)(doc)))));
                                  if (v2 instanceof Data_Maybe.Nothing) {
                                      return "";
                                  };
                                  if (v2 instanceof Data_Maybe.Just && v2.value0.tail.length === 0) {
                                      return v2.value0.head;
                                  };
                                  if (v2 instanceof Data_Maybe.Just) {
                                      return v2.value0.head + "...";
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.BashCompletion (line 162, column 27 - line 165, column 43): " + [ v2.constructor.name ]);
                              };
                          };
                          var is_completion = (function () {
                              var v2 = Data_Array.head(v1.rest);
                              if (v2 instanceof Data_Maybe.Just) {
                                  return Options_Applicative_Internal_Utils.startsWith(v2.value0);
                              };
                              if (v2 instanceof Data_Maybe.Nothing) {
                                  return Data_Function["const"](true);
                              };
                              throw new Error("Failed pattern match at Options.Applicative.BashCompletion (line 175, column 7 - line 177, column 30): " + [ v2.constructor.name ]);
                          })();
                          var filter_names = Data_Array.filter(is_completion);
                          var show_names = (function () {
                              var $84 = Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Common.showOption);
                              return function ($85) {
                                  return filter_names($84($85));
                              };
                          })();
                          var compl = Options_Applicative_Common.runParserInfo(Options_Applicative_Internal.completionMonadP)(pinfo)(Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Array.drop(1)(v1.init)));
                          var add_opt_help = function (dictFunctor) {
                              return function (opt) {
                                  if (richness instanceof Standard) {
                                      return Control_Category.identity(Control_Category.categoryFn);
                                  };
                                  if (richness instanceof Enriched) {
                                      return Data_Functor.map(dictFunctor)(function (o) {
                                          var h = Data_Newtype.un()(Options_Applicative_Help_Chunk.Chunk)(Options_Applicative_Types.optHelp(opt));
                                          return Data_Maybe.maybe(o)(function (h$prime) {
                                              return o + ("\x09" + render_line(richness.value0)(h$prime));
                                          })(h);
                                      });
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.BashCompletion (line 138, column 24 - line 143, column 79): " + [ richness.constructor.name ]);
                              };
                          };
                          var add_cmd_help = function (dictFunctor) {
                              return function (p) {
                                  if (richness instanceof Standard) {
                                      return Control_Category.identity(Control_Category.categoryFn);
                                  };
                                  if (richness instanceof Enriched) {
                                      return Data_Functor.map(dictFunctor)(function (cmd) {
                                          var h = Control_Bind.bind(Data_Maybe.bindMaybe)(p(cmd))((function () {
                                              var $86 = Data_Newtype.un()(Options_Applicative_Help_Chunk.Chunk);
                                              var $87 = Data_Newtype.un()(Options_Applicative_Types.ParserInfo);
                                              return function ($88) {
                                                  return $86((function (v2) {
                                                      return v2.infoProgDesc;
                                                  })($87($88)));
                                              };
                                          })());
                                          return Data_Maybe.maybe(cmd)(function (h$prime) {
                                              return cmd + ("\x09" + render_line(richness.value1)(h$prime));
                                          })(h);
                                      });
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.BashCompletion (line 148, column 22 - line 153, column 85): " + [ richness.constructor.name ]);
                              };
                          };
                          var opt_completions = function (argPolicy) {
                              return function (hinfo) {
                                  return function (opt) {
                                      var v2 = (Data_Newtype.un()(Options_Applicative_Types.Option)(opt)).optMain;
                                      if (v2 instanceof Options_Applicative_Types.OptReader) {
                                          if (Data_Eq.notEq(Options_Applicative_Types.argPolicyEq)(argPolicy)(Options_Applicative_Types.AllPositionals.value)) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(add_opt_help(Data_Functor.functorArray)(opt)(show_names(v2.value0)));
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                      };
                                      if (v2 instanceof Options_Applicative_Types.FlagReader) {
                                          if (Data_Eq.notEq(Options_Applicative_Types.argPolicyEq)(argPolicy)(Options_Applicative_Types.AllPositionals.value)) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(add_opt_help(Data_Functor.functorArray)(opt)(show_names(v2.value0)));
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                      };
                                      if (v2 instanceof Options_Applicative_Types.ArgReader) {
                                          if ((Data_Newtype.un()(Options_Applicative_Types.OptHelpInfo)(hinfo)).hinfoUnreachableArgs) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return run_completer((Data_Newtype.un()(Options_Applicative_Types.CReader)(v2.value0)).crCompleter);
                                          };
                                      };
                                      if (v2 instanceof Options_Applicative_Types.CmdReader) {
                                          if ((Data_Newtype.un()(Options_Applicative_Types.OptHelpInfo)(hinfo)).hinfoUnreachableArgs) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(add_cmd_help(Data_Functor.functorArray)(v2.value2)(filter_names(v2.value1)));
                                          };
                                      };
                                      throw new Error("Failed pattern match at Options.Applicative.BashCompletion (line 113, column 43 - line 133, column 53): " + [ v2.constructor.name ]);
                                  };
                              };
                          };
                          var list_options = function (a) {
                              var $89 = Data_Functor.map(Effect.functorEffect)(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidArray));
                              var $90 = Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect);
                              var $91 = Options_Applicative_Common.mapParser(opt_completions(a));
                              return function ($92) {
                                  return $89($90($91($92)));
                              };
                          };
                          var v2 = Options_Applicative_Internal.runCompletion(compl)(pprefs);
                          if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof Data_Either.Left) {
                              return Data_Exists.runExists(function (p) {
                                  return list_options(v2.value0.value0.value1)(p);
                              })(v2.value0.value0.value0.value0);
                          };
                          if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof Data_Either.Right) {
                              return run_completer(v2.value0.value0);
                          };
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                          };
                          throw new Error("Failed pattern match at Options.Applicative.BashCompletion (line 83, column 52 - line 89, column 15): " + [ v2.constructor.name ]);
                      };
                  };
              };
          };
      };
  };
  var bashCompletionParser = function (pinfo) {
      return function (pprefs) {
          var failure = function (opts) {
              return {
                  execCompletion: function (progn) {
                      return Data_Functor.map(Effect.functorEffect)(Options_Applicative_Internal_Utils.unLines(Data_Foldable.foldableArray))(opts(progn));
                  }
              };
          };
          var complParser = Control_Alt.alt(Options_Applicative_Types.parserAlt)(Control_Alt.alt(Options_Applicative_Types.parserAlt)(Control_Alt.alt(Options_Applicative_Types.parserAlt)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(bashCompletionQuery(pinfo)(pprefs))(Control_Alt.alt(Options_Applicative_Types.parserAlt)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Options_Applicative_Builder["flag'"](Enriched.create)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.flagFieldsHasName)("bash-completion-enriched"))(Options_Applicative_Builder_Internal.internal)))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-option-desc-length"))(Options_Applicative_Builder_Internal.internal))(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(40)))))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-command-desc-length"))(Options_Applicative_Builder_Internal.internal))(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(40)))))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(Standard.value))))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Data_Array.fromFoldable(Data_List_Types.foldableList))(Options_Applicative_Types.many(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-word"))(Options_Applicative_Builder_Internal.internal))))))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-index"))(Options_Applicative_Builder_Internal.internal)))))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(bashCompletionScript)(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-script"))(Options_Applicative_Builder_Internal.internal))))))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(fishCompletionScript)(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("fish-completion-script"))(Options_Applicative_Builder_Internal.internal))))))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(zshCompletionScript)(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("zsh-completion-script"))(Options_Applicative_Builder_Internal.internal)))));
          return complParser;
      };
  };
  exports["bashCompletionParser"] = bashCompletionParser;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Help.Types"] = $PS["Options.Applicative.Help.Types"] || {};
  var exports = $PS["Options.Applicative.Help.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Options_Applicative_Help_Chunk = $PS["Options.Applicative.Help.Chunk"];
  var Text_PrettyPrint_Leijen = $PS["Text.PrettyPrint.Leijen"];                
  var ParserHelp = function (x) {
      return x;
  };                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
  var parserHelpMonoid = Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "helpBody";
      }
  })(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "helpError";
      }
  })(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "helpFooter";
      }
  })(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "helpHeader";
      }
  })(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "helpSuggestions";
      }
  })(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "helpUsage";
      }
  })(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordNil)))))));
  var helpText = function (v) {
      return Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(Options_Applicative_Help_Chunk.vsepChunks([ v.helpError, v.helpSuggestions, v.helpHeader, v.helpUsage, v.helpBody, v.helpFooter ]));
  };
  var renderHelp = function (cols) {
      var $2 = Text_PrettyPrint_Leijen.renderPretty(1.0)(cols);
      return function ($3) {
          return Text_PrettyPrint_Leijen.displayS($2(helpText($3)));
      };
  };
  exports["ParserHelp"] = ParserHelp;
  exports["renderHelp"] = renderHelp;
  exports["parserHelpMonoid"] = parserHelpMonoid;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Help.Core"] = $PS["Options.Applicative.Help.Core"] || {};
  var exports = $PS["Options.Applicative.Help.Core"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Options_Applicative_Common = $PS["Options.Applicative.Common"];
  var Options_Applicative_Help_Chunk = $PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Types = $PS["Options.Applicative.Help.Types"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];
  var Text_PrettyPrint_Leijen = $PS["Text.PrettyPrint.Leijen"];                
  var OptDescStyle = function (x) {
      return x;
  };
  var usageHelp = function (chunk) {
      return Data_Newtype.over()()(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpUsage: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var suggestionsHelp = function (chunk) {
      return Data_Newtype.over()()(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpSuggestions: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var intersperse = function (sep) {
      var $28 = Data_Array.fold(Data_Monoid.monoidArray);
      var $29 = Data_Array.mapWithIndex(function (idx) {
          return function (e) {
              var $13 = idx === 0;
              if ($13) {
                  return [ e ];
              };
              return [ sep, e ];
          };
      });
      return function ($30) {
          return $28($29($30));
      };
  };
  var optDesc = function (pprefs) {
      return function (style) {
          return function (info) {
              return function (opt) {
                  var suffix = (function () {
                      if ((Data_Newtype.un()(Options_Applicative_Types.OptHelpInfo)(info)).hinfoMulti) {
                          return Options_Applicative_Help_Chunk.stringChunk((Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(pprefs)).prefMultiSuffix);
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Help.Core (line 58, column 7 - line 62, column 17): " + [  ]);
                  })();
                  var show_opt = (function () {
                      if ((Data_Newtype.un()(Options_Applicative_Types.OptHelpInfo)(info)).hinfoDefault && !(Data_Newtype.un()(OptDescStyle)(style)).descOptional) {
                          return false;
                      };
                      if (Data_Eq.eq(Options_Applicative_Types.optVisibilityEq)(Options_Applicative_Types.optVisibility(opt))(Options_Applicative_Types.Hidden.value)) {
                          return (Data_Newtype.un()(OptDescStyle)(style)).descHidden;
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Eq.eq(Options_Applicative_Types.optVisibilityEq)(Options_Applicative_Types.optVisibility(opt))(Options_Applicative_Types.Visible.value);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Help.Core (line 51, column 7 - line 57, column 39): " + [  ]);
                  })();
                  var ns = Options_Applicative_Common.optionNames((Data_Newtype.un()(Options_Applicative_Types.Option)(opt)).optMain);
                  var mv = Options_Applicative_Help_Chunk.stringChunk(Options_Applicative_Types.optMetaVar(opt));
                  var descs = Data_Functor.map(Data_Functor.functorArray)(function ($31) {
                      return Text_PrettyPrint_Leijen.string(Options_Applicative_Common.showOption($31));
                  })(Data_Array.sort(Options_Applicative_Types.optNameOrd)(ns));
                  var render = function (chunk) {
                      if (!show_opt) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      if (Options_Applicative_Help_Chunk.isEmpty(chunk) || !(Data_Newtype.un()(OptDescStyle)(style)).descSurround) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(chunk)(suffix);
                      };
                      if ((Data_Newtype.un()(Options_Applicative_Types.OptHelpInfo)(info)).hinfoDefault) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.brackets)(chunk))(suffix);
                      };
                      if (Data_Array["null"](Data_Array.drop(1)(descs))) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(chunk)(suffix);
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.parens)(chunk))(suffix);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Help.Core (line 63, column 7 - line 73, column 43): " + [ chunk.constructor.name ]);
                  };
                  var desc$prime = Options_Applicative_Help_Chunk.chunkBeside(Options_Applicative_Help_Chunk.listToChunk(Text_PrettyPrint_Leijen.docMonoid)(intersperse((Data_Newtype.un()(OptDescStyle)(style)).descSep)(descs)))(mv);
                  return Data_Maybe.maybe(Control_Category.identity(Control_Category.categoryFn))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor))(Options_Applicative_Types.optDescMod(opt))(render(desc$prime));
              };
          };
      };
  };
  var headerHelp = function (chunk) {
      return Data_Newtype.over()()(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpHeader: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var fullDesc = function (pprefs) {
      var style = {
          descSep: Text_PrettyPrint_Leijen.string(","),
          descHidden: true,
          descOptional: true,
          descSurround: false
      };
      var doc = function (info) {
          return function (opt) {
              var show_def = function (s) {
                  return Text_PrettyPrint_Leijen.parens(Text_PrettyPrint_Leijen.appendWithSpace(Text_PrettyPrint_Leijen.string("default:"))(Text_PrettyPrint_Leijen.string(s)));
              };
              var n = optDesc(pprefs)(style)(info)(opt);
              var hdef = Options_Applicative_Help_Chunk.Chunk(Data_Functor.map(Data_Maybe.functorMaybe)(show_def)(Options_Applicative_Types.optShowDefault(opt)));
              var h = Options_Applicative_Types.optHelp(opt);
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(!Options_Applicative_Help_Chunk.isEmpty(n)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(!Options_Applicative_Help_Chunk.isEmpty(h)))(function () {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(n), Text_PrettyPrint_Leijen.align(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(Options_Applicative_Help_Chunk.chunkBeside(h)(hdef)))));
                  });
              });
          };
      };
      var $32 = Options_Applicative_Common.mapParser(doc);
      return function ($33) {
          return Options_Applicative_Help_Chunk.tabulate(Data_Array.catMaybes($32($33)));
      };
  };
  var footerHelp = function (chunk) {
      return Data_Newtype.over()()(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpFooter: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var fold_tree = function (v) {
      if (v instanceof Options_Applicative_Types.Leaf) {
          return v.value0;
      };
      if (v instanceof Options_Applicative_Types.MultNode) {
          return Data_Array.foldr(function ($34) {
              return Options_Applicative_Help_Chunk.chunkBesideOrBelow(fold_tree($34));
          })(Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)))(v.value0);
      };
      if (v instanceof Options_Applicative_Types.AltNode) {
          var alt_node = function (v1) {
              if (v1.length === 1) {
                  return v1[0];
              };
              return Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.parens)(Data_Array.foldr(Options_Applicative_Help_Chunk.chunked(function (x) {
                  return function (y) {
                      return Text_PrettyPrint_Leijen.appendWithSoftline(x)(Text_PrettyPrint_Leijen.appendWithSoftline(Text_PrettyPrint_Leijen["char"]("|"))(y));
                  };
              }))(Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)))(v1));
          };
          return alt_node(Data_Array.filter((function () {
              var $35 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
              return function ($36) {
                  return $35(Options_Applicative_Help_Chunk.isEmpty($36));
              };
          })())(Data_Functor.map(Data_Functor.functorArray)(fold_tree)(v.value0)));
      };
      throw new Error("Failed pattern match at Options.Applicative.Help.Core (line 116, column 1 - line 116, column 46): " + [ v.constructor.name ]);
  };
  var errorHelp = function (chunk) {
      return Data_Newtype.over()()(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpError: chunk,
              helpBody: v.helpBody,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var cmdDesc = (function () {
      var desc = function (v) {
          return function (opt) {
              var v1 = (Data_Newtype.un()(Options_Applicative_Types.Option)(opt)).optMain;
              if (v1 instanceof Options_Applicative_Types.CmdReader) {
                  return Data_Tuple.Tuple.create(v1.value0)(Options_Applicative_Help_Chunk.tabulate(Control_Bind.bind(Control_Bind.bindArray)(Data_Array.reverse(v1.value1))(function (cmd) {
                      return Control_Bind.bind(Control_Bind.bindArray)(Data_Maybe.maybe([  ])(Control_Applicative.pure(Control_Applicative.applicativeArray))(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                          var $37 = Data_Newtype.un()(Options_Applicative_Types.ParserInfo);
                          return function ($38) {
                              return (function (v2) {
                                  return v2.infoProgDesc;
                              })($37($38));
                          };
                      })())(v1.value2(cmd))))(function (d) {
                          return Control_Applicative.pure(Control_Applicative.applicativeArray)(new Data_Tuple.Tuple(Text_PrettyPrint_Leijen.string(cmd), Text_PrettyPrint_Leijen.align(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(d))));
                      });
                  })));
              };
              return Data_Monoid.mempty(Data_Tuple.monoidTuple(Data_Maybe.monoidMaybe(Data_Semigroup.semigroupString))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)));
          };
      };
      return Options_Applicative_Common.mapParser(desc);
  })();
  var briefDesc$prime = function (showOptional) {
      return function (pprefs) {
          var style = {
              descSep: Text_PrettyPrint_Leijen.string("|"),
              descHidden: false,
              descOptional: showOptional,
              descSurround: true
          };
          var $39 = Options_Applicative_Common.treeMapParser(optDesc(pprefs)(style));
          return function ($40) {
              return fold_tree($39($40));
          };
      };
  };
  var missingDesc = briefDesc$prime(false);
  var briefDesc = briefDesc$prime(true);
  var parserUsage = function (pprefs) {
      return function (p) {
          return function (progn) {
              return Text_PrettyPrint_Leijen.hsep([ Text_PrettyPrint_Leijen.string("Usage:"), Text_PrettyPrint_Leijen.string(progn), Text_PrettyPrint_Leijen.align(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(briefDesc(pprefs)(p))) ]);
          };
      };
  };
  var bodyHelp = function (chunk) {
      return Data_Newtype.over()()(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpBody: chunk,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var parserHelp = function (pprefs) {
      return function (p) {
          var with_title = function (title) {
              return Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(function (v) {
                  return Text_PrettyPrint_Leijen.appendWithLine(Text_PrettyPrint_Leijen.string(title))(v);
              });
          };
          var group_title = function (arr) {
              var v = Data_Array_NonEmpty.uncons(arr);
              return with_title(Data_Maybe.fromMaybe("Available commands:")(Data_Tuple.fst(v.head)))(Options_Applicative_Help_Chunk.vcatChunks(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Tuple.snd(v.head) ])(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(v.tail))));
          };
          var cs = Data_Array.groupBy(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString)))(Data_Tuple.fst))(cmdDesc(p));
          return bodyHelp(Options_Applicative_Help_Chunk.vsepChunks(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ with_title("Available options:")(fullDesc(pprefs)(p)) ])(Data_Functor.map(Data_Functor.functorArray)(group_title)(cs))));
      };
  };
  exports["missingDesc"] = missingDesc;
  exports["errorHelp"] = errorHelp;
  exports["headerHelp"] = headerHelp;
  exports["suggestionsHelp"] = suggestionsHelp;
  exports["usageHelp"] = usageHelp;
  exports["footerHelp"] = footerHelp;
  exports["parserHelp"] = parserHelp;
  exports["parserUsage"] = parserUsage;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Help.Levenshtein"] = $PS["Options.Applicative.Help.Levenshtein"] || {};
  var exports = $PS["Options.Applicative.Help.Levenshtein"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function_Memoize = $PS["Data.Function.Memoize"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup_Foldable = $PS["Data.Semigroup.Foldable"];                
  var editDistance = function (dictEq) {
      return function (xs) {
          return function (ys) {
              var dist$prime = Data_Function_Memoize.memoize2(Data_Function_Memoize.tabulateNat)(Data_Function_Memoize.tabulateNat)(function (a) {
                  return function (b) {
                      return dist(a)(b);
                  };
              });
              var dist = function (v) {
                  return function (v1) {
                      if (v === 0) {
                          return v1;
                      };
                      if (v1 === 0) {
                          return v;
                      };
                      return Data_Semigroup_Foldable.minimum(Data_Ord.ordInt)(Data_NonEmpty.foldable1NonEmpty(Data_Foldable.foldableArray))(new Data_NonEmpty.NonEmpty(dist$prime(v - 1 | 0)(v1) + 1 | 0, [ dist$prime(v)(v1 - 1 | 0) + 1 | 0, (function (dictPartial) {
                          var $6 = Data_Eq.eq(dictEq)(xs[v - 1 | 0])(ys[v1 - 1 | 0]);
                          if ($6) {
                              return dist$prime(v - 1 | 0)(v1 - 1 | 0);
                          };
                          return 1 + dist$prime(v - 1 | 0)(v1 - 1 | 0) | 0;
                      })() ]));
                  };
              };
              return dist$prime(Data_Array.length(xs))(Data_Array.length(ys));
          };
      };
  };
  exports["editDistance"] = editDistance;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Options.Applicative.Extra"] = $PS["Options.Applicative.Extra"] || {};
  var exports = $PS["Options.Applicative.Extra"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var ExitCodes = $PS["ExitCodes"];
  var Node_Encoding = $PS["Node.Encoding"];
  var Node_Process = $PS["Node.Process"];
  var Node_Stream = $PS["Node.Stream"];
  var Options_Applicative_BashCompletion = $PS["Options.Applicative.BashCompletion"];
  var Options_Applicative_Builder = $PS["Options.Applicative.Builder"];
  var Options_Applicative_Builder_Internal = $PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Common = $PS["Options.Applicative.Common"];
  var Options_Applicative_Help_Chunk = $PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Core = $PS["Options.Applicative.Help.Core"];
  var Options_Applicative_Help_Levenshtein = $PS["Options.Applicative.Help.Levenshtein"];
  var Options_Applicative_Help_Types = $PS["Options.Applicative.Help.Types"];
  var Options_Applicative_Internal = $PS["Options.Applicative.Internal"];
  var Options_Applicative_Internal_Utils = $PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];
  var Text_PrettyPrint_Leijen = $PS["Text.PrettyPrint.Leijen"];                
  var renderFailure = function (failure) {
      return function (progn) {
          var v = Data_Newtype.un()(Options_Applicative_Types.ParserFailure)(failure)(progn);
          return new Data_Tuple.Tuple(Options_Applicative_Help_Types.renderHelp(v.value1.value1.value0)(v.value0), v.value1.value0);
      };
  };
  var parserFailure = function (pprefs) {
      return function (pinfo) {
          return function (msg) {
              return function (ctx) {
                  var with_context = function (arr) {
                      return function (i) {
                          return function (f) {
                              var v = Data_Array.head(arr);
                              if (v instanceof Data_Maybe.Nothing) {
                                  return f([  ])(i);
                              };
                              if (v instanceof Data_Maybe.Just) {
                                  return Data_Exists.runExists(function (i$prime) {
                                      return f(Options_Applicative_Internal.contextNames(arr))(i$prime);
                                  })(v.value0.value1);
                              };
                              throw new Error("Failed pattern match at Options.Applicative.Extra (line 183, column 28 - line 185, column 73): " + [ v.constructor.name ]);
                          };
                      };
                  };
                  var usage_help = function (progn) {
                      return function (names) {
                          return function (v) {
                              if (msg instanceof Options_Applicative_Types.InfoMsg) {
                                  return Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid);
                              };
                              return Options_Applicative_Help_Core.usageHelp(Options_Applicative_Help_Chunk.vcatChunks([ Control_Applicative.pure(Options_Applicative_Help_Chunk.chunkApplicative)(Options_Applicative_Help_Core.parserUsage(pprefs)(v.infoParser)(Options_Applicative_Internal_Utils.unWords(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ progn ])(names)))), Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.indent(2))(v.infoProgDesc) ]));
                          };
                      };
                  };
                  var suggestion_help = Options_Applicative_Help_Core.suggestionsHelp((function () {
                      if (msg instanceof Options_Applicative_Types.UnexpectedError) {
                          var opt_completions = function (v) {
                              return function (v1) {
                                  if (v1.optMain instanceof Options_Applicative_Types.OptReader) {
                                      return Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Common.showOption)(v1.optMain.value0);
                                  };
                                  if (v1.optMain instanceof Options_Applicative_Types.FlagReader) {
                                      return Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Common.showOption)(v1.optMain.value0);
                                  };
                                  if (v1.optMain instanceof Options_Applicative_Types.ArgReader) {
                                      return [  ];
                                  };
                                  if (v1.optMain instanceof Options_Applicative_Types.CmdReader) {
                                      if (v.hinfoUnreachableArgs) {
                                          return [  ];
                                      };
                                      if (Data_Boolean.otherwise) {
                                          return v1.optMain.value1;
                                      };
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.Extra (line 273, column 64 - line 280, column 37): " + [ v1.optMain.constructor.name ]);
                              };
                          };
                          var possibles = Data_Array.fold(Data_Monoid.monoidArray)(Data_Exists.runExists(function (zz) {
                              return Options_Applicative_Common.mapParser(opt_completions)(zz);
                          })(msg.value1.value0));
                          var isClose = function (a) {
                              return Data_Function.on(Options_Applicative_Help_Levenshtein.editDistance(Data_Eq.eqChar))(Data_String_CodeUnits.toCharArray)(a)(msg.value0) < 3;
                          };
                          var good = Data_Array.filter(isClose)(possibles);
                          var prose = (function () {
                              var $43 = Data_Array.length(good) < 2;
                              if ($43) {
                                  return Options_Applicative_Help_Chunk.stringChunk("Did you mean this?");
                              };
                              return Options_Applicative_Help_Chunk.stringChunk("Did you mean one of these?");
                          })();
                          var suggestions = Control_Apply.apply(Options_Applicative_Help_Chunk.chunkApply)(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.appendWithLine)(prose))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.indent(4))(Options_Applicative_Help_Chunk.vcatChunks(Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Help_Chunk.stringChunk)(good))));
                          return suggestions;
                      };
                      return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                  })());
                  var show_full_help = (function () {
                      if (msg instanceof Options_Applicative_Types.ShowHelpText) {
                          return true;
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError && (msg.value0 instanceof Options_Applicative_Types.CmdStart && (Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(pprefs)).prefShowHelpOnEmpty)) {
                          return true;
                      };
                      return (Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(pprefs)).prefShowHelpOnError;
                  })();
                  var exit_code = (function () {
                      if (msg instanceof Options_Applicative_Types.ErrorMsg) {
                          return (Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError) {
                          return (Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.ExpectsArgError) {
                          return (Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.UnexpectedError) {
                          return (Data_Newtype.un()(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.ShowHelpText) {
                          return ExitCodes.Success.value;
                      };
                      if (msg instanceof Options_Applicative_Types.InfoMsg) {
                          return ExitCodes.Success.value;
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Extra (line 171, column 17 - line 177, column 44): " + [ msg.constructor.name ]);
                  })();
                  var error_help = Options_Applicative_Help_Core.errorHelp((function () {
                      if (msg instanceof Options_Applicative_Types.ShowHelpText) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      if (msg instanceof Options_Applicative_Types.ErrorMsg) {
                          return Options_Applicative_Help_Chunk.stringChunk(msg.value0);
                      };
                      if (msg instanceof Options_Applicative_Types.InfoMsg) {
                          return Options_Applicative_Help_Chunk.stringChunk(msg.value0);
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError && (msg.value0 instanceof Options_Applicative_Types.CmdStart && (Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(pprefs)).prefShowHelpOnEmpty)) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError) {
                          return Data_Exists.runExists(function (x) {
                              return Options_Applicative_Help_Chunk.chunkBeside(Options_Applicative_Help_Chunk.stringChunk("Missing:"))(Options_Applicative_Help_Core.missingDesc(pprefs)(x));
                          })(msg.value1.value0);
                      };
                      if (msg instanceof Options_Applicative_Types.ExpectsArgError) {
                          return Options_Applicative_Help_Chunk.stringChunk("The option `" + (msg.value0 + "` expects an argument."));
                      };
                      if (msg instanceof Options_Applicative_Types.UnexpectedError) {
                          var msg$prime = (function () {
                              var $67 = Options_Applicative_Internal_Utils.startsWith("-")(msg.value0);
                              if ($67) {
                                  return "Invalid option `" + (msg.value0 + "'");
                              };
                              return "Invalid argument `" + (msg.value0 + "'");
                          })();
                          return Options_Applicative_Help_Chunk.stringChunk(msg$prime);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Extra (line 196, column 30 - line 225, column 30): " + [ msg.constructor.name ]);
                  })());
                  var base_help = function (v) {
                      var h = Options_Applicative_Help_Core.headerHelp(v.infoHeader);
                      var f = Options_Applicative_Help_Core.footerHelp(v.infoFooter);
                      if (show_full_help) {
                          return Data_Array.fold(Options_Applicative_Help_Types.parserHelpMonoid)([ h, f, Options_Applicative_Help_Core.parserHelp(pprefs)(v.infoParser) ]);
                      };
                      return Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid);
                  };
                  return Options_Applicative_Types.ParserFailure(function (progn) {
                      var h = with_context(ctx)(pinfo)(function (names) {
                          return function (pinfo$prime) {
                              return Data_Array.fold(Options_Applicative_Help_Types.parserHelpMonoid)([ base_help(pinfo$prime), usage_help(progn)(names)(pinfo$prime), suggestion_help, error_help ]);
                          };
                      });
                      return new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(exit_code, new Data_Tuple.Tuple((Data_Newtype.un()(Options_Applicative_Types.ParserPrefs)(pprefs)).prefColumns, Data_Unit.unit)));
                  });
              };
          };
      };
  };
  var helper = Options_Applicative_Builder.abortOption(Options_Applicative_Types.ShowHelpText.value)(Data_Array.fold(Options_Applicative_Builder_Internal.modMonoid)([ Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("help"), Options_Applicative_Builder["short"](Options_Applicative_Builder_Internal.optionFieldsHasName)("h"), Options_Applicative_Builder.help("Show this help text"), Options_Applicative_Builder.hidden ]));
  var getProgName = Data_Functor.mapFlipped(Effect.functorEffect)(Node_Process.argv)(function (args) {
      return Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(args)(1))(function (executablePath) {
          return Data_Array.last(Data_String_Common.split("/")(executablePath));
      }));
  });
  var getArgs = Data_Functor.mapFlipped(Effect.functorEffect)(Node_Process.argv)(Data_Array.drop(2));
  var exitWith = function (c) {
      return Node_Process.exit(Data_Enum.fromEnum(ExitCodes.boundedEnumExitCode)(c));
  };
  var exitSuccess = Node_Process.exit(Data_Enum.fromEnum(ExitCodes.boundedEnumExitCode)(ExitCodes.Success.value));
  var handleParseResult = function (v) {
      if (v instanceof Options_Applicative_Types.Success) {
          return Control_Applicative.pure(Effect.applicativeEffect)(v.value0);
      };
      if (v instanceof Options_Applicative_Types.Failure) {
          return function __do() {
              var progn = getProgName();
              var v1 = renderFailure(v.value0)(progn);
              var stream = (function () {
                  if (v1.value1 instanceof ExitCodes.Success) {
                      return Node_Process.stdout;
                  };
                  return Node_Process.stderr;
              })();
              Data_Functor["void"](Effect.functorEffect)(Node_Stream.writeString(stream)(Node_Encoding.UTF8.value)(v1.value0 + "\x0a")(Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit))))();
              return exitWith(v1.value1)();
          };
      };
      if (v instanceof Options_Applicative_Types.CompletionInvoked) {
          return function __do() {
              var progn = getProgName();
              var msg = (Data_Newtype.un()(Options_Applicative_Types.CompletionResult)(v.value0)).execCompletion(progn)();
              Data_Functor["void"](Effect.functorEffect)(Node_Stream.writeString(Node_Process.stdout)(Node_Encoding.UTF8.value)(msg)(Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit))))();
              return exitSuccess();
          };
      };
      throw new Error("Failed pattern match at Options.Applicative.Extra (line 110, column 1 - line 110, column 58): " + [ v.constructor.name ]);
  };
  var execParserPure = function (pprefs) {
      return function (pinfo) {
          return function (args) {
              var pinfo$prime = Data_Newtype.over()()(Options_Applicative_Types.ParserInfo)(function (i) {
                  return {
                      infoParser: Control_Alt.alt(Options_Applicative_Types.parserAlt)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Data_Either.Left.create)(Options_Applicative_BashCompletion.bashCompletionParser(pinfo)(pprefs)))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Data_Either.Right.create)(i.infoParser)),
                      infoFailureCode: i.infoFailureCode,
                      infoFooter: i.infoFooter,
                      infoFullDesc: i.infoFullDesc,
                      infoHeader: i.infoHeader,
                      infoPolicy: i.infoPolicy,
                      infoProgDesc: i.infoProgDesc
                  };
              })(pinfo);
              var p = Options_Applicative_Common.runParserInfo(Options_Applicative_Internal.pMonadP)(pinfo$prime)(Data_List.fromFoldable(Data_Foldable.foldableArray)(args));
              var v = Options_Applicative_Internal.runP(p)(pprefs);
              if (v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Right) {
                  return new Options_Applicative_Types.Success(v.value0.value0.value0);
              };
              if (v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Left) {
                  return new Options_Applicative_Types.CompletionInvoked(v.value0.value0.value0);
              };
              if (v.value0 instanceof Data_Either.Left) {
                  return Options_Applicative_Types.Failure.create(parserFailure(pprefs)(pinfo)(v.value0.value0)(v.value1));
              };
              throw new Error("Failed pattern match at Options.Applicative.Extra (line 144, column 3 - line 147, column 73): " + [ v.constructor.name ]);
          };
      };
  };
  var customExecParser = function (pprefs) {
      return function (pinfo) {
          return Control_Bind.bind(Effect.bindEffect)(Data_Functor.map(Effect.functorEffect)(execParserPure(pprefs)(pinfo))(getArgs))(handleParseResult);
      };
  };
  var execParser = customExecParser(Options_Applicative_Builder.defaultPrefs);
  exports["helper"] = helper;
  exports["execParser"] = execParser;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Effect_Console = $PS["Effect.Console"];
  var Main_Shamir = $PS["Main.Shamir"];
  var Node_Buffer_Immutable = $PS["Node.Buffer.Immutable"];
  var Node_Encoding = $PS["Node.Encoding"];
  var Options_Applicative_Builder = $PS["Options.Applicative.Builder"];
  var Options_Applicative_Builder_Internal = $PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Extra = $PS["Options.Applicative.Extra"];
  var Options_Applicative_Internal_Utils = $PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = $PS["Options.Applicative.Types"];                
  var DismantleOptions = (function () {
      function DismantleOptions(value0) {
          this.value0 = value0;
      };
      DismantleOptions.create = function (value0) {
          return new DismantleOptions(value0);
      };
      return DismantleOptions;
  })();
  var AssembleOptions = (function () {
      function AssembleOptions(value0) {
          this.value0 = value0;
      };
      AssembleOptions.create = function (value0) {
          return new AssembleOptions(value0);
      };
      return AssembleOptions;
  })();
  var Dismantle = (function () {
      function Dismantle(value0) {
          this.value0 = value0;
      };
      Dismantle.create = function (value0) {
          return new Dismantle(value0);
      };
      return Dismantle;
  })();
  var Assemble = (function () {
      function Assemble(value0) {
          this.value0 = value0;
      };
      Assemble.create = function (value0) {
          return new Assemble(value0);
      };
      return Assemble;
  })();
  var dismantleOptionsParser = Control_Apply.apply(Options_Applicative_Types.parserApply)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(function (v) {
      return function (v1) {
          return function (v2) {
              return new Dismantle(new DismantleOptions({
                  secret: v,
                  shares: v1,
                  threshold: v2
              }));
          };
      };
  })(Options_Applicative_Builder.argument(Options_Applicative_Builder.str)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.argumentFieldsHasMetavar)("Secret"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.help("Secret to dismantle"))(Options_Applicative_Builder.showDefault(Data_Show.showString))))))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("shares"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("Shares"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["short"](Options_Applicative_Builder_Internal.optionFieldsHasName)("n"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(2))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.help("Number of shares to create"))(Options_Applicative_Builder.showDefault(Data_Show.showInt)))))))))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("threshold"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("Threshold"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["short"](Options_Applicative_Builder_Internal.optionFieldsHasName)("t"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(2))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.help("Number of shares required to assemble secret"))(Options_Applicative_Builder.showDefault(Data_Show.showInt))))))));
  var dismantle = function (v) {
      var buf = Node_Buffer_Immutable.fromString(v.value0.secret)(Node_Encoding.Hex.value);
      return function __do() {
          var shares = Main_Shamir.dismantle(buf)(v.value0.shares)(v.value0.threshold)();
          var strShares = Data_Functor.map(Data_Functor.functorArray)(Node_Buffer_Immutable.toString(Node_Encoding.Hex.value))(shares);
          return Effect_Class_Console.logShow(Effect_Class.monadEffectEffect)(Data_Show.showArray(Data_Show.showString))(strShares)();
      };
  };
  var assembleOptionsParser = Data_Functor.map(Options_Applicative_Types.parserFunctor)(function (v) {
      return new Assemble(new AssembleOptions({
          shares: v
      }));
  })(Options_Applicative_Types.many(Options_Applicative_Builder.argument(Options_Applicative_Builder.str)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.argumentFieldsHasMetavar)("SHARES..."))));
  var parser = Options_Applicative_Builder.subparser(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.command("dismantle")(Options_Applicative_Builder.info(Options_Applicative_Internal_Utils.apApplyFlipped(Options_Applicative_Types.parserApply)(dismantleOptionsParser)(Options_Applicative_Extra.helper))(Options_Applicative_Builder.progDesc("Dismantle secret to shares"))))(Options_Applicative_Builder.command("assemble")(Options_Applicative_Builder.info(Options_Applicative_Internal_Utils.apApplyFlipped(Options_Applicative_Types.parserApply)(assembleOptionsParser)(Options_Applicative_Extra.helper))(Options_Applicative_Builder.progDesc("Assemble shares to recreate secret")))));
  var opts = Options_Applicative_Builder.info(Options_Applicative_Internal_Utils.apApplyFlipped(Options_Applicative_Types.parserApply)(parser)(Options_Applicative_Extra.helper))(Data_Semigroup.append(Options_Applicative_Builder.infoModSemigroup)(Options_Applicative_Builder.fullDesc)(Options_Applicative_Builder.header("Dismantler - Dismantle secrets to shares using Shamir's secret sharing")));
  var assemble = function (v) {
      return function __do() {
          var secret = Main_Shamir.assemble(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.value0.shares))();
          var str = Node_Buffer_Immutable.toString(Node_Encoding.Hex.value)(secret);
          return Effect_Console.log(str)();
      };
  };
  var run = function (v) {
      if (v instanceof Dismantle) {
          return dismantle(v.value0);
      };
      if (v instanceof Assemble) {
          return assemble(v.value0);
      };
      throw new Error("Failed pattern match at Main (line 79, column 1 - line 79, column 33): " + [ v.constructor.name ]);
  };
  var main = Control_Bind.bind(Effect.bindEffect)(Options_Applicative_Extra.execParser(opts))(run);
  exports["dismantle"] = dismantle;
  exports["assemble"] = assemble;
  exports["DismantleOptions"] = DismantleOptions;
  exports["AssembleOptions"] = AssembleOptions;
  exports["Dismantle"] = Dismantle;
  exports["Assemble"] = Assemble;
  exports["dismantleOptionsParser"] = dismantleOptionsParser;
  exports["assembleOptionsParser"] = assembleOptionsParser;
  exports["parser"] = parser;
  exports["run"] = run;
  exports["opts"] = opts;
  exports["main"] = main;
})(PS);
PS["Main"].main();